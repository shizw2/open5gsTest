./src/upf/rule-match.c:        if (ip_h && sess->ipv4)
./src/upf/rule-match.c:            ogs_trace("PAA IPv4:%s", OGS_INET_NTOP(&sess->ipv4->addr, buf));
./src/upf/rule-match.c:        if (ip6_h && sess->ipv6)
./src/upf/rule-match.c:            ogs_trace("PAA IPv6:%s", OGS_INET6_NTOP(&sess->ipv6->addr, buf));
./src/upf/forward.c:    if(sess->bnbr)
./src/upf/forward.c:        //ogs_error("%s, destination ue %s is belong to nbr 0x%x\n", __func__, ip_printf(l3_head, 1), sess->nbraddr);
./src/upf/forward.c:        if(send_packet_to_nbr_ipip(lconf, m, sess->nbraddr) < 0)
./src/upf/forward.c:        fwd_handle_gtp_session_report(lconf->f2p_ring, pdr, *sess->upf_n4_seid_node);
./src/upf/forward.c:        if (!sess->ipv4_framed_routes || !sess->ipv4_framed_routes[i].family)
./src/upf/forward.c:        free_local_framed_route_from_trie(lconf, &sess->ipv4_framed_routes[i]);
./src/upf/forward.c:        if (!sess->ipv4_framed_routes || !sess->ipv4_framed_routes[i].family)
./src/upf/forward.c:        add_local_framed_route_to_trie(lconf, &sess->ipv4_framed_routes[i], sess);
./src/upf/forward.c:    old = ipv4_sess_find(lconf->ipv4_hash, sess->ipv4->addr[0]);
./src/upf/forward.c:        ipv4_hash_remove(lconf->ipv4_hash, sess->ipv4->addr[0]);
./src/upf/forward.c:    ipv4_hash_insert(lconf->ipv4_hash, sess->ipv4->addr[0], sess);
./src/upf/forward.c:    old = ipv4_sess_find(lconf->ipv4_hash, sess->ipv4->addr[0]);
./src/upf/forward.c:        ipv4_hash_remove(lconf->ipv4_hash, sess->ipv4->addr[0]);
./src/upf/forward.c:    ipv4_hash_insert(lconf->ipv4_hash, sess->ipv4->addr[0], sess);
./src/upf/forward.c:        ipv4_hash_remove(lconf->ipv4_hash, sess->ipv4->addr[0]);
./src/upf/forward.c:			new_sess->bnbr = 1;
./src/upf/forward.c:			new_sess->nbraddr = nbrmessage->serveraddr;
./src/upf/pfcp-path.c:    h.seid = sess->smf_n4_f_seid.seid;
./src/upf/pfcp-path.c:    h.seid = sess->smf_n4_f_seid.seid;
./src/upf/pfcp-path.c:    h.seid = sess->smf_n4_f_seid.seid;
./src/upf/pfcp-path.c:    h.seid = sess->smf_n4_f_seid.seid;
./src/upf/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_timeout, sess);
./src/upf/dpdk-path.c:        if (!sess || !sess->ipv4) {
./src/upf/dpdk-path.c:            if (!sess || !sess->ipv4){
./src/upf/dpdk-path.c:        ogs_debug("PAA IPv4:%s", ip2str(sess->ipv4->addr[0]));
./src/upf/dpdk-path.c:        if (!sess || !sess->ipv6) {
./src/upf/dpdk-path.c:        ogs_debug("PAA IPv6:%s", ip62str(sess->ipv6->addr));
./src/upf/dpdk-path.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/upf/dpdk-path.c:            if (!sess->ipv6) {
./src/upf/dpdk-path.c:            ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/upf/dpdk-path.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/upf/dpdk-path.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/upf/context.c:    ogs_pfcp_pool_init(&sess->pfcp);
./src/upf/context.c:    ogs_pool_alloc(&upf_n4_seid_pool, &sess->upf_n4_seid_node);
./src/upf/context.c:    ogs_assert(sess->upf_n4_seid_node);
./src/upf/context.c:    sess->upf_n4_seid = *(sess->upf_n4_seid_node);
./src/upf/context.c:    ogs_hash_set(self.upf_n4_seid_hash, &sess->upf_n4_seid,
./src/upf/context.c:            sizeof(sess->upf_n4_seid), sess);
./src/upf/context.c:    sess->smf_n4_f_seid.seid = cp_f_seid->seid;
./src/upf/context.c:            ogs_pfcp_f_seid_to_ip(cp_f_seid, &sess->smf_n4_f_seid.ip));
./src/upf/context.c:    ogs_hash_set(self.smf_n4_f_seid_hash, &sess->smf_n4_f_seid,
./src/upf/context.c:            sizeof(sess->smf_n4_f_seid), sess);
./src/upf/context.c:    ogs_hash_set(self.smf_n4_seid_hash, &sess->smf_n4_f_seid.seid,
./src/upf/context.c:            sizeof(sess->smf_n4_f_seid.seid), sess);
./src/upf/context.c:    ogs_pfcp_sess_clear(&sess->pfcp);
./src/upf/context.c:    ogs_hash_set(self.upf_n4_seid_hash, &sess->upf_n4_seid,
./src/upf/context.c:            sizeof(sess->upf_n4_seid), NULL);
./src/upf/context.c:    ogs_hash_set(self.smf_n4_seid_hash, &sess->smf_n4_f_seid.seid,
./src/upf/context.c:            sizeof(sess->smf_n4_f_seid.seid), NULL);
./src/upf/context.c:    ogs_hash_set(self.smf_n4_f_seid_hash, &sess->smf_n4_f_seid,
./src/upf/context.c:            sizeof(sess->smf_n4_f_seid), NULL);
./src/upf/context.c:    if (sess->ipv4) {
./src/upf/context.c:        ogs_hash_set(self.ipv4_hash, sess->ipv4->addr, OGS_IPV4_LEN, NULL);
./src/upf/context.c:        ogs_pfcp_ue_ip_free(sess->ipv4);
./src/upf/context.c:    if (sess->ipv6) {
./src/upf/context.c:                sess->ipv6->addr, OGS_IPV6_DEFAULT_PREFIX_LEN >> 3, NULL);
./src/upf/context.c:        ogs_pfcp_ue_ip_free(sess->ipv6);
./src/upf/context.c:    ogs_pfcp_pool_final(&sess->pfcp);
./src/upf/context.c:    ogs_pool_free(&upf_n4_seid_pool, sess->upf_n4_seid_node);
./src/upf/context.c:    if (sess->apn_dnn)
./src/upf/context.c:        ogs_free(sess->apn_dnn);
./src/upf/context.c:    if (sess->ipv4) {
./src/upf/context.c:                sess->ipv4->addr, OGS_IPV4_LEN, NULL);
./src/upf/context.c:        ogs_pfcp_ue_ip_free(sess->ipv4);
./src/upf/context.c:    if (sess->ipv6) {
./src/upf/context.c:                sess->ipv6->addr, OGS_IPV6_DEFAULT_PREFIX_LEN >> 3, NULL);
./src/upf/context.c:        ogs_pfcp_ue_ip_free(sess->ipv6);
./src/upf/context.c:            sess->ipv4 = ogs_pfcp_ue_ip_alloc(&cause_value, AF_INET,
./src/upf/context.c:            if (!sess->ipv4) {
./src/upf/context.c:            ogs_hash_set(self.ipv4_hash, sess->ipv4->addr, OGS_IPV4_LEN, sess);
./src/upf/context.c:            sess->ipv6 = ogs_pfcp_ue_ip_alloc(&cause_value, AF_INET6,
./src/upf/context.c:            if (!sess->ipv6) {
./src/upf/context.c:            ogs_hash_set(self.ipv6_hash, sess->ipv6->addr,
./src/upf/context.c:            sess->ipv4 = ogs_pfcp_ue_ip_alloc(&cause_value, AF_INET,
./src/upf/context.c:            if (!sess->ipv4) {
./src/upf/context.c:            ogs_hash_set(self.ipv4_hash, sess->ipv4->addr, OGS_IPV4_LEN, sess);
./src/upf/context.c:            sess->ipv6 = ogs_pfcp_ue_ip_alloc(&cause_value, AF_INET6,
./src/upf/context.c:            if (!sess->ipv6) {
./src/upf/context.c:                if (sess->ipv4) {
./src/upf/context.c:                            sess->ipv4->addr, OGS_IPV4_LEN, NULL);
./src/upf/context.c:                    ogs_pfcp_ue_ip_free(sess->ipv4);
./src/upf/context.c:                    sess->ipv4 = NULL;
./src/upf/context.c:            ogs_hash_set(self.ipv6_hash, sess->ipv6->addr,
./src/upf/context.c:        (long)sess->upf_n4_seid, (long)sess->smf_n4_f_seid.seid,
./src/upf/context.c:        sess->ipv4 ? OGS_INET_NTOP(&sess->ipv4->addr, buf1) : "",
./src/upf/context.c:        sess->ipv6 ? OGS_INET6_NTOP(&sess->ipv6->addr, buf2) : "");
./src/upf/context.c:        if (!sess->ipv4_framed_routes || !sess->ipv4_framed_routes[i].family)
./src/upf/context.c:        free_framed_route_from_trie(&sess->ipv4_framed_routes[i]);
./src/upf/context.c:        memset(&sess->ipv4_framed_routes[i], 0,
./src/upf/context.c:               sizeof(sess->ipv4_framed_routes[i]));
./src/upf/context.c:        if (sess->ipv4_framed_routes == NULL) {
./src/upf/context.c:            sess->ipv4_framed_routes = ogs_calloc(
./src/upf/context.c:            ogs_assert(sess->ipv4_framed_routes);
./src/upf/context.c:        rv = parse_framed_route(&sess->ipv4_framed_routes[j], framed_routes[i]);
./src/upf/context.c:            memset(&sess->ipv4_framed_routes[j], 0,
./src/upf/context.c:                   sizeof(sess->ipv4_framed_routes[j]));
./src/upf/context.c:        add_framed_route_to_trie(&sess->ipv4_framed_routes[j], sess);
./src/upf/context.c:    if (j == 0 && sess->ipv4_framed_routes) {
./src/upf/context.c:        ogs_free(sess->ipv4_framed_routes);
./src/upf/context.c:        sess->ipv4_framed_routes = NULL;
./src/upf/context.c:        if (!sess->ipv6_framed_routes || !sess->ipv6_framed_routes[i].family)
./src/upf/context.c:        free_framed_route_from_trie(&sess->ipv6_framed_routes[i]);
./src/upf/context.c:        if (sess->ipv6_framed_routes == NULL) {
./src/upf/context.c:            sess->ipv6_framed_routes = ogs_calloc(
./src/upf/context.c:            ogs_assert(sess->ipv6_framed_routes);
./src/upf/context.c:        rv = parse_framed_route(&sess->ipv6_framed_routes[j], framed_routes[i]);
./src/upf/context.c:            memset(&sess->ipv6_framed_routes[j], 0,
./src/upf/context.c:                   sizeof(sess->ipv6_framed_routes[j]));
./src/upf/context.c:        add_framed_route_to_trie(&sess->ipv6_framed_routes[j], sess);
./src/upf/context.c:    if (j == 0 && sess->ipv6_framed_routes) {
./src/upf/context.c:        ogs_free(sess->ipv6_framed_routes);
./src/upf/context.c:        sess->ipv6_framed_routes = NULL;
./src/upf/context.c:    upf_sess_urr_acc_t *urr_acc = &sess->urr_acc[urr->id];
./src/upf/context.c:    upf_sess_urr_acc_t *urr_acc = &sess->urr_acc[urr->id];
./src/upf/context.c:    upf_sess_urr_acc_t *urr_acc = &sess->urr_acc[urr->id];
./src/upf/context.c:    upf_sess_urr_acc_t *urr_acc = &sess->urr_acc[urr->id];
./src/upf/context.c:    upf_sess_urr_acc_t *urr_acc = &sess->urr_acc[urr->id];
./src/upf/context.c:    upf_sess_urr_acc_t *urr_acc = &sess->urr_acc[urr->id];
./src/upf/context.c:    upf_sess_urr_acc_t *urr_acc = &sess->urr_acc[urr->id];
./src/upf/context.c:    for (i = 0; i < OGS_ARRAY_SIZE(sess->urr_acc); i++) {
./src/upf/context.c:        if (sess->urr_acc[i].t_time_threshold) {
./src/upf/context.c:            ogs_timer_delete(sess->urr_acc[i].t_time_threshold);
./src/upf/context.c:            sess->urr_acc[i].t_time_threshold = NULL;
./src/upf/context.c:        if (sess->urr_acc[i].t_validity_time) {
./src/upf/context.c:            ogs_timer_delete(sess->urr_acc[i].t_validity_time);
./src/upf/context.c:            sess->urr_acc[i].t_validity_time = NULL;
./src/upf/context.c:        if (sess->urr_acc[i].t_time_quota) {
./src/upf/context.c:            ogs_timer_delete(sess->urr_acc[i].t_time_quota);
./src/upf/context.c:            sess->urr_acc[i].t_time_quota = NULL;
./src/upf/context.c:			new_sess->bnbr = 1;
./src/upf/context.c:			new_sess->nbraddr = nbrmessage->serveraddr;
./src/upf/context.c:	        if(sess && sess->ipv4)
./src/upf/context.c:	            nbrmessage.addr[nbrmessage.uenum++] = sess->ipv4->addr[0];
./src/upf/context.c:			    ogs_error("%s, sess->nbraddr 0x%x\n", __func__, sess->nbraddr);
./src/upf/context.c:			if(sess && sess->nbraddr == ip)
./src/upf/n4-handler.c:        urr = ogs_pfcp_handle_create_urr(&sess->pfcp, &create_urr_arr[i],
./src/upf/n4-handler.c:        created_pdr[i] = ogs_pfcp_handle_create_pdr(&sess->pfcp,
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_create_far(&sess->pfcp, &req->create_far[i],
./src/upf/n4-handler.c:        if (sess->apn_dnn)
./src/upf/n4-handler.c:            ogs_free(sess->apn_dnn);
./src/upf/n4-handler.c:        sess->apn_dnn = ogs_strdup(apn_dnn);
./src/upf/n4-handler.c:        ogs_assert(sess->apn_dnn);
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_create_qer(&sess->pfcp, &req->create_qer[i],
./src/upf/n4-handler.c:        upf_metrics_inst_by_dnn_add(sess->apn_dnn,
./src/upf/n4-handler.c:    ogs_pfcp_handle_create_bar(&sess->pfcp, &req->create_bar,
./src/upf/n4-handler.c:    ogs_list_for_each(&sess->pfcp.far_list, far) {
./src/upf/n4-handler.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/upf/n4-handler.c:    ogs_pfcp_sess_clear(&sess->pfcp);
./src/upf/n4-handler.c:    ogs_pfcp_send_error_message(xact, sess ? sess->smf_n4_f_seid.seid : 0,
./src/upf/n4-handler.c:        created_pdr[i] = ogs_pfcp_handle_create_pdr(&sess->pfcp,
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_update_pdr(&sess->pfcp, &req->update_pdr[i],
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_remove_pdr(&sess->pfcp, &req->remove_pdr[i],
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_create_far(&sess->pfcp, &req->create_far[i],
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_update_far_flags(&sess->pfcp, &req->update_far[i],
./src/upf/n4-handler.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/upf/n4-handler.c:    ogs_list_for_each(&sess->pfcp.far_list, far)
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_update_far(&sess->pfcp, &req->update_far[i],
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_remove_far(&sess->pfcp, &req->remove_far[i],
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_update_urr(&sess->pfcp, &req->update_urr[i],
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_remove_urr(&sess->pfcp, &req->remove_urr[i],
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_create_qer(&sess->pfcp, &req->create_qer[i],
./src/upf/n4-handler.c:        upf_metrics_inst_by_dnn_add(sess->apn_dnn,
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_update_qer(&sess->pfcp, &req->update_qer[i],
./src/upf/n4-handler.c:        if (ogs_pfcp_handle_remove_qer(&sess->pfcp, &req->remove_qer[i],
./src/upf/n4-handler.c:        upf_metrics_inst_by_dnn_add(sess->apn_dnn,
./src/upf/n4-handler.c:    ogs_pfcp_handle_create_bar(&sess->pfcp, &req->create_bar,
./src/upf/n4-handler.c:    ogs_pfcp_handle_remove_bar(&sess->pfcp, &req->remove_bar,
./src/upf/n4-handler.c:    ogs_list_for_each(&sess->pfcp.far_list, far) {
./src/upf/n4-handler.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/upf/n4-handler.c:    ogs_pfcp_sess_clear(&sess->pfcp);
./src/upf/n4-handler.c:    ogs_pfcp_send_error_message(xact, sess ? sess->smf_n4_f_seid.seid : 0,
./src/upf/n4-handler.c:    if(sess->ipv4)
./src/upf/n4-handler.c:        upf_send_singlelocalueip_to_nbrclient_del(sess->ipv4->addr[0]);
./src/upf/n4-handler.c:    ogs_list_for_each(&sess->pfcp.qer_list, qer) {
./src/upf/n4-handler.c:        upf_metrics_inst_by_dnn_add(sess->apn_dnn,
./src/upf/n4-build.c:    f_seid.seid = htobe64(sess->upf_n4_seid);
./src/upf/n4-build.c:    ogs_list_for_each(&sess->pfcp.urr_list, urr) {
./src/upf/telnetcmd.c:               sess->upf_n4_seid,
./src/upf/telnetcmd.c:               sess->smf_n4_f_seid.seid,
./src/upf/telnetcmd.c:               sess->smf_n4_f_seid.ip.ipv4 ? ogs_ipv4_to_string(sess->smf_n4_f_seid.ip.addr):"",
./src/upf/telnetcmd.c:               sess->ipv4 ? OGS_INET_NTOP(&sess->ipv4->addr, buf1) : "",
./src/upf/telnetcmd.c:               sess->ipv6 ? OGS_INET6_NTOP(&sess->ipv6->addr, buf2) : "",
./src/upf/telnetcmd.c:               sess->apn_dnn);
./src/upf/telnetcmd.c:    printf("  |--upf_n4_seid        : %lu \r\n", sess->upf_n4_seid);
./src/upf/telnetcmd.c:    printf("  |--smf_n4_seid        : %lu \r\n", sess->smf_n4_f_seid.seid);
./src/upf/telnetcmd.c:    printf("  |--smf_n4_ip          : %s \r\n", ogs_ipv4_to_string(sess->smf_n4_f_seid.ip.addr));
./src/upf/telnetcmd.c:    printf("      |--pdr_cnt           : %d \r\n", ogs_list_count(&sess->pfcp.pdr_list));
./src/upf/telnetcmd.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr){
./src/upf/telnetcmd.c:    printf("     |--far_cnt           : %d \r\n", ogs_list_count(&sess->pfcp.far_list));
./src/upf/telnetcmd.c:    ogs_list_for_each(&sess->pfcp.far_list, far){
./src/upf/telnetcmd.c:    printf("     |--urr_cnt           : %d \r\n", ogs_list_count(&sess->pfcp.urr_list));
./src/upf/telnetcmd.c:    ogs_list_for_each(&sess->pfcp.urr_list, urr){
./src/upf/telnetcmd.c:    printf("     |--qer_cnt           : %d \r\n", ogs_list_count(&sess->pfcp.qer_list));
./src/upf/telnetcmd.c:    ogs_list_for_each(&sess->pfcp.qer_list, qer){
./src/upf/pfcp-sm.c:        if (node == sess->pfcp_node) {
./src/upf/pfcp-sm.c:                (long)sess->upf_n4_seid, (long)sess->smf_n4_f_seid.seid,
./src/upf/pfcp-sm.c:                sess->ipv4 ? OGS_INET_NTOP(&sess->ipv4->addr, buf1) : "",
./src/upf/pfcp-sm.c:                sess->ipv6 ? OGS_INET6_NTOP(&sess->ipv6->addr, buf2) : "");
./src/upf/ctrl-path.c:    ogs_list_add(&pfcp_sess->far_list, new);
./src/upf/ctrl-path.c:    ogs_list_add(&pfcp_sess->urr_list, new);
./src/upf/ctrl-path.c:    ogs_list_add(&pfcp_sess->qer_list, new);
./src/upf/ctrl-path.c:    new_sess->obj = old_sess->obj;
./src/upf/ctrl-path.c:    ogs_list_init(&new_sess->pdr_list);
./src/upf/ctrl-path.c:    ogs_list_init(&new_sess->far_list);
./src/upf/ctrl-path.c:    ogs_list_init(&new_sess->urr_list);
./src/upf/ctrl-path.c:    ogs_list_init(&new_sess->qer_list);
./src/upf/ctrl-path.c:    ogs_list_for_each(&old_sess->pdr_list, pdr) {
./src/upf/ctrl-path.c:        ogs_list_add(&new_sess->pdr_list, new_pdr);
./src/upf/ctrl-path.c:    ogs_list_for_each(&new_sess->pdr_list, pdr) {
./src/upf/ctrl-path.c:    if (old_sess->bar) {
./src/upf/ctrl-path.c:        new_sess->bar = dpdk_malloc(sizeof(ogs_pfcp_bar_t));
./src/upf/ctrl-path.c:        new_sess->bar->id = old_sess->bar->id;
./src/upf/ctrl-path.c:        new_sess->bar->sess = new_sess;
./src/upf/ctrl-path.c:    new_sess->upf_n4_seid_node = old_sess->upf_n4_seid_node;
./src/upf/ctrl-path.c:    new_sess->upf_n4_seid = old_sess->upf_n4_seid;
./src/upf/ctrl-path.c:    new_sess->smf_n4_f_seid.seid = old_sess->smf_n4_f_seid.seid;
./src/upf/ctrl-path.c:    ret = copy_pfcp_sess(&new_sess->pfcp, &old_sess->pfcp);
./src/upf/ctrl-path.c:    if (old_sess->ipv4) {
./src/upf/ctrl-path.c:        new_sess->ipv4 = dpdk_malloc(sizeof(ogs_pfcp_ue_ip_t));
./src/upf/ctrl-path.c:        memcpy(new_sess->ipv4, old_sess->ipv4, sizeof(ogs_pfcp_ue_ip_t));
./src/upf/ctrl-path.c:        if (old_sess->ipv4->subnet) {
./src/upf/ctrl-path.c:            new_sess->ipv4->subnet = dpdk_malloc(sizeof(ogs_pfcp_subnet_t));
./src/upf/ctrl-path.c:            memcpy(new_sess->ipv4->subnet, old_sess->ipv4->subnet, sizeof(ogs_pfcp_subnet_t));
./src/upf/ctrl-path.c:    if (old_sess->ipv6) {
./src/upf/ctrl-path.c:        new_sess->ipv6 = dpdk_malloc(sizeof(ogs_pfcp_ue_ip_t));
./src/upf/ctrl-path.c:        memcpy(new_sess->ipv6, old_sess->ipv6, sizeof(ogs_pfcp_ue_ip_t));
./src/upf/ctrl-path.c:        if (old_sess->ipv6->subnet) {
./src/upf/ctrl-path.c:            new_sess->ipv6->subnet = dpdk_malloc(sizeof(ogs_pfcp_subnet_t));
./src/upf/ctrl-path.c:            memcpy(new_sess->ipv6->subnet, old_sess->ipv6->subnet, sizeof(ogs_pfcp_subnet_t));
./src/upf/ctrl-path.c:    if (old_sess->ipv4_framed_routes) {
./src/upf/ctrl-path.c:        new_sess->ipv4_framed_routes = dpdk_malloc(sizeof(ogs_ipsubnet_t));
./src/upf/ctrl-path.c:        memcpy(new_sess->ipv4_framed_routes, old_sess->ipv4_framed_routes, sizeof(ogs_ipsubnet_t));
./src/upf/ctrl-path.c:    if (old_sess->ipv6_framed_routes) {
./src/upf/ctrl-path.c:        new_sess->ipv6_framed_routes = dpdk_malloc(sizeof(ogs_ipsubnet_t));
./src/upf/ctrl-path.c:        memcpy(new_sess->ipv6_framed_routes, old_sess->ipv6_framed_routes, sizeof(ogs_ipsubnet_t));
./src/upf/ctrl-path.c:    ogs_list_for_each(&upf_sess->pfcp.pdr_list, pdr) {
./src/upf/ctrl-path.c:    if (upf_sess->pfcp.bar) {
./src/upf/ctrl-path.c:        dpdk_free(upf_sess->pfcp.bar);
./src/upf/ctrl-path.c:    if (upf_sess->ipv4) {
./src/upf/ctrl-path.c:        if (upf_sess->ipv4->subnet) {
./src/upf/ctrl-path.c:            dpdk_free(upf_sess->ipv4->subnet);
./src/upf/ctrl-path.c:        dpdk_free(upf_sess->ipv4);
./src/upf/ctrl-path.c:    if (upf_sess->ipv6) {
./src/upf/ctrl-path.c:        if (upf_sess->ipv6->subnet) {
./src/upf/ctrl-path.c:            dpdk_free(upf_sess->ipv6->subnet);
./src/upf/ctrl-path.c:        dpdk_free(upf_sess->ipv6);
./src/upf/ctrl-path.c:    if (sess->ipv4) {
./src/upf/ctrl-path.c:        ipv4 = sess->ipv4->addr[0];
./src/upf/ctrl-path.c:    ogs_debug("CP send event type=%d, sess index=%d, upf seid=%ld", event->event_type, *sess->upf_n4_seid_node, sess->upf_n4_seid);
./src/upf/ctrl-path.c:    event->event_body = (void *) (uintptr_t)sess->ipv4->addr[0];
./src/upf/gtp-path.c:        sess->ipv4_framed_routes : sess->ipv6_framed_routes;
./src/upf/gtp-path.c:    //如果是sess->bnbr，则添加IP头，发送IP over IP报文
./src/upf/gtp-path.c:    if (sess && sess->bnbr) {
./src/upf/gtp-path.c:        ip_header->ip_dst.s_addr  = sess->nbraddr;
./src/upf/gtp-path.c:        if (sess->nbraddr == 0){
./src/upf/gtp-path.c:            inet_pton(AF_INET, "10.7.202.111", &sess->nbraddr);
./src/upf/gtp-path.c:        sin.sin_addr.s_addr = sess->nbraddr;
./src/upf/gtp-path.c:        ogs_info("it is a nbr pkt,sendto:0x%x",sess->nbraddr);
./src/upf/gtp-path.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/upf/gtp-path.c:            ogs_list_for_each(&pfcp_sess->pdr_list, pdr) {
./src/upf/gtp-path.c:        ogs_assert(pdr->sess->obj.type == OGS_PFCP_OBJ_SESS_TYPE);
./src/upf/gtp-path.c:        if (ip_h->ip_v == 4 && sess->ipv4) {
./src/upf/gtp-path.c:                if (src_addr[0] == sess->ipv4->addr[0]) {
./src/upf/gtp-path.c:                        be32toh(src_addr[0]), be32toh(sess->ipv4->addr[0]));
./src/upf/gtp-path.c:            subnet = sess->ipv4->subnet;
./src/upf/gtp-path.c:        } else if (ip_h->ip_v == 6 && sess->ipv6) {
./src/upf/gtp-path.c:                    src_addr[2] == sess->ipv6->addr[2] &&
./src/upf/gtp-path.c:                    src_addr[3] == sess->ipv6->addr[3]) {
./src/upf/gtp-path.c:                } else if (src_addr[0] == sess->ipv6->addr[0] &&
./src/upf/gtp-path.c:                            src_addr[1] == sess->ipv6->addr[1]) {
./src/upf/gtp-path.c:                            be32toh(sess->ipv6->addr[0]),
./src/upf/gtp-path.c:                            be32toh(sess->ipv6->addr[1]),
./src/upf/gtp-path.c:                            be32toh(sess->ipv6->addr[2]),
./src/upf/gtp-path.c:                            be32toh(sess->ipv6->addr[3]));
./src/upf/gtp-path.c:            subnet = sess->ipv6->subnet;
./src/upf/gtp-path.c:                        ip_h->ip_v, sess->ipv4, sess->ipv6);
./src/upf/gtp-path.c:                    //如果是sess->bnbr，则添加IP头，发送IP over IP报文
./src/upf/gtp-path.c:                    //if (sess && sess->bnbr) {
./src/upf/gtp-path.c:                        //ip_header->ip_dst.s_addr  = sess->nbraddr;
./src/upf/gtp-path.c:                        //ip_header->ip_src.s_addr  = sess->nbraddr;
./src/upf/gtp-path.c:                if (sess->ipv6) {
./src/upf/gtp-path.c:                    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/upf/gtp-path.c:    //TODO:如果是sess->bnbr，则添加IP头，发送IP over IP报文
./src/upf/gtp-path.c:    if (sess->bnbr) {
./src/upf/gtp-path.c:        ip_header->ip_dst.s_addr  = sess->nbraddr;
./src/upf/gtp-path.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/pcf/nnrf-handler.c:        pcf_ue = sess->pcf_ue;
./src/pcf/nnrf-handler.c:                    sess ? sess->psi : 0,
./src/pcf/nsmf-build.c:    ogs_assert(sess->sm_policy_id);
./src/pcf/nsmf-build.c:    ogs_assert(sess->notification_uri);
./src/pcf/nsmf-build.c:    header.resource.component[1] = sess->sm_policy_id;
./src/pcf/nsmf-build.c:            sess->notification_uri, OGS_SBI_RESOURCE_NAME_UPDATE);
./src/pcf/nsmf-build.c:    ogs_assert(sess->sm_policy_id);
./src/pcf/nsmf-build.c:    ogs_assert(sess->notification_uri);
./src/pcf/nsmf-build.c:    header.resource.component[1] = sess->sm_policy_id;
./src/pcf/nsmf-build.c:            sess->notification_uri, OGS_SBI_RESOURCE_NAME_TERMINATE);
./src/pcf/context.c:    ogs_list_init(&sess->app_list);
./src/pcf/context.c:    sess->sbi.type = OGS_SBI_OBJ_SESS_TYPE;
./src/pcf/context.c:    OGS_SBI_FEATURES_SET(sess->smpolicycontrol_features,
./src/pcf/context.c:    OGS_SBI_FEATURES_SET(sess->management_features,
./src/pcf/context.c:    OGS_SBI_FEATURES_SET(sess->policyauthorization_features,
./src/pcf/context.c:    OGS_SBI_FEATURES_SET(sess->policyauthorization_features,
./src/pcf/context.c:    sess->sm_policy_id = ogs_msprintf("%d",
./src/pcf/context.c:    ogs_assert(sess->sm_policy_id);
./src/pcf/context.c:    ogs_info("test:pcf_sess_add,sm_policy_id:%s.",sess->sm_policy_id);
./src/pcf/context.c:    sess->pcf_ue = pcf_ue;
./src/pcf/context.c:    sess->psi = psi;
./src/pcf/context.c:    sess->s_nssai.sst = 0;
./src/pcf/context.c:    sess->s_nssai.sd.v = OGS_S_NSSAI_NO_SD_VALUE;
./src/pcf/context.c:    ogs_fsm_init(&sess->sm, pcf_sm_state_initial, pcf_sm_state_final, &e);
./src/pcf/context.c:    ogs_assert(sess->pcf_ue);
./src/pcf/context.c:    ogs_list_remove(&sess->pcf_ue->sess_list, sess);
./src/pcf/context.c:    ogs_fsm_fini(&sess->sm, &e);
./src/pcf/context.c:    if (ogs_list_count(&sess->sbi.xact_list))
./src/pcf/context.c:                ogs_list_count(&sess->sbi.xact_list));
./src/pcf/context.c:    ogs_sbi_object_free(&sess->sbi);
./src/pcf/context.c:    ogs_assert(sess->sm_policy_id);
./src/pcf/context.c:    ogs_free(sess->sm_policy_id);
./src/pcf/context.c:    if (sess->binding.client)
./src/pcf/context.c:        ogs_sbi_client_remove(sess->binding.client);
./src/pcf/context.c:    if (sess->dnn)
./src/pcf/context.c:        ogs_free(sess->dnn);
./src/pcf/context.c:    if (sess->full_dnn)
./src/pcf/context.c:        ogs_free(sess->full_dnn);
./src/pcf/context.c:    if (sess->notification_uri)
./src/pcf/context.c:        ogs_free(sess->notification_uri);
./src/pcf/context.c:    if (sess->nsmf.client)
./src/pcf/context.c:        ogs_sbi_client_remove(sess->nsmf.client);
./src/pcf/context.c:    OpenAPI_clear_and_free_string_list(sess->ipv4_frame_route_list);
./src/pcf/context.c:    OpenAPI_clear_and_free_string_list(sess->ipv6_frame_route_list);
./src/pcf/context.c:    if (sess->subscribed_sess_ambr)
./src/pcf/context.c:        OpenAPI_ambr_free(sess->subscribed_sess_ambr);
./src/pcf/context.c:    if (sess->subscribed_default_qos)
./src/pcf/context.c:        OpenAPI_subscribed_default_qos_free(sess->subscribed_default_qos);
./src/pcf/context.c:    ogs_info("test:pcf_sess_remove,sm_policy_id:%s.",sess->sm_policy_id);
./src/pcf/context.c:    if (sess->ipv4addr_string) {
./src/pcf/context.c:                &sess->ipv4addr, sizeof(sess->ipv4addr), NULL);
./src/pcf/context.c:        ogs_free(sess->ipv4addr_string);
./src/pcf/context.c:    if (sess->ipv6prefix_string) {
./src/pcf/context.c:                &sess->ipv6prefix, (sess->ipv6prefix.len >> 3) + 1, NULL);
./src/pcf/context.c:        ogs_free(sess->ipv6prefix_string);
./src/pcf/context.c:    rv = ogs_ipv4_from_string(&sess->ipv4addr, ipv4addr_string);
./src/pcf/context.c:    sess->ipv4addr_string = ogs_strdup(ipv4addr_string);
./src/pcf/context.c:    if (!sess->ipv4addr_string) {
./src/pcf/context.c:            &sess->ipv4addr, sizeof(sess->ipv4addr), sess);
./src/pcf/context.c:            sess->ipv6prefix.addr6, &sess->ipv6prefix.len, ipv6prefix_string);
./src/pcf/context.c:    ogs_assert(sess->ipv6prefix.len == OGS_IPV6_128_PREFIX_LEN);
./src/pcf/context.c:    sess->ipv6prefix_string = ogs_strdup(ipv6prefix_string);
./src/pcf/context.c:    if (!sess->ipv6prefix_string) {
./src/pcf/context.c:            &sess->ipv6prefix, (sess->ipv6prefix.len >> 3) + 1, sess);
./src/pcf/context.c:        if (psi == sess->psi) return sess;
./src/pcf/context.c:        if (sess->s_nssai.sst == s_nssai->sst &&
./src/pcf/context.c:            sess->dnn && ogs_strcasecmp(sess->dnn, dnn) == 0)
./src/pcf/context.c:    ogs_list_add(&sess->app_list, app);
./src/pcf/context.c:    ogs_list_remove(&app->sess->app_list, app);
./src/pcf/context.c:    ogs_list_for_each_safe(&sess->app_list, next_app, app)
./src/pcf/sbi-path.c:            xact->supi_id = ogs_id_get_value(sess->pcf_ue->supi);
./src/pcf/sbi-path.c:    xact = ogs_sbi_xact_add(&sess->sbi, service_type, NULL, NULL, NULL, NULL);
./src/pcf/sbi-path.c:    xact->supi_id = ogs_id_get_value(sess->pcf_ue->supi);
./src/pcf/sbi-path.c:                &sess->sbi, service_type, discovery_option,
./src/pcf/sbi-path.c:    client = sess->nsmf.client;
./src/pcf/sbi-path.c:    client = sess->nsmf.client;
./src/pcf/sbi-path.c:    client = sess->nsmf.client;
./src/pcf/nudr-handler.c:    pcf_ue = sess->pcf_ue;
./src/pcf/nudr-handler.c:                    pcf_ue->supi, sess->psi);
./src/pcf/nudr-handler.c:        nf_instance = sess->sbi.service_type_array[service_type].nf_instance;
./src/pcf/nudr-handler.c:                        sess->sbi.service_type_array[service_type],
./src/pcf/nudr-handler.c:                    pcf_ue->supi, sess->psi, recvmsg->h.resource.component[3]);
./src/pcf/nbsf-build.c:    pcf_ue = sess->pcf_ue;
./src/pcf/nbsf-build.c:    PcfBinding.ipv4_addr = sess->ipv4addr_string;
./src/pcf/nbsf-build.c:    PcfBinding.ipv6_prefix = sess->ipv6prefix_string;
./src/pcf/nbsf-build.c:    PcfBinding.ipv4_frame_route_list = sess->ipv4_frame_route_list;
./src/pcf/nbsf-build.c:    PcfBinding.ipv6_frame_route_list = sess->ipv6_frame_route_list;
./src/pcf/nbsf-build.c:    if (!sess->dnn) {
./src/pcf/nbsf-build.c:    PcfBinding.dnn = sess->dnn;
./src/pcf/nbsf-build.c:    if (!sess->s_nssai.sst) {
./src/pcf/nbsf-build.c:    sNssai.sst = sess->s_nssai.sst;
./src/pcf/nbsf-build.c:    sNssai.sd = ogs_s_nssai_sd_to_string(sess->s_nssai.sd);
./src/pcf/nbsf-build.c:    if (sess->management_features) {
./src/pcf/nbsf-build.c:        PcfBinding.supp_feat = ogs_uint64_to_string(sess->management_features);
./src/pcf/nbsf-build.c:    pcf_ue = sess->pcf_ue;
./src/pcf/nbsf-build.c:    ogs_assert(sess->binding.resource_uri);
./src/pcf/nbsf-build.c:    message.h.uri = sess->binding.resource_uri;
./src/pcf/nbsf-handler.c:    pcf_ue = sess->pcf_ue;
./src/pcf/nbsf-handler.c:    ogs_assert(sess->dnn);
./src/pcf/nbsf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/nbsf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/nbsf-handler.c:        sess->management_features &= supported_features;
./src/pcf/nbsf-handler.c:                pcf_ue->supi, sess->psi, recvmsg->http.location);
./src/pcf/nbsf-handler.c:                pcf_ue->supi, sess->psi, recvmsg->http.location);
./src/pcf/nbsf-handler.c:                pcf_ue->supi, sess->psi, header.uri);
./src/pcf/nbsf-handler.c:        ogs_debug("[%s:%d] ogs_sbi_client_add()", pcf_ue->supi, sess->psi);
./src/pcf/nbsf-handler.c:                    pcf_ue->supi, sess->psi);
./src/pcf/nbsf-handler.c:    OGS_SBI_SETUP_CLIENT(&sess->binding, client);
./src/pcf/nbsf-handler.c:            sess->home.presence == true ? &sess->home.plmn_id : NULL,
./src/pcf/nbsf-handler.c:            &sess->s_nssai, sess->dnn, &session_data);
./src/pcf/nbsf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/nbsf-handler.c:        strerror = ogs_msprintf("[%s:%d] No 5QI", pcf_ue->supi, sess->psi);
./src/pcf/nbsf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/nbsf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/nbsf-handler.c:    if (OGS_SBI_FEATURES_IS_SET(sess->smpolicycontrol_features,
./src/pcf/nbsf-handler.c:        if (sess->subscribed_sess_ambr) {
./src/pcf/nbsf-handler.c:                    sess->subscribed_sess_ambr->uplink);
./src/pcf/nbsf-handler.c:                    sess->subscribed_sess_ambr->downlink);
./src/pcf/nbsf-handler.c:    if (sess->subscribed_default_qos) {
./src/pcf/nbsf-handler.c:        if (sess->subscribed_default_qos->_5qi != AuthDefQos._5qi)
./src/pcf/nbsf-handler.c:        if (sess->subscribed_default_qos->priority_level !=
./src/pcf/nbsf-handler.c:        if (sess->subscribed_default_qos->arp) {
./src/pcf/nbsf-handler.c:            if (sess->subscribed_default_qos->arp->priority_level !=
./src/pcf/nbsf-handler.c:            if (sess->subscribed_default_qos->arp->preempt_cap !=
./src/pcf/nbsf-handler.c:            if (sess->subscribed_default_qos->arp->preempt_vuln !=
./src/pcf/nbsf-handler.c:    if (sess->smpolicycontrol_features) {
./src/pcf/nbsf-handler.c:            ogs_uint64_to_string(sess->smpolicycontrol_features);
./src/pcf/nbsf-handler.c:    header.resource.component[1] = sess->sm_policy_id;
./src/pcf/nbsf-handler.c:    pcf_metrics_inst_by_slice_add(&sess->pcf_ue->guami.plmn_id,
./src/pcf/nbsf-handler.c:            &sess->s_nssai, PCF_METR_CTR_PA_POLICYSMASSOSUCC, 1);
./src/pcf/pcf-sm.c:                                            pcf_ue->supi, sess->psi);
./src/pcf/pcf-sm.c:            ogs_assert(OGS_FSM_STATE(&sess->sm));
./src/pcf/pcf-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/pcf/pcf-sm.c:            if (OGS_FSM_CHECK(&sess->sm, pcf_sm_state_exception)) {
./src/pcf/pcf-sm.c:                        pcf_ue->supi, sess->psi);
./src/pcf/pcf-sm.c:            ogs_assert(OGS_FSM_STATE(&sess->sm));
./src/pcf/pcf-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/pcf/pcf-sm.c:            if (OGS_FSM_CHECK(&sess->sm, pcf_sm_state_exception)) {
./src/pcf/pcf-sm.c:                        pcf_ue->supi, sess->psi);
./src/pcf/pcf-sm.c:                    pcf_ue = sess->pcf_ue;
./src/pcf/pcf-sm.c:                    ogs_fsm_dispatch(&sess->sm, e);
./src/pcf/pcf-sm.c:                    if (OGS_FSM_CHECK(&sess->sm, pcf_sm_state_exception)) {
./src/pcf/pcf-sm.c:                                    pcf_ue->supi, sess->psi);
./src/pcf/pcf-sm.c:                pcf_ue = sess->pcf_ue;
./src/pcf/pcf-sm.c:                ogs_fsm_dispatch(&sess->sm, e);
./src/pcf/pcf-sm.c:                if (OGS_FSM_CHECK(&sess->sm, pcf_sm_state_exception)) {
./src/pcf/pcf-sm.c:                                pcf_ue->supi, sess->psi);
./src/pcf/pcf-sm.c:                } else if (OGS_FSM_CHECK(&sess->sm, pcf_sm_state_deleted)) {
./src/pcf/pcf-sm.c:                                pcf_ue->supi, sess->psi);
./src/pcf/pcf-sm.c:                ogs_error("[%d] Cannot receive SBI message", sess->psi);
./src/pcf/nudr-build.c:    pcf_ue = sess->pcf_ue;
./src/pcf/nudr-build.c:    memcpy(&message.param.s_nssai, &sess->s_nssai,
./src/pcf/nudr-build.c:    if (sess->dnn)
./src/pcf/nudr-build.c:        message.param.dnn = sess->dnn;
./src/pcf/pcf-rx-path.c:        ogs_info("pcf_sess ip:%s",pcf_sess->ipv4addr_string);
./src/pcf/pcf-rx-path.c:        ogs_info("exist app_session_id:%s,pcf_sess->ipv4addr_string:%s",sess_data->app_session_id,pcf_sess->ipv4addr_string);
./src/pcf/pcf-rx-path.c:        ogs_info("new app_session_id:%s,rx_sid:%s,pcf_sess->ipv4addr_string:%s.",sess_data->app_session_id,app_session->rx_sid,pcf_sess->ipv4addr_string);
./src/pcf/sm-sm.c:    pcf_ue = sess->pcf_ue;
./src/pcf/sm-sm.c:                            pcf_ue->supi, sess->psi);
./src/pcf/sm-sm.c:                            pcf_ue->supi, sess->psi);
./src/pcf/sm-sm.c:                            pcf_ue->supi, sess->psi, message->h.uri);
./src/pcf/sm-sm.c:                                pcf_ue->supi, sess->psi,
./src/pcf/sm-sm.c:                                pcf_ue->supi, sess->psi, message->h.method);
./src/pcf/sm-sm.c:                            pcf_ue->supi, sess->psi, message->h.method);
./src/pcf/sm-sm.c:                        pcf_ue->supi, sess->psi, message->h.service.name);
./src/pcf/sm-sm.c:                                pcf_ue->supi, sess->psi, message->res_status);
./src/pcf/sm-sm.c:                                pcf_ue->supi, sess->psi, message->res_status);
./src/pcf/sm-sm.c:                            pcf_ue->supi, sess->psi,
./src/pcf/sm-sm.c:                        pcf_ue->supi, sess->psi,
./src/pcf/sm-sm.c:                                pcf_ue->supi, sess->psi, message->res_status);
./src/pcf/sm-sm.c:                                pcf_ue->supi, sess->psi, message->h.method);
./src/pcf/sm-sm.c:                                pcf_ue->supi, sess->psi, message->h.method);
./src/pcf/sm-sm.c:                        pcf_ue->supi, sess->psi,
./src/pcf/sm-sm.c:                        pcf_ue->supi, sess->psi, message->h.service.name);
./src/pcf/sm-sm.c:                pcf_ue->supi, sess->psi, pcf_event_get_name(e));
./src/pcf/sm-sm.c:    pcf_ue = sess->pcf_ue;
./src/pcf/sm-sm.c:        ogs_assert(sess->pcf_ue);
./src/pcf/sm-sm.c:        pcf_metrics_inst_by_slice_add(&sess->pcf_ue->guami.plmn_id,
./src/pcf/sm-sm.c:                &sess->s_nssai, PCF_METR_GAUGE_PA_SESSIONNBR, -1);
./src/pcf/sm-sm.c:                pcf_ue->supi, sess->psi, pcf_event_get_name(e));
./src/pcf/sm-sm.c:    pcf_ue = sess->pcf_ue;
./src/pcf/sm-sm.c:        ogs_assert(sess->pcf_ue);
./src/pcf/sm-sm.c:        pcf_metrics_inst_by_slice_add(&sess->pcf_ue->guami.plmn_id,
./src/pcf/sm-sm.c:                &sess->s_nssai, PCF_METR_GAUGE_PA_SESSIONNBR, -1);
./src/pcf/sm-sm.c:                pcf_ue->supi, sess->psi, pcf_event_get_name(e));
./src/pcf/npcf-handler.c:    pcf_ue = sess->pcf_ue;
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:        strerror = ogs_msprintf("[%s:%d] No supi", pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:        strerror = ogs_msprintf("[%s:%d] No dnn", pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi,
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi, SmPolicyContextData->notification_uri);
./src/pcf/npcf-handler.c:        sess->smpolicycontrol_features &= supported_features;
./src/pcf/npcf-handler.c:        sess->smpolicycontrol_features = 0;
./src/pcf/npcf-handler.c:    sess->pdu_session_type = SmPolicyContextData->pdu_session_type;
./src/pcf/npcf-handler.c:        sess->serving.presence = true;
./src/pcf/npcf-handler.c:        ogs_sbi_parse_plmn_id_nid(&sess->serving.plmn_id, servingNetwork);
./src/pcf/npcf-handler.c:        sess->home.presence = true;
./src/pcf/npcf-handler.c:        memcpy(&sess->home.plmn_id, &sess->serving.plmn_id, OGS_PLMN_ID_LEN);
./src/pcf/npcf-handler.c:        if (sess->dnn)
./src/pcf/npcf-handler.c:            ogs_free(sess->dnn);
./src/pcf/npcf-handler.c:        sess->dnn = ogs_strdup(dnn_network_identifer);
./src/pcf/npcf-handler.c:        ogs_assert(sess->dnn);
./src/pcf/npcf-handler.c:        if (sess->full_dnn)
./src/pcf/npcf-handler.c:            ogs_free(sess->full_dnn);
./src/pcf/npcf-handler.c:        sess->full_dnn = ogs_strdup(SmPolicyContextData->dnn);
./src/pcf/npcf-handler.c:        ogs_assert(sess->full_dnn);
./src/pcf/npcf-handler.c:        mcc = ogs_plmn_id_mcc_from_fqdn(sess->full_dnn);
./src/pcf/npcf-handler.c:        mnc = ogs_plmn_id_mnc_from_fqdn(sess->full_dnn);
./src/pcf/npcf-handler.c:                if (sess->home.presence == true)
./src/pcf/npcf-handler.c:                    ogs_plmn_id_build(&sess->home.plmn_id, mcc, mnc, mnc_len);
./src/pcf/npcf-handler.c:        if (sess->dnn)
./src/pcf/npcf-handler.c:            ogs_free(sess->dnn);
./src/pcf/npcf-handler.c:        sess->dnn = ogs_strdup(SmPolicyContextData->dnn);
./src/pcf/npcf-handler.c:        ogs_assert(sess->dnn);
./src/pcf/npcf-handler.c:        if (sess->full_dnn)
./src/pcf/npcf-handler.c:            ogs_free(sess->full_dnn);
./src/pcf/npcf-handler.c:        sess->full_dnn = NULL;
./src/pcf/npcf-handler.c:    if (sess->notification_uri)
./src/pcf/npcf-handler.c:        ogs_free(sess->notification_uri);
./src/pcf/npcf-handler.c:    sess->notification_uri = ogs_strdup(SmPolicyContextData->notification_uri);
./src/pcf/npcf-handler.c:    ogs_assert(sess->notification_uri);
./src/pcf/npcf-handler.c:    OGS_SBI_SETUP_CLIENT(&sess->nsmf, client);
./src/pcf/npcf-handler.c:        OpenAPI_clear_and_free_string_list(sess->ipv4_frame_route_list);
./src/pcf/npcf-handler.c:        sess->ipv4_frame_route_list = OpenAPI_list_create();
./src/pcf/npcf-handler.c:            OpenAPI_list_add(sess->ipv4_frame_route_list, ogs_strdup(node->data));
./src/pcf/npcf-handler.c:        OpenAPI_clear_and_free_string_list(sess->ipv6_frame_route_list);
./src/pcf/npcf-handler.c:        sess->ipv6_frame_route_list = OpenAPI_list_create();
./src/pcf/npcf-handler.c:            OpenAPI_list_add(sess->ipv6_frame_route_list, ogs_strdup(node->data));
./src/pcf/npcf-handler.c:    sess->s_nssai.sst = sliceInfo->sst;
./src/pcf/npcf-handler.c:    sess->s_nssai.sd = ogs_s_nssai_sd_from_string(sliceInfo->sd);
./src/pcf/npcf-handler.c:            &sess->s_nssai, PCF_METR_GAUGE_PA_SESSIONNBR, 1);
./src/pcf/npcf-handler.c:            &sess->s_nssai, PCF_METR_CTR_PA_POLICYSMASSOREQ, 1);
./src/pcf/npcf-handler.c:        sess->subscribed_sess_ambr = OpenAPI_ambr_copy(
./src/pcf/npcf-handler.c:            sess->subscribed_sess_ambr, SmPolicyContextData->subs_sess_ambr);
./src/pcf/npcf-handler.c:        sess->subscribed_default_qos = OpenAPI_subscribed_default_qos_copy(
./src/pcf/npcf-handler.c:            sess->subscribed_default_qos, SmPolicyContextData->subs_def_qos);
./src/pcf/npcf-handler.c:        nf_instance = sess->sbi.service_type_array[service_type].nf_instance;
./src/pcf/npcf-handler.c:                        sess->sbi.service_type_array[service_type],
./src/pcf/npcf-handler.c:    pcf_ue = sess->pcf_ue;
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:    ogs_list_for_each(&sess->app_list, app_session) { 
./src/pcf/npcf-handler.c:			ogs_info("send asr,rx_sid:%s,app_session_id=%s,sess->ipv4addr_string:%s.",app_session->rx_sid,app_session->app_session_id,sess->ipv4addr_string);
./src/pcf/npcf-handler.c:                pcf_ue, &sess->s_nssai, sess->dnn) > 1) {
./src/pcf/npcf-handler.c:    pcf_ue = sess->pcf_ue;
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi, AscReqData->notif_uri);
./src/pcf/npcf-handler.c:    sess->policyauthorization_features &= supported_features;
./src/pcf/npcf-handler.c:    if (sess->policyauthorization_features != supported_features) {
./src/pcf/npcf-handler.c:            ogs_uint64_to_string(sess->policyauthorization_features);
./src/pcf/npcf-handler.c:            sess->home.presence == true ? &sess->home.plmn_id : NULL,
./src/pcf/npcf-handler.c:            &sess->s_nssai, sess->dnn, &session_data);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi, media_component->media_type);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi,
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi, qos_index);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                        pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:    pcf_ue = sess->pcf_ue;
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:            sess->home.presence == true ? &sess->home.plmn_id : NULL,
./src/pcf/npcf-handler.c:            &sess->s_nssai, sess->dnn, &session_data);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi, media_component->media_type);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi,
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi, qos_index);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                        pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:                pcf_ue->supi, sess->psi);
./src/pcf/npcf-handler.c:    pcf_ue = sess->pcf_ue;
./src/pcf/npcf-handler.c:                pcf_ue->supi, &sess->s_nssai, sess->dnn, &session_data);
./src/pcf/npcf-handler.c:                    pcf_ue->supi, sess->psi);
./src/sgwu/pfcp-path.c:    h.seid = sess->sgwc_sxa_f_seid.seid;
./src/sgwu/pfcp-path.c:    h.seid = sess->sgwc_sxa_f_seid.seid;
./src/sgwu/pfcp-path.c:    h.seid = sess->sgwc_sxa_f_seid.seid;
./src/sgwu/pfcp-path.c:    h.seid = sess->sgwc_sxa_f_seid.seid;
./src/sgwu/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_timeout, sess);
./src/sgwu/sxa-handler.c:        created_pdr[i] = ogs_pfcp_handle_create_pdr(&sess->pfcp,
./src/sgwu/sxa-handler.c:        if (ogs_pfcp_handle_create_far(&sess->pfcp, &req->create_far[i],
./src/sgwu/sxa-handler.c:        if (ogs_pfcp_handle_create_qer(&sess->pfcp, &req->create_qer[i],
./src/sgwu/sxa-handler.c:    ogs_pfcp_handle_create_bar(&sess->pfcp, &req->create_bar,
./src/sgwu/sxa-handler.c:    ogs_list_for_each(&sess->pfcp.far_list, far) {
./src/sgwu/sxa-handler.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/sgwu/sxa-handler.c:    ogs_pfcp_sess_clear(&sess->pfcp);
./src/sgwu/sxa-handler.c:    ogs_pfcp_send_error_message(xact, sess ? sess->sgwc_sxa_f_seid.seid : 0,
./src/sgwu/sxa-handler.c:        created_pdr[i] = ogs_pfcp_handle_create_pdr(&sess->pfcp,
./src/sgwu/sxa-handler.c:        if (ogs_pfcp_handle_remove_pdr(&sess->pfcp, &req->remove_pdr[i],
./src/sgwu/sxa-handler.c:        if (ogs_pfcp_handle_create_far(&sess->pfcp, &req->create_far[i],
./src/sgwu/sxa-handler.c:        if (ogs_pfcp_handle_update_far_flags(&sess->pfcp, &req->update_far[i],
./src/sgwu/sxa-handler.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/sgwu/sxa-handler.c:    ogs_list_for_each(&sess->pfcp.far_list, far)
./src/sgwu/sxa-handler.c:        if (ogs_pfcp_handle_update_far(&sess->pfcp, &req->update_far[i],
./src/sgwu/sxa-handler.c:        if (ogs_pfcp_handle_remove_far(&sess->pfcp, &req->remove_far[i],
./src/sgwu/sxa-handler.c:        if (ogs_pfcp_handle_create_qer(&sess->pfcp, &req->create_qer[i],
./src/sgwu/sxa-handler.c:        if (ogs_pfcp_handle_update_qer(&sess->pfcp, &req->update_qer[i],
./src/sgwu/sxa-handler.c:        if (ogs_pfcp_handle_remove_qer(&sess->pfcp, &req->remove_qer[i],
./src/sgwu/sxa-handler.c:    ogs_pfcp_handle_create_bar(&sess->pfcp, &req->create_bar,
./src/sgwu/sxa-handler.c:    ogs_pfcp_handle_remove_bar(&sess->pfcp, &req->remove_bar,
./src/sgwu/sxa-handler.c:    ogs_list_for_each(&sess->pfcp.far_list, far) {
./src/sgwu/sxa-handler.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/sgwu/sxa-handler.c:    ogs_pfcp_sess_clear(&sess->pfcp);
./src/sgwu/sxa-handler.c:    ogs_pfcp_send_error_message(xact, sess ? sess->sgwc_sxa_f_seid.seid : 0,
./src/sgwu/context.c:    ogs_pfcp_pool_init(&sess->pfcp);
./src/sgwu/context.c:    ogs_pool_alloc(&sgwu_sxa_seid_pool, &sess->sgwu_sxa_seid_node);
./src/sgwu/context.c:    ogs_assert(sess->sgwu_sxa_seid_node);
./src/sgwu/context.c:    sess->sgwu_sxa_seid = *(sess->sgwu_sxa_seid_node);
./src/sgwu/context.c:    ogs_hash_set(self.sgwu_sxa_seid_hash, &sess->sgwu_sxa_seid,
./src/sgwu/context.c:            sizeof(sess->sgwu_sxa_seid), sess);
./src/sgwu/context.c:    sess->sgwc_sxa_f_seid.seid = cp_f_seid->seid;
./src/sgwu/context.c:            ogs_pfcp_f_seid_to_ip(cp_f_seid, &sess->sgwc_sxa_f_seid.ip));
./src/sgwu/context.c:    ogs_hash_set(self.sgwc_sxa_f_seid_hash, &sess->sgwc_sxa_f_seid,
./src/sgwu/context.c:            sizeof(sess->sgwc_sxa_f_seid), sess);
./src/sgwu/context.c:    ogs_hash_set(self.sgwc_sxa_seid_hash, &sess->sgwc_sxa_f_seid.seid,
./src/sgwu/context.c:            sizeof(sess->sgwc_sxa_f_seid.seid), sess);
./src/sgwu/context.c:        (long)sess->sgwu_sxa_seid, (long)sess->sgwc_sxa_f_seid.seid);
./src/sgwu/context.c:    ogs_pfcp_sess_clear(&sess->pfcp);
./src/sgwu/context.c:    ogs_hash_set(self.sgwu_sxa_seid_hash, &sess->sgwu_sxa_seid,
./src/sgwu/context.c:            sizeof(sess->sgwu_sxa_seid), NULL);
./src/sgwu/context.c:    ogs_hash_set(self.sgwc_sxa_seid_hash, &sess->sgwc_sxa_f_seid.seid,
./src/sgwu/context.c:            sizeof(sess->sgwc_sxa_f_seid.seid), NULL);
./src/sgwu/context.c:    ogs_hash_set(self.sgwc_sxa_f_seid_hash, &sess->sgwc_sxa_f_seid,
./src/sgwu/context.c:            sizeof(sess->sgwc_sxa_f_seid), NULL);
./src/sgwu/context.c:    ogs_pfcp_pool_final(&sess->pfcp);
./src/sgwu/context.c:    ogs_pool_free(&sgwu_sxa_seid_pool, sess->sgwu_sxa_seid_node);
./src/sgwu/sxa-build.c:    f_seid.seid = htobe64(sess->sgwu_sxa_seid);
./src/sgwu/pfcp-sm.c:        if (node == sess->pfcp_node) {
./src/sgwu/pfcp-sm.c:                (long)sess->sgwu_sxa_seid, (long)sess->sgwc_sxa_f_seid.seid);
./src/sgwu/gtp-path.c:            ogs_list_for_each(&pfcp_sess->pdr_list, pdr) {
./src/sgwu/gtp-path.c:            ogs_assert(pdr->sess->obj.type == OGS_PFCP_OBJ_SESS_TYPE);
./src/amf/ngap-path.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/nnrf-handler.c:            ogs_error("[%d:%d] (NF discover) No [%s]", sess->psi, sess->pti,
./src/amf/nnrf-handler.c:            if (sess->payload_container_type) {
./src/amf/nnrf-handler.c:                r = nas_5gs_send_back_gsm_message(sess->ran_ue, sess,
./src/amf/nnrf-handler.c:                r = ngap_send_error_indication2_sps(sess->ran_ue,
./src/amf/nsmf-build.c:    amf_ue = sess->amf_ue;
./src/amf/nsmf-build.c:    SmContextCreateData.pdu_session_id = sess->psi;
./src/amf/nsmf-build.c:            ogs_msprintf("%s.%s", sess->dnn, home_network_domain);
./src/amf/nsmf-build.c:        SmContextCreateData.dnn = ogs_strdup(sess->dnn);
./src/amf/nsmf-build.c:    sNssai.sst = sess->s_nssai.sst;
./src/amf/nsmf-build.c:    sNssai.sd = ogs_s_nssai_sd_to_string(sess->s_nssai.sd);
./src/amf/nsmf-build.c:    if (sess->mapped_hplmn.sst) {
./src/amf/nsmf-build.c:        hplmnSnssai.sst = sess->mapped_hplmn.sst;
./src/amf/nsmf-build.c:        hplmnSnssai.sd = ogs_s_nssai_sd_to_string(sess->mapped_hplmn.sd);
./src/amf/nsmf-build.c:    header.resource.component[2] = ogs_msprintf("%d", sess->psi);
./src/amf/nsmf-build.c:    message.part[message.num_of_part].pkbuf = sess->payload_container;
./src/amf/nsmf-build.c:    ogs_assert(sess->sm_context.resource_uri);
./src/amf/nsmf-build.c:    amf_ue = sess->amf_ue;
./src/amf/nsmf-build.c:            sess->sm_context.resource_uri, OGS_SBI_RESOURCE_NAME_MODIFY);
./src/amf/nsmf-build.c:    ogs_assert(sess->sm_context.resource_uri);
./src/amf/nsmf-build.c:    amf_ue = sess->amf_ue;
./src/amf/nsmf-build.c:            sess->sm_context.resource_uri, OGS_SBI_RESOURCE_NAME_RELEASE);
./src/amf/nsmf-build.c:    ogs_assert(sess->paging.ongoing == true);
./src/amf/nsmf-build.c:    ogs_assert(sess->paging.location);
./src/amf/nsmf-build.c:    ogs_assert(sess->paging.n1n2_failure_txf_notif_uri);
./src/amf/nsmf-build.c:    message.h.uri = sess->paging.n1n2_failure_txf_notif_uri;
./src/amf/nsmf-build.c:    if (sess->paging.location) {
./src/amf/nsmf-build.c:            sess->paging.location;
./src/amf/ngap-handler.c:                amf_ue->supi, sess->psi, ran_ue->psimask.activated);
./src/amf/ngap-handler.c:        ran_ue->psimask.activated |= ((1 << sess->psi));
./src/amf/ngap-handler.c:            if (sess->gsm_message.type == 0) continue;
./src/amf/ngap-handler.c:            switch (sess->gsm_message.type) {
./src/amf/ngap-handler.c:                            sess->gsm_message.n1buf, sess->gsm_message.n2buf);
./src/amf/ngap-handler.c:                sess->gsm_message.n1buf = NULL;
./src/amf/ngap-handler.c:                sess->gsm_message.n2buf = NULL;
./src/amf/ngap-handler.c:                            sess->gsm_message.n1buf, sess->gsm_message.n2buf);
./src/amf/ngap-handler.c:                sess->gsm_message.n1buf = NULL;
./src/amf/ngap-handler.c:                sess->gsm_message.n2buf = NULL;
./src/amf/ngap-handler.c:                        sess->gsm_message.type);
./src/amf/ngap-handler.c:                    amf_ue->supi, sess->psi, ran_ue->psimask.activated);
./src/amf/ngap-handler.c:            ran_ue->psimask.activated |= ((1 << sess->psi));
./src/amf/ngap-handler.c:        sess->pdu_session_resource_release_response_received = true;
./src/amf/ngap-handler.c:        if (sess->pdu_session_release_complete_received == true)
./src/amf/ngap-handler.c:            ogs_error("Session Context is not in SMF [%d]", sess->psi);
./src/amf/ngap-handler.c:            ogs_error("Session Context is not in SMF [%d]", sess->psi);
./src/amf/ngap-handler-sps.c:                amf_ue->supi, sess->psi, ran_ue->psimask.activated);
./src/amf/ngap-handler-sps.c:        ran_ue->psimask.activated |= ((1 << sess->psi));
./src/amf/ngap-handler-sps.c:            if (sess->gsm_message.type == 0) continue;
./src/amf/ngap-handler-sps.c:            switch (sess->gsm_message.type) {
./src/amf/ngap-handler-sps.c:                        sess->gsm_message.n1buf, 0, 0);
./src/amf/ngap-handler-sps.c:                        sess, gmmbuf, sess->gsm_message.n2buf);
./src/amf/ngap-handler-sps.c:                            sess->gsm_message.n1buf, sess->gsm_message.n2buf);
./src/amf/ngap-handler-sps.c:                sess->gsm_message.n1buf = NULL;
./src/amf/ngap-handler-sps.c:                sess->gsm_message.n2buf = NULL;
./src/amf/ngap-handler-sps.c:                            sess->gsm_message.n1buf, sess->gsm_message.n2buf);
./src/amf/ngap-handler-sps.c:                sess->gsm_message.n1buf = NULL;
./src/amf/ngap-handler-sps.c:                sess->gsm_message.n2buf = NULL;
./src/amf/ngap-handler-sps.c:                        sess->gsm_message.type);
./src/amf/ngap-handler-sps.c:                amf_ue->supi, sess->psi, ran_ue->psimask.activated);
./src/amf/ngap-handler-sps.c:                ran_ue->psimask.activated |= ((1 << sess->psi));
./src/amf/ngap-handler-sps.c:        sess->pdu_session_resource_release_response_received = true;
./src/amf/ngap-handler-sps.c:        if (sess->pdu_session_release_complete_received == true)
./src/amf/ngap-handler-sps.c:            ogs_error("Session Context is not in SMF [%d]", sess->psi);
./src/amf/ngap-handler-sps.c:            ogs_error("Session Context is not in SMF [%d]", sess->psi);
./src/amf/context.c:                old_sess->amf_ue = amf_ue;
./src/amf/context.c:    sess->sbi.type = OGS_SBI_OBJ_SESS_TYPE;
./src/amf/context.c:    sess->amf_ue = amf_ue;
./src/amf/context.c:    sess->psi = psi;
./src/amf/context.c:    sess->s_nssai.sst = 0;
./src/amf/context.c:    sess->s_nssai.sd.v = OGS_S_NSSAI_NO_SD_VALUE;
./src/amf/context.c:    sess->mapped_hplmn.sst = 0;
./src/amf/context.c:    sess->mapped_hplmn.sd.v = OGS_S_NSSAI_NO_SD_VALUE;
./src/amf/context.c:    ogs_assert(sess->amf_ue);
./src/amf/context.c:    ogs_list_remove(&sess->amf_ue->sess_list, sess);
./src/amf/context.c:    if (ogs_list_count(&sess->sbi.xact_list))
./src/amf/context.c:                ogs_list_count(&sess->sbi.xact_list));
./src/amf/context.c:    ogs_sbi_object_free(&sess->sbi);
./src/amf/context.c:    if (sess->sm_context.client)
./src/amf/context.c:        ogs_sbi_client_remove(sess->sm_context.client);
./src/amf/context.c:    if (sess->payload_container)
./src/amf/context.c:        ogs_pkbuf_free(sess->payload_container);
./src/amf/context.c:    if (sess->dnn)
./src/amf/context.c:        ogs_free(sess->dnn);
./src/amf/context.c:    if (sess->pdu_session_establishment_accept)
./src/amf/context.c:        ogs_pkbuf_free(sess->pdu_session_establishment_accept);
./src/amf/context.c:    if (sess->paging.client)
./src/amf/context.c:        ogs_sbi_client_remove(sess->paging.client);
./src/amf/context.c:    if (sess->nssf.nsi_id)
./src/amf/context.c:        ogs_free(sess->nssf.nsi_id);
./src/amf/context.c:    if (sess->nssf.nrf.id)
./src/amf/context.c:        ogs_free(sess->nssf.nrf.id);
./src/amf/context.c:    if (sess->nssf.nrf.client)
./src/amf/context.c:        ogs_sbi_client_remove(sess->nssf.nrf.client);
./src/amf/context.c:        if (psi == sess->psi) return sess;
./src/amf/context.c:        xact_count += ogs_list_count(&sess->sbi.xact_list);
./src/amf/context.c:        ogs_list_for_each(&sess->sbi.xact_list, xact)
./src/amf/context.c:        if (sess->transfer.pdu_session_resource_setup_request)
./src/amf/context.c:        if (sess->transfer.handover_request)
./src/amf/context.c:        if (sess->paging.ongoing == true)
./src/amf/context.c:        if (sess->gsm_message.type)
./src/amf/gmm-build.c:    amf_ue = sess->amf_ue;
./src/amf/gmm-build.c:    *pdu_session_id = sess->psi;
./src/amf/gmm-build.c:        psimask |= (1 << sess->psi);
./src/amf/gmm-build.c:            psimask |= (1 << sess->psi);
./src/amf/sbi-path.c:        sess->ran_ue = ran_ue_cycle(ran_ue);
./src/amf/sbi-path.c:        if (!sess->ran_ue) {
./src/amf/sbi-path.c:        sess->ran_ue = NULL;
./src/amf/sbi-path.c:            &sess->sbi, service_type, discovery_option,
./src/amf/sbi-path.c:        r = nas_5gs_send_back_gsm_message(sess->ran_ue, sess,
./src/amf/sbi-path.c:    if (sess->amf_ue->supi){
./src/amf/sbi-path.c:        xact->supi_id = ogs_id_get_value(sess->amf_ue->supi);
./src/amf/sbi-path.c:        r = nas_5gs_send_back_gsm_message(sess->ran_ue, sess,
./src/amf/sbi-path.c:    ogs_assert(sess->sbi.type == OGS_SBI_OBJ_SESS_TYPE);
./src/amf/sbi-path.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/sbi-path.c:    ran_ue = ran_ue_cycle(sess->ran_ue);
./src/amf/sbi-path.c:    amf_sbi_select_nf(&sess->sbi,
./src/amf/sbi-path.c:    if (!sess->sbi.service_type_array[service_type].nf_instance) {
./src/amf/sbi-path.c:                    amf_ue->supi, sess->psi,
./src/amf/sbi-path.c:    client = sess->nssf.nrf.client;
./src/amf/sbi-path.c:        sess->ran_ue = ran_ue_cycle(ran_ue);
./src/amf/sbi-path.c:        if (!sess->ran_ue) {
./src/amf/sbi-path.c:        sess->ran_ue = NULL;
./src/amf/sbi-path.c:            &sess->sbi, service_type, discovery_option, NULL, NULL, NULL);
./src/amf/sbi-path.c:    xact->supi_id = ogs_id_get_value(sess->amf_ue->supi);    
./src/amf/sbi-path.c:                sess->nssf.nrf.id, xact->service_type, xact->discovery_option);
./src/amf/sbi-path.c:    client = sess->paging.client;
./src/amf/sbi-path.c:    ogs_list_for_each(&sess->sbi.xact_list, xact) {
./src/amf/sbi-path.c:    if (sess->n1_released == true)
./src/amf/sbi-path.c:    if (sess->n2_released == true)
./src/amf/sbi-path.c:    if (sess->resource_status == OpenAPI_resource_status_RELEASED)
./src/amf/gmm-handler.c:            if ((psimask & (1 << sess->psi)) == 0) {
./src/amf/gmm-handler.c:            if (psimask & (1 << sess->psi)) {
./src/amf/gmm-handler.c:            if ((psimask & (1 << sess->psi)) == 0) {
./src/amf/gmm-handler.c:            if (psimask & (1 << sess->psi)) {
./src/amf/gmm-handler.c:                sess->pdu_session_resource_release_response_received = false;
./src/amf/gmm-handler.c:                sess->pdu_session_release_complete_received = false;
./src/amf/gmm-handler.c:        sess->old_gsm_type = sess->current_gsm_type;
./src/amf/gmm-handler.c:        sess->current_gsm_type = gsm_header->message_type;
./src/amf/gmm-handler.c:        if (sess->payload_container)
./src/amf/gmm-handler.c:            ogs_pkbuf_free(sess->payload_container);
./src/amf/gmm-handler.c:        sess->payload_container_type = payload_container_type->value;
./src/amf/gmm-handler.c:        sess->payload_container =
./src/amf/gmm-handler.c:        ogs_assert(sess->payload_container);
./src/amf/gmm-handler.c:        ogs_pkbuf_put_data(sess->payload_container,
./src/amf/gmm-handler.c:                                    if (sess->dnn)
./src/amf/gmm-handler.c:                                        ogs_free(sess->dnn);
./src/amf/gmm-handler.c:                                    sess->dnn = ogs_strdup(dnn->value);
./src/amf/gmm-handler.c:                                    ogs_assert(sess->dnn);
./src/amf/gmm-handler.c:                                if (sess->dnn)
./src/amf/gmm-handler.c:                                    ogs_free(sess->dnn);
./src/amf/gmm-handler.c:                                sess->dnn = ogs_strdup(
./src/amf/gmm-handler.c:                                ogs_assert(sess->dnn);
./src/amf/gmm-handler.c:            if (!selected_slice || !sess->dnn) {
./src/amf/gmm-handler.c:            sess->s_nssai.sst = selected_slice->s_nssai.sst;
./src/amf/gmm-handler.c:            sess->s_nssai.sd.v = selected_slice->s_nssai.sd.v;
./src/amf/gmm-handler.c:                amf_ue->supi, sess->dnn, sess->s_nssai.sst, sess->s_nssai.sd.v,
./src/amf/gmm-handler.c:                sess->sm_context.ref ? sess->sm_context.ref : "NULL",
./src/amf/gmm-handler.c:                sess->sm_context.resource_uri ?
./src/amf/gmm-handler.c:                    sess->sm_context.resource_uri : "NULL");
./src/amf/gmm-handler.c:                        discovery_option, &sess->s_nssai);
./src/amf/gmm-handler.c:                ogs_sbi_discovery_option_set_dnn(discovery_option, sess->dnn);
./src/amf/gmm-handler.c:                nf_instance = sess->sbi.
./src/amf/gmm-handler.c:                            &sess->sbi,
./src/amf/gmm-handler.c:                    nf_instance = sess->sbi.
./src/amf/gmm-handler.c:                    amf_ue->supi, sess->psi, gsm_header->message_type);
./src/amf/gmm-handler.c:            param.n1smbuf = sess->payload_container;
./src/amf/gmm-handler.c:                sess->pdu_session_release_complete_received = true;
./src/amf/gmm-handler.c:                if (sess->pdu_session_resource_release_response_received ==
./src/amf/gmm-handler.c:        sess->sm_context.ref = PduSessionContext->sm_context_ref;
./src/amf/gmm-handler.c:            memset(&sess->s_nssai, 0, sizeof(sess->s_nssai));
./src/amf/gmm-handler.c:            sess->s_nssai.sst = PduSessionContext->s_nssai->sst;
./src/amf/gmm-handler.c:            sess->s_nssai.sd = ogs_s_nssai_sd_from_string(
./src/amf/gmm-handler.c:            sess->dnn = ogs_strdup(PduSessionContext->dnn);
./src/amf/nnssf-build.c:    memcpy(&message.param.s_nssai, &sess->s_nssai,
./src/amf/namf-handler.c:            ran_ue = ran_ue_cycle(sess->ran_ue);
./src/amf/namf-handler.c:                if (sess->pdu_session_establishment_accept) {
./src/amf/namf-handler.c:                    ogs_pkbuf_free(sess->pdu_session_establishment_accept);
./src/amf/namf-handler.c:                    sess->pdu_session_establishment_accept = NULL;
./src/amf/namf-handler.c:                    sess->pdu_session_establishment_accept = ngapbuf;
./src/amf/namf-handler.c:                            amf_ue->supi, sess->psi);
./src/amf/namf-handler.c:                            amf_ue->supi, sess->psi,
./src/amf/namf-handler.c:                OGS_SBI_SETUP_CLIENT(&sess->paging, client);
./src/amf/namf-handler.c:                header.resource.component[3] = sess->sm_context.ref;
./src/amf/namf-handler.c:            header.resource.component[3] = sess->sm_context.ref;
./src/amf/namf-handler.c:                header.resource.component[3] = sess->sm_context.ref;
./src/amf/namf-handler.c:                sess->psi, sess->pti);
./src/amf/namf-handler.c:        r = nas_5gs_send_gsm_reject(sess->ran_ue, sess,
./src/amf/namf-handler.c:                amf_ue->supi, sess->psi);
./src/amf/namf-handler.c:        ogs_error("[%s:%d] No StatusInfo", amf_ue->supi, sess->psi);
./src/amf/namf-handler.c:    sess->resource_status = StatusInfo->resource_status;
./src/amf/namf-handler.c:            amf_ue->supi, sess->psi,
./src/amf/namf-handler.c:            sess->n1_released, sess->n2_released,
./src/amf/namf-handler.c:            OpenAPI_resource_status_ToString(sess->resource_status));
./src/amf/namf-handler.c:    if (sess->n1_released == true &&
./src/amf/namf-handler.c:        sess->n2_released == true &&
./src/amf/namf-handler.c:        sess->resource_status == OpenAPI_resource_status_RELEASED) {
./src/amf/namf-handler.c:        PduSessionContext->pdu_session_id = sess->psi;
./src/amf/namf-handler.c:        PduSessionContext->sm_context_ref = sess->sm_context.ref;
./src/amf/namf-handler.c:        sNSSAI->sst = sess->s_nssai.sst;
./src/amf/namf-handler.c:        sNSSAI->sd = ogs_s_nssai_sd_to_string(sess->s_nssai.sd);
./src/amf/namf-handler.c:        PduSessionContext->dnn = sess->dnn;
./src/amf/nas-path.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/nas-path.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/nas-path.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/nas-path.c:    if (ran_ue->psimask.activated & (1 << sess->psi)) {
./src/amf/nas-path.c:                ran_ue->psimask.activated, gmmbuf, amf_ue->supi, sess->psi);
./src/amf/nas-path.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/nas-path.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/nas-path.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/nas-path.c:    ogs_assert(sess->payload_container_type);
./src/amf/nas-path.c:    ogs_assert(sess->payload_container);
./src/amf/nas-path.c:    pbuf = ogs_pkbuf_copy(sess->payload_container);
./src/amf/nas-path.c:            ran_ue, sess, sess->payload_container_type, pbuf,
./src/amf/gmm-sm.c:        amf_ue = sess->amf_ue;
./src/amf/gmm-sm.c:                if (sess->paging.ongoing == true &&
./src/amf/gmm-sm.c:                    sess->paging.n1n2_failure_txf_notif_uri != NULL) {
./src/amf/gmm-sm.c:        amf_ue = sess->amf_ue;
./src/amf/gmm-sm.c:                    if (sess->paging.ongoing == true &&
./src/amf/gmm-sm.c:                        sess->paging.n1n2_failure_txf_notif_uri != NULL) {
./src/amf/gmm-sm.c:                if (sess->paging.ongoing == true &&
./src/amf/gmm-sm.c:                    sess->paging.n1n2_failure_txf_notif_uri != NULL) {
./src/amf/gmm-sm.c:        amf_ue = sess->amf_ue;
./src/amf/gmm-sm.c:        amf_ue = sess->amf_ue;
./src/amf/gmm-sm.c:        amf_ue = sess->amf_ue;
./src/amf/gmm-sm.c:        amf_ue = sess->amf_ue;
./src/amf/gmm-sm.c:        amf_ue = sess->amf_ue;
./src/amf/gmm-sm.c:        amf_ue = sess->amf_ue;
./src/amf/ngap-build.c:        if (!sess->transfer.pdu_session_resource_setup_request) continue;
./src/amf/ngap-build.c:        PDUSessionItem->pDUSessionID = sess->psi;
./src/amf/ngap-build.c:        ogs_asn_uint8_to_OCTET_STRING(sess->s_nssai.sst, sST);
./src/amf/ngap-build.c:        if (sess->s_nssai.sd.v != OGS_S_NSSAI_NO_SD_VALUE) {
./src/amf/ngap-build.c:            ogs_asn_uint24_to_OCTET_STRING(sess->s_nssai.sd, s_NSSAI->sD);
./src/amf/ngap-build.c:        transfer->size = sess->transfer.pdu_session_resource_setup_request->len;
./src/amf/ngap-build.c:                sess->transfer.pdu_session_resource_setup_request->data,
./src/amf/ngap-build.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/ngap-build.c:        PDUSessionItem->pDUSessionID = sess->psi;
./src/amf/ngap-build.c:        ogs_asn_uint8_to_OCTET_STRING(sess->s_nssai.sst, sST);
./src/amf/ngap-build.c:        if (sess->s_nssai.sd.v != OGS_S_NSSAI_NO_SD_VALUE) {
./src/amf/ngap-build.c:            ogs_asn_uint24_to_OCTET_STRING(sess->s_nssai.sd, s_NSSAI->sD);
./src/amf/ngap-build.c:        if (!sess->transfer.pdu_session_resource_setup_request) continue;
./src/amf/ngap-build.c:        PDUSessionItem->pDUSessionID = sess->psi;
./src/amf/ngap-build.c:        ogs_asn_uint8_to_OCTET_STRING(sess->s_nssai.sst, sST);
./src/amf/ngap-build.c:        if (sess->s_nssai.sd.v != OGS_S_NSSAI_NO_SD_VALUE) {
./src/amf/ngap-build.c:            ogs_asn_uint24_to_OCTET_STRING(sess->s_nssai.sd, s_NSSAI->sD);
./src/amf/ngap-build.c:        transfer->size = sess->transfer.pdu_session_resource_setup_request->len;
./src/amf/ngap-build.c:                sess->transfer.pdu_session_resource_setup_request->data,
./src/amf/ngap-build.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/ngap-build.c:    PDUSessionItem->pDUSessionID = sess->psi;
./src/amf/ngap-build.c:    ogs_asn_uint8_to_OCTET_STRING(sess->s_nssai.sst, sST);
./src/amf/ngap-build.c:    if (sess->s_nssai.sd.v != OGS_S_NSSAI_NO_SD_VALUE) {
./src/amf/ngap-build.c:        ogs_asn_uint24_to_OCTET_STRING(sess->s_nssai.sd, s_NSSAI->sD);
./src/amf/ngap-build.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/ngap-build.c:    PDUSessionItem->pDUSessionID = sess->psi;
./src/amf/ngap-build.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/ngap-build.c:    PDUSessionItem->pDUSessionID = sess->psi;
./src/amf/ngap-build.c:        if (!sess->transfer.path_switch_request_ack) continue;
./src/amf/ngap-build.c:        PDUSessionItem->pDUSessionID = sess->psi;
./src/amf/ngap-build.c:        transfer->size = sess->transfer.path_switch_request_ack->len;
./src/amf/ngap-build.c:        memcpy(transfer->buf, sess->transfer.path_switch_request_ack->data,
./src/amf/ngap-build.c:        if (!sess->transfer.handover_request) continue;
./src/amf/ngap-build.c:        PDUSessionItem->pDUSessionID = sess->psi;
./src/amf/ngap-build.c:        ogs_asn_uint8_to_OCTET_STRING(sess->s_nssai.sst, sST);
./src/amf/ngap-build.c:        if (sess->s_nssai.sd.v != OGS_S_NSSAI_NO_SD_VALUE) {
./src/amf/ngap-build.c:            ogs_asn_uint24_to_OCTET_STRING(sess->s_nssai.sd, s_NSSAI->sD);
./src/amf/ngap-build.c:        transfer->size = sess->transfer.handover_request->len;
./src/amf/ngap-build.c:                sess->transfer.handover_request->data, transfer->size);
./src/amf/ngap-build.c:        if (!sess->transfer.handover_command) continue;
./src/amf/ngap-build.c:        PDUSessionItem->pDUSessionID = sess->psi;
./src/amf/ngap-build.c:        transfer->size = sess->transfer.handover_command->len;
./src/amf/ngap-build.c:                sess->transfer.handover_command->data, transfer->size);
./src/amf/context.h:     *      sess->n2_released = true;
./src/amf/context.h:     *      sess->n1_released = true;
./src/amf/context.h:     *      sess->resource_status = OpenAPI_resource_status_RELEASED;
./src/amf/context.h:     * if (sess->n1_released == true &&
./src/amf/context.h:     *     sess->n2_released == true &&
./src/amf/context.h:     *     sess->resource_status == OpenAPI_resource_status_RELEASED) {
./src/amf/amf-sm.c:            amf_ue = sess->amf_ue;
./src/amf/amf-sm.c:                            amf_ue->supi, sess->psi, sbi_message.res_status);
./src/amf/amf-sm.c:                            amf_ue->supi, sess->psi, sbi_message.res_status);
./src/amf/amf-sm.c:                            amf_ue->supi, sess->psi, sbi_message.res_status);
./src/amf/amf-sm.c:            amf_ue = sess->amf_ue;
./src/amf/amf-sm.c:                amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/amf-sm.c:                        sess->psi, sess->pti);
./src/amf/amf-sm.c:                if (sess->payload_container_type) {
./src/amf/amf-sm.c:                    r = nas_5gs_send_back_gsm_message(sess->ran_ue, sess,
./src/amf/amf-sm.c:                    r = ngap_send_error_indication2_sps(sess->ran_ue,
./src/amf/nnssf-handler.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/nnssf-handler.c:    ran_ue = ran_ue_cycle(sess->ran_ue);
./src/amf/nnssf-handler.c:    ogs_sbi_discovery_option_add_snssais(discovery_option, &sess->s_nssai);
./src/amf/nnssf-handler.c:    ogs_sbi_discovery_option_set_dnn(discovery_option, sess->dnn);
./src/amf/nnssf-handler.c:    if (sess->nssf.nrf.id)
./src/amf/nnssf-handler.c:        ogs_free(sess->nssf.nrf.id);
./src/amf/nnssf-handler.c:    sess->nssf.nrf.id = ogs_strdup(NsiInformation->nrf_id);
./src/amf/nnssf-handler.c:    ogs_assert(sess->nssf.nrf.id);
./src/amf/nnssf-handler.c:        param.nrf_uri.nrf.id = sess->nssf.nrf.id;
./src/amf/nnssf-handler.c:                    amf_ue->supi, sess->psi, NsiInformation->nrf_id);
./src/amf/nnssf-handler.c:        OGS_SBI_SETUP_CLIENT(&sess->nssf.nrf, client);
./src/amf/nsmf-handler.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/nsmf-handler.c:    ran_ue = ran_ue_cycle(sess->ran_ue);
./src/amf/nsmf-handler.c:            ogs_error("[%d:%d] No http.location", sess->psi, sess->pti);
./src/amf/nsmf-handler.c:                    sess->psi, sess->pti, recvmsg->http.location);
./src/amf/nsmf-handler.c:                    sess->psi, sess->pti, recvmsg->http.location);
./src/amf/nsmf-handler.c:                    amf_ue->supi, sess->psi, header.uri);
./src/amf/nsmf-handler.c:            ogs_debug("[%s:%d] ogs_sbi_client_add()", amf_ue->supi, sess->psi);
./src/amf/nsmf-handler.c:                        amf_ue->supi, sess->psi);
./src/amf/nsmf-handler.c:        OGS_SBI_SETUP_CLIENT(&sess->sm_context, client);
./src/amf/nsmf-handler.c:        if (sess->pdu_session_establishment_accept) {
./src/amf/nsmf-handler.c:                    sess->pdu_session_establishment_accept);
./src/amf/nsmf-handler.c:            sess->pdu_session_establishment_accept = NULL;
./src/amf/nsmf-handler.c:                        sess->psi, sess->pti);
./src/amf/nsmf-handler.c:            ogs_error("[%d:%d] No SmContextCreateError", sess->psi, sess->pti);
./src/amf/nsmf-handler.c:            ogs_error("[%d:%d] No Error", sess->psi, sess->pti);
./src/amf/nsmf-handler.c:                        sess->psi, sess->pti);
./src/amf/nsmf-handler.c:        ogs_error("[%d:%d] 5GMM was not forwarded", sess->psi, sess->pti);
./src/amf/nsmf-handler.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/nsmf-handler.c:    ran_ue = ran_ue_cycle(sess->ran_ue);
./src/amf/nsmf-handler.c:                            amf_ue->supi, sess->psi);
./src/amf/nsmf-handler.c:                            amf_ue->supi, sess->psi, n1SmMsg->content_id);
./src/amf/nsmf-handler.c:                            amf_ue->supi, sess->psi);
./src/amf/nsmf-handler.c:                            amf_ue->supi, sess->psi, n1SmMsg->content_id);
./src/amf/nsmf-handler.c:                            amf_ue->supi, sess->psi);
./src/amf/nsmf-handler.c:                            amf_ue->supi, sess->psi);
./src/amf/nsmf-handler.c:                            amf_ue->supi, sess->psi);
./src/amf/nsmf-handler.c:                        amf_ue->supi, sess->psi);
./src/amf/nsmf-handler.c:                sess->n2_released = true;
./src/amf/nsmf-handler.c:                        amf_ue->supi, sess->psi);
./src/amf/nsmf-handler.c:                sess->n1_released = true;
./src/amf/nsmf-handler.c:                        "(DUPLICATED_PDU_SESSION_ID)", amf_ue->supi, sess->psi);
./src/amf/nsmf-handler.c:                    source_ue = sess->ran_ue;
./src/amf/nsmf-handler.c:                    amf_ue->supi, sess->psi, state,
./src/amf/nsmf-handler.c:                    sess->n1_released, sess->n2_released,
./src/amf/nsmf-handler.c:                    OpenAPI_resource_status_ToString(sess->resource_status));
./src/amf/nsmf-handler.c:            if (sess->n1_released == true &&
./src/amf/nsmf-handler.c:                sess->n2_released == true &&
./src/amf/nsmf-handler.c:                sess->resource_status == OpenAPI_resource_status_RELEASED) {
./src/amf/nsmf-handler.c:        amf_ue = sess->amf_ue;
./src/amf/nsmf-handler.c:                    sess->psi, sess->pti, recvmsg->res_status);
./src/amf/nsmf-handler.c:                    sess->psi, sess->pti, recvmsg->res_status);
./src/amf/nsmf-handler.c:                        sess->psi, sess->pti, state);
./src/amf/nsmf-handler.c:            ogs_error("[%d:%d] No N2 SM Message", sess->psi, sess->pti);
./src/amf/nsmf-handler.c:                    sess->psi, sess->pti, n2SmInfo->content_id);
./src/amf/nsmf-handler.c:                sess->psi, sess->pti, state);
./src/amf/nsmf-handler.c:    amf_ue = amf_ue_cycle(sess->amf_ue);
./src/amf/nsmf-handler.c:    ran_ue = ran_ue_cycle(sess->ran_ue);
./src/amf/nsmf-handler.c:    if (sess->old_gsm_type == OGS_NAS_5GS_PDU_SESSION_RELEASE_COMPLETE &&
./src/amf/nsmf-handler.c:        sess->current_gsm_type ==
./src/amf/nsmf-handler.c:                amf_ue->supi, sess->psi);
./src/amf/nsmf-handler.c:        sess->old_gsm_type = 0;
./src/amf/nsmf-handler.c:        sess->current_gsm_type = 0;
./src/amf/nsmf-handler.c:        sess->n1_released = false;
./src/amf/nsmf-handler.c:        sess->n2_released = false;
./src/amf/nsmf-handler.c:        sess->resource_status = OpenAPI_resource_status_NULL;
./src/amf/nsmf-handler.c:                amf_ue->supi, sess->psi, state);
./src/mme/mme-s11-handler.c:    MME_UE_CHECK(OGS_LOG_DEBUG, sess->mme_ue);
./src/mme/mme-s11-handler.c:    mme_ue = mme_ue_cycle(sess->mme_ue);
./src/mme/mme-s11-handler.c:    session = sess->session;
./src/mme/mme-s11-handler.c:        sess->pgw_s5c_teid = be32toh(pgw_s5c_teid->teid);
./src/mme/mme-s11-handler.c:                ogs_gtp2_f_teid_to_ip(pgw_s5c_teid, &sess->pgw_s5c_ip));
./src/mme/mme-s11-handler.c:        OGS_TLV_STORE_DATA(&sess->pgw_epco,
./src/mme/mme-s11-handler.c:        OGS_TLV_STORE_DATA(&sess->pgw_pco,
./src/mme/mme-s11-handler.c:    MME_UE_CHECK(OGS_LOG_DEBUG, sess->mme_ue);
./src/mme/mme-s11-handler.c:    mme_ue = mme_ue_cycle(sess->mme_ue);
./src/mme/mme-s11-handler.c:    sess->pti = OGS_NAS_PROCEDURE_TRANSACTION_IDENTITY_UNASSIGNED;
./src/mme/mme-s11-handler.c:        sess->pti = req->procedure_transaction_id.u8;
./src/mme/mme-s11-handler.c:        ogs_debug("    PTI[%d]", sess->pti);
./src/mme/mme-s11-handler.c:    sess->pti = OGS_NAS_PROCEDURE_TRANSACTION_IDENTITY_UNASSIGNED;
./src/mme/mme-s11-handler.c:        sess->pti = req->procedure_transaction_id.u8;
./src/mme/mme-s11-handler.c:        ogs_debug("    PTI[%d]", sess->pti);
./src/mme/mme-s11-handler.c:                    mme_ue, sess->pti,
./src/mme/mme-s11-handler.c:    sess->pti = OGS_NAS_PROCEDURE_TRANSACTION_IDENTITY_UNASSIGNED;
./src/mme/mme-s11-handler.c:        sess->pti = req->procedure_transaction_id.u8;
./src/mme/mme-s11-handler.c:        ogs_debug("    PTI[%d]", sess->pti);
./src/mme/mme-s11-handler.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/mme-s11-handler.c:    mme_ue = mme_ue_cycle(sess->mme_ue);
./src/mme/mme-s11-handler.c:            mme_ue, sess->pti, esm_cause_from_gtp(cause_value));
./src/mme/esm-build.c:    mme_ue = sess->mme_ue;
./src/mme/esm-build.c:            mme_ue->imsi_bcd, sess->pti, esm_cause);
./src/mme/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti;
./src/mme/esm-build.c:            mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti;
./src/mme/esm-build.c:    mme_ue = sess->mme_ue;
./src/mme/esm-build.c:    session = sess->session;
./src/mme/esm-build.c:            mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti;
./src/mme/esm-build.c:    if (sess->request_type.type == OGS_NAS_EPS_PDN_TYPE_IPV4V6) {
./src/mme/esm-build.c:    } else if (sess->request_type.type == OGS_PDU_SESSION_TYPE_IPV4) {
./src/mme/esm-build.c:    } else if (sess->request_type.type == OGS_PDU_SESSION_TYPE_IPV6) {
./src/mme/esm-build.c:    if (sess->pgw_epco.presence && sess->pgw_epco.len && sess->pgw_epco.data) {
./src/mme/esm-build.c:            sess->pgw_epco.len;
./src/mme/esm-build.c:            sess->pgw_epco.data;
./src/mme/esm-build.c:    } else if (sess->pgw_pco.presence && sess->pgw_pco.len &&
./src/mme/esm-build.c:            sess->pgw_pco.data) {
./src/mme/esm-build.c:        protocol_configuration_options->length = sess->pgw_pco.len;
./src/mme/esm-build.c:                sess->pgw_pco.data, protocol_configuration_options->length);
./src/mme/esm-build.c:        sess->pti = OGS_NAS_PROCEDURE_TRANSACTION_IDENTITY_UNASSIGNED;
./src/mme/esm-build.c:            mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti;
./src/mme/esm-build.c:            mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti;
./src/mme/s1ap-handler.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/mme-sm.c:     *       ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/s1ap-build.c:            bearer = ogs_list_first(&sess->bearer_list);
./src/mme/s1ap-build.c:            ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/s1ap-build.c:                    sess->session ? sess->session->name : "Unknown");
./src/mme/s1ap-build.c:            ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/s1ap-build.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/s1ap-build.c:            ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/s1ap-build.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/s1ap-build.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/mme-s11-build.c:    session = sess->session;
./src/mme/mme-s11-build.c:    mme_ue = sess->mme_ue;
./src/mme/mme-s11-build.c:    pgw_s5c_teid.teid = htobe32(sess->pgw_s5c_teid);
./src/mme/mme-s11-build.c:    ogs_assert(sess->request_type.type == OGS_NAS_EPS_PDN_TYPE_IPV4 ||
./src/mme/mme-s11-build.c:            sess->request_type.type == OGS_NAS_EPS_PDN_TYPE_IPV6 ||
./src/mme/mme-s11-build.c:            sess->request_type.type == OGS_NAS_EPS_PDN_TYPE_IPV4V6);
./src/mme/mme-s11-build.c:        req->pdn_type.u8 = (session->session_type & sess->request_type.type);
./src/mme/mme-s11-build.c:                sess->request_type.type, session->session_type);
./src/mme/mme-s11-build.c:     * (pdn_type & sess->request_type) truncates us down to just one,
./src/mme/mme-s11-build.c:    if (sess->request_type.value == OGS_NAS_EPS_REQUEST_TYPE_HANDOVER)
./src/mme/mme-s11-build.c:    if (sess->ue_epco.length && sess->ue_epco.buffer) {
./src/mme/mme-s11-build.c:            sess->ue_epco.buffer;
./src/mme/mme-s11-build.c:            sess->ue_epco.length;
./src/mme/mme-s11-build.c:    } else if (sess->ue_pco.length && sess->ue_pco.buffer) {
./src/mme/mme-s11-build.c:        req->protocol_configuration_options.data = sess->ue_pco.buffer;
./src/mme/mme-s11-build.c:        req->protocol_configuration_options.len = sess->ue_pco.length;
./src/mme/mme-s11-build.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/mme-s11-build.c:        if (sess->request_type.value == OGS_NAS_EPS_REQUEST_TYPE_HANDOVER) {
./src/mme/mme-s11-build.c:    mme_ue = sess->mme_ue;
./src/mme/mme-s11-build.c:    mme_ue = sess->mme_ue;
./src/mme/mme-s11-build.c:    cmd->procedure_transaction_id.u8 = sess->pti;
./src/mme/mme-gtp-path.c:        mme_ue = sess->mme_ue;
./src/mme/mme-gtp-path.c:        mme_ue = sess->mme_ue;
./src/mme/mme-gtp-path.c:    mme_ue = sess->mme_ue;
./src/mme/mme-gtp-path.c:    mme_ue = sess->mme_ue;
./src/mme/nas-path.c:    mme_ue = sess->mme_ue;
./src/mme/mme-context.c:    ogs_assert(sess->session);
./src/mme/mme-context.c:    ogs_assert(sess->session->name);
./src/mme/mme-context.c:    mme_ue = sess->mme_ue;
./src/mme/mme-context.c:      if (!ogs_strcasecmp(pgw->apn[i], sess->session->name)) return true;
./src/mme/mme-context.c:                ogs_list_for_each(&old_sess->bearer_list, old_bearer) {
./src/mme/mme-context.c:                old_sess->mme_ue = mme_ue;
./src/mme/mme-context.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/mme-context.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/mme-context.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/mme-context.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/mme-context.c:    ogs_list_init(&sess->bearer_list);
./src/mme/mme-context.c:    sess->mme_ue = mme_ue;
./src/mme/mme-context.c:    sess->pti = pti;
./src/mme/mme-context.c:    mme_ue = sess->mme_ue;
./src/mme/mme-context.c:    OGS_NAS_CLEAR_DATA(&sess->ue_pco);
./src/mme/mme-context.c:    OGS_NAS_CLEAR_DATA(&sess->ue_epco);
./src/mme/mme-context.c:    OGS_TLV_CLEAR_DATA(&sess->pgw_pco);
./src/mme/mme-context.c:    OGS_TLV_CLEAR_DATA(&sess->pgw_epco);
./src/mme/mme-context.c:        if (pti == sess->pti)
./src/mme/mme-context.c:        if (sess->session) {
./src/mme/mme-context.c:            ogs_assert(sess->session->name);
./src/mme/mme-context.c:            if (ogs_strcasecmp(sess->session->name, apn) == 0)
./src/mme/mme-context.c:    mme_ue = sess->mme_ue;
./src/mme/mme-context.c:    ogs_list_add(&sess->bearer_list, bearer);
./src/mme/mme-context.c:    ogs_list_remove(&bearer->sess->bearer_list, bearer);
./src/mme/mme-context.c:        sess->pti = pti;
./src/mme/mme-context.c:                sess->pti = pti;
./src/mme/mme-context.c:                    sess->session ? sess->session->name : "Unknown",
./src/mme/mme-context.c:                    sess->pti, pti, sess);
./src/mme/mme-context.c:                    sess->mme_ue ? sess->mme_ue->imsi_bcd : "Unknown",
./src/mme/mme-context.c:                    sess->mme_ue);
./src/mme/mme-context.c:                sess->session ? sess->session->name : "Unknown",
./src/mme/mme-context.c:                sess->pti, pti, sess);
./src/mme/mme-context.c:                sess->mme_ue ? sess->mme_ue->imsi_bcd : "Unknown",
./src/mme/mme-context.c:                sess->mme_ue);
./src/mme/mme-context.c:            sess->pti = pti;
./src/mme/mme-context.c:                sess->session ? sess->session->name : "Unknown",
./src/mme/mme-context.c:                sess->pti, pti, sess);
./src/mme/mme-context.c:                sess->mme_ue ? sess->mme_ue->imsi_bcd : "Unknown",
./src/mme/mme-context.c:                sess->mme_ue);
./src/mme/mme-context.c:    return ogs_list_first(&sess->bearer_list);
./src/mme/mme-gn-build.c:    mme_ue_t *mme_ue = sess->mme_ue;
./src/mme/mme-gn-build.c:    const mme_ue_t *mme_ue = sess->mme_ue;
./src/mme/mme-gn-build.c:    const ogs_session_t *session = sess->session;
./src/mme/mme-gn-build.c:        .ul_teic = sess->pgw_s5c_teid,
./src/mme/mme-gn-build.c:        .pdp_type_num = {sess->session->session_type, },
./src/mme/mme-gn-build.c:        .pdp_address = {sess->session->ue_ip, },
./src/mme/mme-gn-build.c:        .ggsn_address_c = sess->pgw_s5c_ip,
./src/mme/mme-gn-build.c:        .trans_id = sess->pti,
./src/mme/mme-gn-build.c:    ogs_cpystrn(pdpctx_dec->apn, sess->session->name, sizeof(pdpctx_dec->apn));
./src/mme/mme-gn-build.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/mme-gn-build.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./src/mme/esm-handler.c:    mme_ue = sess->mme_ue;
./src/mme/esm-handler.c:    memcpy(&sess->request_type, &req->request_type, sizeof(sess->request_type));
./src/mme/esm-handler.c:        sess->session = mme_session_find_by_apn(
./src/mme/esm-handler.c:        if (!sess->session) {
./src/mme/esm-handler.c:        if (sess->session->session_type == OGS_PDU_SESSION_TYPE_IPV4 ||
./src/mme/esm-handler.c:            sess->session->session_type == OGS_PDU_SESSION_TYPE_IPV6 ||
./src/mme/esm-handler.c:            sess->session->session_type == OGS_PDU_SESSION_TYPE_IPV4V6) {
./src/mme/esm-handler.c:                (sess->session->session_type & sess->request_type.type);
./src/mme/esm-handler.c:                    sess->request_type.type, sess->session->session_type);
./src/mme/esm-handler.c:            ogs_fatal("Invalid PDN_TYPE[%d]", sess->session->session_type);
./src/mme/esm-handler.c:        OGS_NAS_STORE_DATA(&sess->ue_epco,
./src/mme/esm-handler.c:        OGS_NAS_STORE_DATA(&sess->ue_pco, protocol_configuration_options);
./src/mme/esm-handler.c:    if (!sess->session) {
./src/mme/esm-handler.c:        sess->session = mme_default_session(mme_ue);
./src/mme/esm-handler.c:    if (sess->session) {
./src/mme/esm-handler.c:        ogs_assert(sess->session->name);
./src/mme/esm-handler.c:        ogs_debug("    APN[%s]", sess->session->name);
./src/mme/esm-handler.c:    mme_ue = sess->mme_ue;
./src/mme/esm-handler.c:        sess->session = mme_session_find_by_apn(
./src/mme/esm-handler.c:        OGS_NAS_STORE_DATA(&sess->ue_epco,
./src/mme/esm-handler.c:        OGS_NAS_STORE_DATA(&sess->ue_pco, protocol_configuration_options);
./src/mme/esm-handler.c:    if (sess->session) {
./src/mme/esm-handler.c:        ogs_assert(sess->session->name);
./src/mme/esm-handler.c:        ogs_debug("    APN[%s]", sess->session->name);
./src/mme/esm-handler.c:        if (sess->session->session_type == OGS_PDU_SESSION_TYPE_IPV4 ||
./src/mme/esm-handler.c:            sess->session->session_type == OGS_PDU_SESSION_TYPE_IPV6 ||
./src/mme/esm-handler.c:            sess->session->session_type == OGS_PDU_SESSION_TYPE_IPV4V6) {
./src/mme/esm-handler.c:                (sess->session->session_type & sess->request_type.type);
./src/mme/esm-handler.c:                    sess->request_type.type, sess->session->session_type);
./src/mme/esm-handler.c:            ogs_fatal("Invalid PDN_TYPE[%d]", sess->session->session_type);
./src/mme/esm-handler.c:            OGS_PDU_SESSION_TYPE_IS_VALID(sess->session->paa.session_type)) {
./src/mme/esm-handler.c:    mme_ue = sess->mme_ue;
./src/mme/esm-handler.c:            mme_ue, sess->pti, OGS_NAS_ESM_CAUSE_NETWORK_FAILURE);
./src/mme/esm-sm.c:    mme_ue = sess->mme_ue;
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:    mme_ue = sess->mme_ue;
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:    mme_ue = sess->mme_ue;
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/esm-sm.c:                    mme_ue->imsi_bcd, sess->pti, bearer->ebi);
./src/mme/mme-context.h:            ogs_list_for_each(&sess->bearer_list, bearer) { \
./src/mme/mme-gn-handler.c:        ogs_sess->name = ogs_strdup(gtp1_pdp_ctx->apn);
./src/mme/mme-gn-handler.c:    ogs_sess->smf_ip = gtp1_pdp_ctx->ggsn_address_c;
./src/mme/mme-gn-handler.c:    ogs_sess->context_identifier = gtp1_pdp_ctx->pdp_ctx_id;
./src/mme/mme-gn-handler.c:    ogs_sess->session_type = gtp1_pdp_ctx->pdp_type_num[0];
./src/mme/mme-gn-handler.c:    ogs_sess->ue_ip = gtp1_pdp_ctx->pdp_address[0];
./src/mme/mme-gn-handler.c:    /* TODO: sess->paa with gtp1_pdp_ctx->pdp_address[0],
./src/mme/mme-gn-handler.c:    ogs_ip_to_paa(&ogs_sess->ue_ip, &ogs_sess->paa);
./src/mme/mme-gn-handler.c:    ogs_sess->qos.index = qci;
./src/mme/mme-gn-handler.c:    ogs_sess->qos.arp.priority_level = qos_pdec->qos_profile.arp; /* 3GPP TS 23.401 Annex E Table E.2 */
./src/mme/mme-gn-handler.c:    ogs_sess->qos.arp.pre_emption_capability = 0; /* ignored as per 3GPP TS 23.401 Annex E */
./src/mme/mme-gn-handler.c:    ogs_sess->qos.arp.pre_emption_vulnerability = 0; /* ignored as per 3GPP TS 23.401 Annex E */
./src/mme/mme-gn-handler.c:        ogs_sess->ambr.downlink = qos_pdec->dec_mbr_kbps_dl * 1000;
./src/mme/mme-gn-handler.c:        ogs_sess->ambr.uplink = qos_pdec->dec_mbr_kbps_ul * 1000;
./src/mme/mme-gn-handler.c:    sess->session = ogs_sess;
./src/mme/mme-gn-handler.c:    sess->pgw_s5c_teid = gtp1_pdp_ctx->ul_teic;
./src/mme/mme-gn-handler.c:    sess->pgw_s5c_ip = gtp1_pdp_ctx->ggsn_address_c;
./src/mme/mme-gn-handler.c:    switch (ogs_sess->session_type) {
./src/mme/mme-gn-handler.c:        sess->request_type.type = OGS_NAS_EPS_PDN_TYPE_IPV4;
./src/mme/mme-gn-handler.c:        sess->request_type.type = OGS_NAS_EPS_PDN_TYPE_IPV6;
./src/mme/mme-gn-handler.c:        sess->request_type.type = OGS_NAS_EPS_PDN_TYPE_IPV4V6;
./src/mme/mme-gn-handler.c:    sess->request_type.value = OGS_NAS_EPS_REQUEST_TYPE_INITIAL;
./src/bsf/context.c:    OGS_SBI_FEATURES_SET(sess->management_features,
./src/bsf/context.c:    sess->binding_id = ogs_msprintf("%d",
./src/bsf/context.c:    ogs_assert(sess->binding_id);
./src/bsf/context.c:    ogs_sbi_object_free(&sess->sbi);
./src/bsf/context.c:    ogs_assert(sess->binding_id);
./src/bsf/context.c:    ogs_free(sess->binding_id);
./src/bsf/context.c:    if (sess->supi)
./src/bsf/context.c:        ogs_free(sess->supi);
./src/bsf/context.c:    if (sess->gpsi)
./src/bsf/context.c:        ogs_free(sess->gpsi);
./src/bsf/context.c:    if (sess->ipv4addr_string) {
./src/bsf/context.c:                &sess->ipv4addr, sizeof(sess->ipv4addr), NULL);
./src/bsf/context.c:        ogs_free(sess->ipv4addr_string);
./src/bsf/context.c:    if (sess->ipv6prefix_string) {
./src/bsf/context.c:                &sess->ipv6prefix, (sess->ipv6prefix.len >> 3) + 1, NULL);
./src/bsf/context.c:        ogs_free(sess->ipv6prefix_string);
./src/bsf/context.c:    OpenAPI_clear_and_free_string_list(sess->ipv4_frame_route_list);
./src/bsf/context.c:    OpenAPI_clear_and_free_string_list(sess->ipv6_frame_route_list);
./src/bsf/context.c:    ogs_assert(sess->dnn);
./src/bsf/context.c:    ogs_free(sess->dnn);
./src/bsf/context.c:    if (sess->pcf_fqdn)
./src/bsf/context.c:        ogs_free(sess->pcf_fqdn);
./src/bsf/context.c:    for (i = 0; i < sess->num_of_pcf_ip; i++) {
./src/bsf/context.c:        if (sess->pcf_ip[i].addr)
./src/bsf/context.c:            ogs_free(sess->pcf_ip[i].addr);
./src/bsf/context.c:        if (sess->pcf_ip[i].addr6)
./src/bsf/context.c:            ogs_free(sess->pcf_ip[i].addr6);
./src/bsf/context.c:    sess->num_of_pcf_ip = 0;
./src/bsf/context.c:    if (sess->ipv4addr_string) {
./src/bsf/context.c:                &sess->ipv4addr, sizeof(sess->ipv4addr), NULL);
./src/bsf/context.c:        ogs_free(sess->ipv4addr_string);
./src/bsf/context.c:    rv = ogs_ipv4_from_string(&sess->ipv4addr, ipv4addr_string);
./src/bsf/context.c:    sess->ipv4addr_string = ogs_strdup(ipv4addr_string);
./src/bsf/context.c:    if (!sess->ipv4addr_string) {
./src/bsf/context.c:            &sess->ipv4addr, sizeof(sess->ipv4addr), sess);
./src/bsf/context.c:    if (sess->ipv6prefix_string) {
./src/bsf/context.c:                &sess->ipv6prefix, (sess->ipv6prefix.len >> 3) + 1, NULL);
./src/bsf/context.c:        ogs_free(sess->ipv6prefix_string);
./src/bsf/context.c:            sess->ipv6prefix.addr6, &sess->ipv6prefix.len, ipv6prefix_string);
./src/bsf/context.c:    ogs_assert(sess->ipv6prefix.len == OGS_IPV6_128_PREFIX_LEN);
./src/bsf/context.c:    sess->ipv6prefix_string = ogs_strdup(ipv6prefix_string);
./src/bsf/context.c:    if (!sess->ipv6prefix_string) {
./src/bsf/context.c:            &sess->ipv6prefix, (sess->ipv6prefix.len >> 3) + 1, sess);
./src/bsf/context.c:        if (sess->s_nssai.sst == s_nssai->sst &&
./src/bsf/context.c:            sess->dnn && ogs_strcasecmp(sess->dnn, dnn) == 0)
./src/bsf/sbi-path.c:            &sess->sbi, service_type, discovery_option,
./src/bsf/sbi-path.c:                "Cannot discover", sess->dnn, NULL));
./src/bsf/sbi-path.c:    xact->supi_id = ogs_id_get_value(sess->supi);
./src/bsf/sbi-path.c:                "Cannot discover", sess->dnn, NULL));
./src/bsf/telnetcmd.c:               sess->binding_id,
./src/bsf/telnetcmd.c:               sess->supi,
./src/bsf/telnetcmd.c:               sess->gpsi,
./src/bsf/telnetcmd.c:               sess->ipv4addr_string,
./src/bsf/telnetcmd.c:               sess->ipv6prefix_string,
./src/bsf/telnetcmd.c:               sess->dnn);
./src/bsf/telnetcmd.c:    printf("  |--binding_id        : %s \r\n", sess->binding_id);
./src/bsf/telnetcmd.c:    printf("  |--supi              : %s \r\n", sess->supi);
./src/bsf/telnetcmd.c:    printf("  |--gpsi              : %s \r\n",  sess->gpsi);
./src/bsf/telnetcmd.c:    printf("  |--ipv6prefix_string : %s \r\n",  sess->ipv6prefix_string);
./src/bsf/telnetcmd.c:    printf("  |--s_nssai           : SST:%d SD:0x%x \r\n", sess->s_nssai.sst,sess->s_nssai.sd.v);
./src/bsf/telnetcmd.c:    printf("  |--dnn               : %s \r\n",  sess->dnn);
./src/bsf/telnetcmd.c:    printf("  |--pcf_fqdn          : %s \r\n",  sess->pcf_fqdn);
./src/bsf/telnetcmd.c:    printf("  |--num_of_pcf_ip     : %d \r\n",  sess->num_of_pcf_ip);
./src/bsf/telnetcmd.c:    for (i = 0; i < sess->num_of_pcf_ip; i++){
./src/bsf/telnetcmd.c:        printf("    |--addr        : %s \r\n",  sess->pcf_ip[i].addr);
./src/bsf/telnetcmd.c:        printf("    |--addr6       : %s \r\n",  sess->pcf_ip[i].addr6);
./src/bsf/telnetcmd.c:        printf("    |--is_port     : %d \r\n",  sess->pcf_ip[i].is_port);
./src/bsf/telnetcmd.c:        printf("    |--port        : %d \r\n",  sess->pcf_ip[i].port);
./src/bsf/telnetcmd.c:    if (sess->ipv4_frame_route_list) {
./src/bsf/telnetcmd.c:        OpenAPI_list_for_each(sess->ipv4_frame_route_list, node) {
./src/bsf/telnetcmd.c:    if (sess->ipv6_frame_route_list) {
./src/bsf/telnetcmd.c:        OpenAPI_list_for_each(sess->ipv6_frame_route_list, node) {
./src/bsf/telnetcmd.c:    printf("  |--management_features: %ld \r\n",  sess->management_features);
./src/bsf/nbsf-handler.c:                if (sess->pcf_fqdn)
./src/bsf/nbsf-handler.c:                    ogs_free(sess->pcf_fqdn);
./src/bsf/nbsf-handler.c:                sess->pcf_fqdn = ogs_strdup(RecvPcfBinding->pcf_fqdn);
./src/bsf/nbsf-handler.c:                ogs_assert(sess->pcf_fqdn);
./src/bsf/nbsf-handler.c:                OpenAPI_clear_and_free_string_list(sess->ipv4_frame_route_list);
./src/bsf/nbsf-handler.c:                sess->ipv4_frame_route_list = OpenAPI_list_create();
./src/bsf/nbsf-handler.c:                    OpenAPI_list_add(sess->ipv4_frame_route_list, ogs_strdup(node->data));
./src/bsf/nbsf-handler.c:                OpenAPI_clear_and_free_string_list(sess->ipv6_frame_route_list);
./src/bsf/nbsf-handler.c:                sess->ipv6_frame_route_list = OpenAPI_list_create();
./src/bsf/nbsf-handler.c:                    OpenAPI_list_add(sess->ipv6_frame_route_list, ogs_strdup(node->data));
./src/bsf/nbsf-handler.c:            sess->s_nssai.sst = RecvPcfBinding->snssai->sst;
./src/bsf/nbsf-handler.c:            sess->s_nssai.sd =
./src/bsf/nbsf-handler.c:            sess->dnn = ogs_strdup(RecvPcfBinding->dnn);
./src/bsf/nbsf-handler.c:            ogs_assert(sess->dnn);
./src/bsf/nbsf-handler.c:                for (i = 0; i < sess->num_of_pcf_ip; i++) {
./src/bsf/nbsf-handler.c:                    if (sess->pcf_ip[i].addr)
./src/bsf/nbsf-handler.c:                        ogs_free(sess->pcf_ip[i].addr);
./src/bsf/nbsf-handler.c:                    if (sess->pcf_ip[i].addr6)
./src/bsf/nbsf-handler.c:                        ogs_free(sess->pcf_ip[i].addr6);
./src/bsf/nbsf-handler.c:                sess->num_of_pcf_ip = 0;
./src/bsf/nbsf-handler.c:                    if (sess->num_of_pcf_ip < OGS_SBI_MAX_NUM_OF_IP_ADDRESS) {
./src/bsf/nbsf-handler.c:                                sess->pcf_ip[sess->num_of_pcf_ip].addr =
./src/bsf/nbsf-handler.c:                                sess->pcf_ip[sess->num_of_pcf_ip].addr6 =
./src/bsf/nbsf-handler.c:                                sess->pcf_ip[sess->num_of_pcf_ip].is_port =
./src/bsf/nbsf-handler.c:                                sess->pcf_ip[sess->num_of_pcf_ip].port =
./src/bsf/nbsf-handler.c:                            sess->num_of_pcf_ip++;
./src/bsf/nbsf-handler.c:                if (sess->supi)
./src/bsf/nbsf-handler.c:                    ogs_free(sess->supi);
./src/bsf/nbsf-handler.c:                sess->supi = ogs_strdup(RecvPcfBinding->supi);
./src/bsf/nbsf-handler.c:                if (sess->gpsi)
./src/bsf/nbsf-handler.c:                    ogs_free(sess->gpsi);
./src/bsf/nbsf-handler.c:                sess->gpsi = ogs_strdup(RecvPcfBinding->gpsi);
./src/bsf/nbsf-handler.c:            header.resource.component[1] = sess->binding_id;
./src/bsf/nbsf-handler.c:                sess->management_features &= supported_features;
./src/bsf/nbsf-handler.c:                if (sess->management_features != supported_features) {
./src/bsf/nbsf-handler.c:                        ogs_uint64_to_string(sess->management_features);
./src/bsf/nbsf-handler.c:                sess->management_features = 0;
./src/bsf/nbsf-handler.c:            if (sess->num_of_pcf_ip) {
./src/bsf/nbsf-handler.c:                Snssai.sst = sess->s_nssai.sst;
./src/bsf/nbsf-handler.c:                Snssai.sd = ogs_s_nssai_sd_to_string(sess->s_nssai.sd);
./src/bsf/nbsf-handler.c:                SendPcfBinding.dnn = sess->dnn;
./src/bsf/nbsf-handler.c:                if (sess->pcf_fqdn && strlen(sess->pcf_fqdn))
./src/bsf/nbsf-handler.c:                    SendPcfBinding.pcf_fqdn = ogs_strdup(sess->pcf_fqdn);
./src/bsf/nbsf-handler.c:                for (i = 0; i < sess->num_of_pcf_ip; i++) {
./src/bsf/nbsf-handler.c:                    ogs_assert(sess->pcf_ip[i].addr || sess->pcf_ip[i].addr6);
./src/bsf/nbsf-handler.c:                    PcfIpEndPoint->ipv4_address = sess->pcf_ip[i].addr;
./src/bsf/nbsf-handler.c:                    PcfIpEndPoint->ipv6_address = sess->pcf_ip[i].addr6;
./src/bsf/nbsf-handler.c:                    PcfIpEndPoint->is_port = sess->pcf_ip[i].is_port;
./src/bsf/nbsf-handler.c:                    PcfIpEndPoint->port = sess->pcf_ip[i].port;
./src/sgwc/pfcp-path.c:    xact->local_seid = sess->sgwc_sxa_seid;
./src/sgwc/pfcp-path.c:    h.seid = sess->sgwu_sxa_seid;
./src/sgwc/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_timeout, sess);
./src/sgwc/pfcp-path.c:    xact->local_seid = sess->sgwc_sxa_seid;
./src/sgwc/pfcp-path.c:    h.seid = sess->sgwu_sxa_seid;
./src/sgwc/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_timeout, sess);
./src/sgwc/pfcp-path.c:    xact->local_seid = sess->sgwc_sxa_seid;
./src/sgwc/pfcp-path.c:    ogs_list_for_each(&sess->bearer_list, bearer)
./src/sgwc/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, bearer_timeout, bearer);
./src/sgwc/pfcp-path.c:    xact->local_seid = sess->sgwc_sxa_seid;
./src/sgwc/pfcp-path.c:    h.seid = sess->sgwu_sxa_seid;
./src/sgwc/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_timeout, sess);
./src/sgwc/pfcp-path.c:    xact->local_seid = sess->sgwc_sxa_seid;
./src/sgwc/pfcp-path.c:    h.seid = sess->sgwu_sxa_seid;
./src/sgwc/pfcp-path.c:    h.seid = sess->sgwu_sxa_seid;
./src/sgwc/sxa-handler.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/sxa-handler.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/sxa-handler.c:                    &sess->pfcp, &pfcp_rsp->created_pdr[i],
./src/sgwc/sxa-handler.c:        ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/sgwc/sxa-handler.c:                ogs_assert(sess->pfcp_node);
./src/sgwc/sxa-handler.c:                if (sess->pfcp_node->up_function_features.ftup &&
./src/sgwc/sxa-handler.c:        if (sess) sgwc_ue = sess->sgwc_ue;
./src/sgwc/sxa-handler.c:        sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/sxa-handler.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/sgwc/sxa-handler.c:    sgw_s5c_teid.teid = htobe32(sess->sgw_s5c_teid);
./src/sgwc/sxa-handler.c:    sess->sgwu_sxa_seid = be64toh(up_f_seid->seid);
./src/sgwc/sxa-handler.c:        send_message.h.teid = sess->pgw_s5c_teid;
./src/sgwc/sxa-handler.c:        ogs_assert(sess->gnode);
./src/sgwc/sxa-handler.c:                sess->gnode, &send_message.h, pkbuf, sess_timeout, sess);
./src/sgwc/sxa-handler.c:        s5c_xact->local_teid = sess->sgw_s5c_teid;
./src/sgwc/sxa-handler.c:        recv_message->h.teid = sess->pgw_s5c_teid;
./src/sgwc/sxa-handler.c:        ogs_assert(sess->gnode);
./src/sgwc/sxa-handler.c:                sess->gnode, &recv_message->h, pkbuf, sess_timeout, sess);
./src/sgwc/sxa-handler.c:        s5c_xact->local_teid = sess->sgw_s5c_teid;
./src/sgwc/sxa-handler.c:        sgwc_ue = sess->sgwc_ue;
./src/sgwc/sxa-handler.c:                    &sess->pfcp, &pfcp_rsp->created_pdr[i],
./src/sgwc/sxa-handler.c:                ogs_assert(sess->pfcp_node);
./src/sgwc/sxa-handler.c:                if (sess->pfcp_node->up_function_features.ftup &&
./src/sgwc/sxa-handler.c:                        s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/sxa-handler.c:                    s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/sxa-handler.c:                    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/sgwc/sxa-handler.c:                recv_message->h.teid = sess->pgw_s5c_teid;
./src/sgwc/sxa-handler.c:            recv_message->h.teid = sess->pgw_s5c_teid;
./src/sgwc/sxa-handler.c:                    recv_message->h.teid = sess->pgw_s5c_teid;
./src/sgwc/sxa-handler.c:                    ogs_assert(sess->gnode);
./src/sgwc/sxa-handler.c:                            sess->gnode, &recv_message->h, pkbuf,
./src/sgwc/sxa-handler.c:                    s5c_xact->local_teid = sess->sgw_s5c_teid;
./src/sgwc/sxa-handler.c:        if (sess) sgwc_ue = sess->sgwc_ue;
./src/sgwc/sxa-handler.c:        teid = sess ? sess->pgw_s5c_teid : 0;
./src/sgwc/sxa-handler.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/sxa-handler.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/sxa-handler.c:        ogs_pfcp_send_error_message(pfcp_xact, sess ? sess->sgwu_sxa_seid : 0,
./src/sgwc/sxa-handler.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./src/sgwc/sxa-handler.c:                &sess->pfcp, &pfcp_req->error_indication_report);
./src/sgwc/context.c:    ogs_pfcp_pool_init(&sess->pfcp);
./src/sgwc/context.c:    ogs_pool_alloc(&sgwc_sxa_seid_pool, &sess->sgwc_sxa_seid_node);
./src/sgwc/context.c:    ogs_assert(sess->sgwc_sxa_seid_node);
./src/sgwc/context.c:    sess->sgw_s5c_teid = *(sess->sgwc_sxa_seid_node);
./src/sgwc/context.c:    sess->sgwc_sxa_seid = *(sess->sgwc_sxa_seid_node);
./src/sgwc/context.c:            &sess->sgwc_sxa_seid, sizeof(sess->sgwc_sxa_seid), sess);
./src/sgwc/context.c:    ogs_pfcp_bar_new(&sess->pfcp);
./src/sgwc/context.c:    sess->session.name = ogs_strdup(apn);
./src/sgwc/context.c:    ogs_assert(sess->session.name);
./src/sgwc/context.c:    sess->sgwc_ue = sgwc_ue;
./src/sgwc/context.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/context.c:    ogs_assert(sess->session.name);
./src/sgwc/context.c:        if (ogs_strcasecmp(node->dnn[i], sess->session.name) == 0) return true;
./src/sgwc/context.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/context.c:    ogs_hash_set(self.sgwc_sxa_seid_hash, &sess->sgwc_sxa_seid,
./src/sgwc/context.c:            sizeof(sess->sgwc_sxa_seid), NULL);
./src/sgwc/context.c:    ogs_assert(sess->pfcp.bar);
./src/sgwc/context.c:    ogs_pfcp_bar_delete(sess->pfcp.bar);
./src/sgwc/context.c:    ogs_pfcp_pool_final(&sess->pfcp);
./src/sgwc/context.c:    ogs_assert(sess->session.name);
./src/sgwc/context.c:    ogs_free(sess->session.name);
./src/sgwc/context.c:    ogs_pool_free(&sgwc_sxa_seid_pool, sess->sgwc_sxa_seid_node);
./src/sgwc/context.c:        if (!ogs_strcasecmp(sess->session.name, apn))
./src/sgwc/context.c:        ogs_pfcp_node_t *pfcp_node = sess->pfcp_node;
./src/sgwc/context.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/context.c:    ogs_list_add(&sess->bearer_list, bearer);
./src/sgwc/context.c:    ogs_list_remove(&bearer->sess->bearer_list, bearer);
./src/sgwc/context.c:    ogs_list_for_each_safe(&sess->bearer_list, next_bearer, bearer)
./src/sgwc/context.c:    ogs_list_for_each(&sess->bearer_list, bearer)
./src/sgwc/context.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./src/sgwc/context.c:    return ogs_list_first(&sess->bearer_list);
./src/sgwc/context.c:    pdr = ogs_pfcp_pdr_add(&sess->pfcp);
./src/sgwc/context.c:    ogs_assert(sess->session.name);
./src/sgwc/context.c:    pdr->apn = ogs_strdup(sess->session.name);
./src/sgwc/context.c:    far = ogs_pfcp_far_add(&sess->pfcp);
./src/sgwc/context.c:    ogs_assert(sess->session.name);
./src/sgwc/context.c:    far->apn = ogs_strdup(sess->session.name);
./src/sgwc/context.c:    ogs_assert(sess->pfcp.bar);
./src/sgwc/context.c:    ogs_assert(sess->pfcp_node);
./src/sgwc/context.c:    if (sess->pfcp_node->up_function_features.ftup) {
./src/sgwc/context.c:                &sess->pfcp_node->gtpu_resource_list,
./src/sgwc/context.c:                sess->session.name, pdr->src_if);
./src/sgwc/context.c:            if (sess->pfcp_node->addr.ogs_sa_family == AF_INET)
./src/sgwc/context.c:                        &tunnel->local_addr, &sess->pfcp_node->addr));
./src/sgwc/context.c:            else if (sess->pfcp_node->addr.ogs_sa_family == AF_INET6)
./src/sgwc/context.c:                        &tunnel->local_addr6, &sess->pfcp_node->addr));
./src/sgwc/context.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./src/sgwc/context.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/sgwc/context.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/sgwc/sxa-build.c:    f_seid.seid = htobe64(sess->sgwc_sxa_seid);
./src/sgwc/sxa-build.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/sgwc/sxa-build.c:    ogs_list_for_each(&sess->pfcp.far_list, far) {
./src/sgwc/sxa-build.c:    ogs_list_for_each(&sess->pfcp.urr_list, urr) {
./src/sgwc/sxa-build.c:    ogs_list_for_each(&sess->pfcp.qer_list, qer) {
./src/sgwc/sxa-build.c:    if (sess->pfcp.bar) {
./src/sgwc/sxa-build.c:        ogs_pfcp_build_create_bar(&req->create_bar, sess->pfcp.bar);
./src/sgwc/pfcp-sm.c:                sess->sgwu_sxa_seid = be64toh(up_f_seid->seid);
./src/sgwc/pfcp-sm.c:            if (node == sess->pfcp_node) {
./src/sgwc/pfcp-sm.c:                    sgwc_ue->imsi_bcd, sess->session.name);
./src/sgwc/s5c-handler.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/s5c-handler.c:        sgwc_ue = sess->sgwc_ue;
./src/sgwc/s5c-handler.c:        sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/s5c-handler.c:    sess->pgw_s5c_teid = be32toh(pgw_s5c_teid->teid);
./src/sgwc/s5c-handler.c:        sgwc_ue = sess->sgwc_ue;
./src/sgwc/s5c-handler.c:        sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/s5c-handler.c:        sgwc_ue = sess->sgwc_ue;
./src/sgwc/s5c-handler.c:        sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/s5c-handler.c:        sgwc_ue = sess->sgwc_ue;
./src/sgwc/s5c-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s5c-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s5c-handler.c:        sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/s5c-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s5c-handler.c:        sgwc_ue = sess->sgwc_ue;
./src/sgwc/s5c-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s5c-handler.c:        sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/s5c-handler.c:        sgwc_ue = sess->sgwc_ue;
./src/sgwc/s5c-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s5c-handler.c:        sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/s5c-handler.c:        sgwc_ue = sess->sgwc_ue;
./src/sgwc/gtp-path.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/gtp-path.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/s11-build.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/s11-build.c:            sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/s11-build.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/sgwc/s11-build.c:        sess->session.qos.arp.pre_emption_vulnerability;
./src/sgwc/s11-build.c:    arp.priority_level = sess->session.qos.arp.priority_level;
./src/sgwc/s11-build.c:    arp.pre_emption_capability = sess->session.qos.arp.pre_emption_capability;
./src/sgwc/s11-handler.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/s11-handler.c:    sgwc_ue = sess->sgwc_ue;
./src/sgwc/s11-handler.c:                sgwc_ue->imsi_bcd, sess->session.name);
./src/sgwc/s11-handler.c:    ogs_info("UE IMSI[%s] APN[%s]", sgwc_ue->imsi_bcd, sess->session.name);
./src/sgwc/s11-handler.c:    ogs_assert(sess->pfcp_node);
./src/sgwc/s11-handler.c:    if (!OGS_FSM_CHECK(&sess->pfcp_node->sm, sgwc_pfcp_state_associated)) {
./src/sgwc/s11-handler.c:            sess->session.qos.index = bearer_qos.qci;
./src/sgwc/s11-handler.c:            sess->session.qos.arp.priority_level = bearer_qos.priority_level;
./src/sgwc/s11-handler.c:            sess->session.qos.arp.pre_emption_capability =
./src/sgwc/s11-handler.c:            sess->session.qos.arp.pre_emption_vulnerability =
./src/sgwc/s11-handler.c:    sess->pgw_s5c_teid = be32toh(pgw_s5c_teid->teid);
./src/sgwc/s11-handler.c:                    sess->pfcp_node, pfcp_sess_timeout, sess);
./src/sgwc/s11-handler.c:            current_xact->local_seid = sess->sgwc_sxa_seid;
./src/sgwc/s11-handler.c:            ogs_assert(sess->pfcp_node);
./src/sgwc/s11-handler.c:            if (sess->pfcp_node->up_function_features.empu) {
./src/sgwc/s11-handler.c:    ogs_assert(sess->gnode);
./src/sgwc/s11-handler.c:        sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/s11-handler.c:        message->h.teid = sess->pgw_s5c_teid;
./src/sgwc/s11-handler.c:                sess->gnode, &message->h, gtpbuf, gtp_sess_timeout, sess);
./src/sgwc/s11-handler.c:        s5c_xact->local_teid = sess->sgw_s5c_teid;
./src/sgwc/s11-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s11-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s11-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s11-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s11-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s11-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s11-handler.c:        ogs_gtp_send_error_message(s5c_xact, sess ? sess->pgw_s5c_teid : 0,
./src/sgwc/s11-handler.c:        sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/s11-handler.c:    message->h.teid = sess->pgw_s5c_teid;
./src/sgwc/s11-handler.c:            sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/s11-handler.c:    ogs_assert(sess->gnode);
./src/sgwc/s11-handler.c:        sess->sgw_s5c_teid, sess->pgw_s5c_teid);
./src/sgwc/s11-handler.c:    message->h.teid = sess->pgw_s5c_teid;
./src/sgwc/s11-handler.c:            sess->gnode, &message->h, pkbuf, gtp_bearer_timeout, bearer);
./src/sgwc/s11-handler.c:    s5c_xact->local_teid = sess->sgw_s5c_teid;
./src/udm/nnrf-handler.c:        udm_ue = sess->udm_ue;
./src/udm/nnrf-handler.c:                    sess ? sess->psi : 0,
./src/udm/context.c:    sess->sbi.type = OGS_SBI_OBJ_SESS_TYPE;
./src/udm/context.c:    sess->udm_ue = udm_ue;
./src/udm/context.c:    sess->psi = psi;
./src/udm/context.c:    ogs_fsm_init(&sess->sm, udm_sess_state_initial, udm_sess_state_final, &e);
./src/udm/context.c:    ogs_assert(sess->udm_ue);
./src/udm/context.c:    ogs_list_remove(&sess->udm_ue->sess_list, sess);
./src/udm/context.c:    ogs_fsm_fini(&sess->sm, &e);
./src/udm/context.c:    if (ogs_list_count(&sess->sbi.xact_list))
./src/udm/context.c:                ogs_list_count(&sess->sbi.xact_list));
./src/udm/context.c:    ogs_sbi_object_free(&sess->sbi);
./src/udm/context.c:    OpenAPI_smf_registration_free(sess->smf_registration);
./src/udm/context.c:    if (sess->smf_instance_id)
./src/udm/context.c:        ogs_free(sess->smf_instance_id);
./src/udm/context.c:        if (psi == sess->psi) return sess;
./src/udm/sess-sm.c:    udm_ue = sess->udm_ue;
./src/udm/sess-sm.c:                            udm_ue->suci, sess->psi, message->h.method);
./src/udm/sess-sm.c:                        udm_ue->suci, sess->psi,
./src/udm/sess-sm.c:                        udm_ue->supi, sess->psi, message->h.service.name);
./src/udm/sess-sm.c:                udm_ue->supi, sess->psi, udm_event_get_name(e));
./src/udm/sess-sm.c:    udm_ue = sess->udm_ue;
./src/udm/sess-sm.c:                udm_ue->supi, sess->psi, udm_event_get_name(e));
./src/udm/sbi-path.c:            xact->supi_id = ogs_id_get_value(sess->udm_ue->supi);
./src/udm/sbi-path.c:                &sess->sbi, service_type, discovery_option,
./src/udm/udm-sm.c:                                udm_ue->supi, sess->psi);
./src/udm/udm-sm.c:                ogs_assert(OGS_FSM_STATE(&sess->sm));
./src/udm/udm-sm.c:                ogs_fsm_dispatch(&sess->sm, e);
./src/udm/udm-sm.c:                if (OGS_FSM_CHECK(&sess->sm, udm_sess_state_exception)) {
./src/udm/udm-sm.c:                            udm_ue->suci, sess->psi);
./src/udm/udm-sm.c:                    udm_ue = udm_ue_cycle(sess->udm_ue);
./src/udm/udm-sm.c:                    ogs_fsm_dispatch(&sess->sm, e);
./src/udm/udm-sm.c:                    if (OGS_FSM_CHECK(&sess->sm, udm_sess_state_exception)) {
./src/udm/udm-sm.c:                                udm_ue->suci, sess->psi);
./src/udm/nudr-handler.c:    udm_ue = sess->udm_ue;
./src/udm/nudr-handler.c:            udm_ue->supi, sess->psi, recvmsg->res_status);
./src/udm/nudr-handler.c:            SmfRegistration = sess->smf_registration;
./src/udm/nudr-handler.c:                ogs_error("[%s:%d] No SmfRegistration", udm_ue->supi, sess->psi);
./src/udm/nudr-handler.c:                ogs_error("[%s:%d] No smfInstanceId", udm_ue->supi, sess->psi);
./src/udm/nudr-handler.c:                ogs_error("[%s:%d] No pduSessionId", udm_ue->supi, sess->psi);
./src/udm/nudr-handler.c:                ogs_error("[%s:%d] No singleNssai", udm_ue->supi, sess->psi);
./src/udm/nudr-handler.c:                ogs_error("[%s:%d] No dnn", udm_ue->supi, sess->psi);
./src/udm/nudr-handler.c:                ogs_error("[%s:%d] No plmnId", udm_ue->supi, sess->psi);
./src/udm/nudr-handler.c:            header.resource.component[3] = ogs_msprintf("%d", sess->psi);
./src/udm/nudr-handler.c:            if (sess->smf_instance_id &&
./src/udm/nudr-handler.c:                strcmp(sess->smf_instance_id,
./src/udm/nudr-handler.c:                if (sess->smf_instance_id)
./src/udm/nudr-handler.c:                    ogs_free(sess->smf_instance_id);
./src/udm/nudr-handler.c:                sess->smf_instance_id =
./src/udm/nudr-handler.c:                ogs_assert(sess->smf_instance_id);
./src/udm/nudr-handler.c:                    sendmsg.SmfRegistration, sess->smf_registration);
./src/udm/nudr-handler.c:                    udm_ue->suci, sess->psi, recvmsg->h.method);
./src/udm/nudr-handler.c:                udm_ue->supi, sess->psi, recvmsg->h.resource.component[3]);
./src/udm/nudm-handler.c:    udm_ue = sess->udm_ue;
./src/udm/nudm-handler.c:        ogs_error("[%s:%d] No SmfRegistration", udm_ue->supi, sess->psi);
./src/udm/nudm-handler.c:        ogs_error("[%s:%d] No smfInstanceId", udm_ue->supi, sess->psi);
./src/udm/nudm-handler.c:        ogs_error("[%s:%d] No pduSessionId", udm_ue->supi, sess->psi);
./src/udm/nudm-handler.c:        ogs_error("[%s:%d] No singleNssai", udm_ue->supi, sess->psi);
./src/udm/nudm-handler.c:        ogs_error("[%s:%d] No dnn", udm_ue->supi, sess->psi);
./src/udm/nudm-handler.c:        ogs_error("[%s:%d] No plmnId", udm_ue->supi, sess->psi);
./src/udm/nudm-handler.c:    sess->smf_registration =
./src/udm/nudm-handler.c:        OpenAPI_smf_registration_copy(sess->smf_registration, SmfRegistration);
./src/udm/nudm-handler.c:    udm_ue = sess->udm_ue;
./src/udm/nudr-build.c:    udm_ue = sess->udm_ue;
./src/udm/nudr-build.c:    message.h.resource.component[4] = ogs_msprintf("%d", sess->psi);
./src/udm/nudr-build.c:            message.SmfRegistration, sess->smf_registration);
./src/udm/nudr-build.c:    udm_ue = sess->udm_ue;
./src/udm/nudr-build.c:    message.h.resource.component[4] = ogs_msprintf("%d", sess->psi);
./src/smf/ngap-handler.c:    smf_ue = sess->smf_ue;
./src/smf/ngap-handler.c:                smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:            smf_ue->supi, sess->psi,
./src/smf/ngap-handler.c:        ogs_error("[%s:%d] No GTPTunnel", smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:        ogs_error("[%s:%d] No transportLayerAddress", smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:    if (memcmp(&sess->gnb_n3_ip, &gnb_n3_ip, sizeof(sess->gnb_n3_ip)) != 0 ||
./src/smf/ngap-handler.c:        sess->gnb_n3_teid != gnb_n3_teid)
./src/smf/ngap-handler.c:    memcpy(&sess->gnb_n3_ip, &gnb_n3_ip, sizeof(sess->gnb_n3_ip));
./src/smf/ngap-handler.c:    sess->gnb_n3_teid = gnb_n3_teid;
./src/smf/ngap-handler.c:                            &sess->gnb_n3_ip,
./src/smf/ngap-handler.c:                dl_far->outer_header_creation.teid = sess->gnb_n3_teid;
./src/smf/ngap-handler.c:                ogs_error("[%s:%d] No QoS flow", smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:        if (sess->up_cnx_state == OpenAPI_up_cnx_state_ACTIVATING) {
./src/smf/ngap-handler.c:            sess->up_cnx_state = OpenAPI_up_cnx_state_ACTIVATED;
./src/smf/ngap-handler.c:    smf_ue = sess->smf_ue;
./src/smf/ngap-handler.c:                smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:    smf_ue = sess->smf_ue;
./src/smf/ngap-handler.c:                smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:    ogs_list_init(&sess->qos_flow_to_modify_list);
./src/smf/ngap-handler.c:                            &sess->gnb_n3_ip,
./src/smf/ngap-handler.c:                    dl_far->outer_header_creation.teid = sess->gnb_n3_teid;
./src/smf/ngap-handler.c:                    ogs_list_add(&sess->qos_flow_to_modify_list,
./src/smf/ngap-handler.c:    if (ogs_list_count(&sess->qos_flow_to_modify_list) == 0) {
./src/smf/ngap-handler.c:        ogs_error("[%s:%d] No QoS flow", smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:    smf_ue = sess->smf_ue;
./src/smf/ngap-handler.c:                smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:            smf_ue->supi, sess->psi, dL_NGU_UP_TNLInformation->present);
./src/smf/ngap-handler.c:        ogs_error("[%s:%d] No GTPTunnel", smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:        ogs_error("[%s:%d] No transportLayerAddress", smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:    if (memcmp(&sess->gnb_n3_ip, &gnb_n3_ip, sizeof(sess->gnb_n3_ip)) != 0 ||
./src/smf/ngap-handler.c:        sess->gnb_n3_teid != gnb_n3_teid)
./src/smf/ngap-handler.c:    memcpy(&sess->gnb_n3_ip, &gnb_n3_ip, sizeof(sess->gnb_n3_ip));
./src/smf/ngap-handler.c:    sess->gnb_n3_teid = gnb_n3_teid;
./src/smf/ngap-handler.c:                        &sess->gnb_n3_ip,
./src/smf/ngap-handler.c:                dl_far->outer_header_creation.teid = sess->gnb_n3_teid;
./src/smf/ngap-handler.c:                ogs_error("[%s:%d] No QoS flow", smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:    smf_ue = sess->smf_ue;
./src/smf/ngap-handler.c:                smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:        sess->handover.data_forwarding_not_possible = true;
./src/smf/ngap-handler.c:    smf_ue = sess->smf_ue;
./src/smf/ngap-handler.c:                smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:            smf_ue->supi, sess->psi, dL_NGU_UP_TNLInformation->present);
./src/smf/ngap-handler.c:        ogs_error("[%s:%d] No GTPTunnel", smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:            &sess->handover.gnb_n3_ip);
./src/smf/ngap-handler.c:        ogs_error("[%s:%d] No transportLayerAddress", smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:            &sess->handover.gnb_n3_teid);
./src/smf/ngap-handler.c:                ogs_error("[%s:%d] No QoS flow", smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:                smf_ue->supi, sess->psi, dL_NGU_UP_TNLInformation->present);
./src/smf/ngap-handler.c:            ogs_error("[%s:%d] No GTPTunnel", smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:                &sess->handover.gnb_dl_ip);
./src/smf/ngap-handler.c:                    smf_ue->supi, sess->psi);
./src/smf/ngap-handler.c:                &sess->handover.gnb_dl_teid);
./src/smf/ngap-handler.c:        sess->handover.indirect_data_forwarding = true;
./src/smf/ngap-handler.c:    sess->handover.prepared = true;
./src/smf/ngap-handler.c:    if (sess->handover.indirect_data_forwarding == true) {
./src/smf/pfcp-path.c:    smf_ue = sess->smf_ue;
./src/smf/pfcp-path.c:        e->pfcp_node = sess->pfcp_node;
./src/smf/pfcp-path.c:                smf_ue->supi, sess->psi);
./src/smf/pfcp-path.c:                smf_ue->supi, sess->psi, trigger);
./src/smf/pfcp-path.c:        e->pfcp_node = sess->pfcp_node;
./src/smf/pfcp-path.c:    xact->local_seid = sess->smf_n4_seid;
./src/smf/pfcp-path.c:    h.seid = sess->upf_n4_seid;
./src/smf/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_5gc_timeout, sess);
./src/smf/pfcp-path.c:    xact->local_seid = sess->smf_n4_seid;
./src/smf/pfcp-path.c:    h.seid = sess->upf_n4_seid;
./src/smf/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_5gc_timeout, sess);
./src/smf/pfcp-path.c:    xact->local_seid = sess->smf_n4_seid;
./src/smf/pfcp-path.c:    ogs_list_init(&sess->pdr_to_modify_list);
./src/smf/pfcp-path.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr)
./src/smf/pfcp-path.c:        ogs_list_add(&sess->pdr_to_modify_list, &pdr->to_modify_node);
./src/smf/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_5gc_timeout, sess);
./src/smf/pfcp-path.c:    xact->local_seid = sess->smf_n4_seid;
./src/smf/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_5gc_timeout, sess);
./src/smf/pfcp-path.c:    xact->local_seid = sess->smf_n4_seid;
./src/smf/pfcp-path.c:    h.seid = sess->upf_n4_seid;
./src/smf/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_epc_timeout, sess);
./src/smf/pfcp-path.c:    xact->local_seid = sess->smf_n4_seid;
./src/smf/pfcp-path.c:    h.seid = sess->upf_n4_seid;
./src/smf/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_epc_timeout, sess);
./src/smf/pfcp-path.c:    xact->local_seid = sess->smf_n4_seid;
./src/smf/pfcp-path.c:    ogs_list_init(&sess->pdr_to_modify_list);
./src/smf/pfcp-path.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr)
./src/smf/pfcp-path.c:        ogs_list_add(&sess->pdr_to_modify_list, &pdr->to_modify_node);
./src/smf/pfcp-path.c:            sess->pfcp_node, bearer_epc_timeout, bearer);
./src/smf/pfcp-path.c:    xact->local_seid = sess->smf_n4_seid;
./src/smf/pfcp-path.c:    ogs_list_init(&sess->qos_flow_to_modify_list);
./src/smf/pfcp-path.c:    ogs_list_add(&sess->qos_flow_to_modify_list, &bearer->to_modify_node);
./src/smf/pfcp-path.c:    xact = ogs_pfcp_xact_local_create(sess->pfcp_node, sess_epc_timeout, sess);
./src/smf/pfcp-path.c:    xact->local_seid = sess->smf_n4_seid;
./src/smf/pfcp-path.c:    h.seid = sess->upf_n4_seid;
./src/smf/pfcp-path.c:    smf_ue = sess->smf_ue;
./src/smf/pfcp-path.c:                smf_ue, sess->session.name, OGS_GTP2_RAT_TYPE_WLAN);
./src/smf/pfcp-path.c:        if (ogs_list_first(&wlan_sess->bearer_list) == NULL) {
./src/smf/pfcp-path.c:                smf_ue, sess->session.name, OGS_GTP2_RAT_TYPE_EUTRAN);
./src/smf/pfcp-path.c:            if (ogs_list_first(&eutran_sess->bearer_list) == NULL) {
./src/smf/pfcp-path.c:    h.seid = sess->upf_n4_seid;
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:        if (ogs_strcasecmp(node->dnn[i], sess->session.name) == 0) return true;
./src/smf/context.c:        if (sess->gtp_rat_type == OGS_GTP2_RAT_TYPE_EUTRAN &&
./src/smf/context.c:                node->e_cell_id[i] == sess->e_cgi.cell_id) return true;
./src/smf/context.c:        if (node->nr_cell_id[i] == sess->nr_cgi.cell_id) return true;
./src/smf/context.c:        if ((sess->gtp_rat_type == OGS_GTP2_RAT_TYPE_EUTRAN &&
./src/smf/context.c:                node->tac[i] == sess->e_tai.tac) ||
./src/smf/context.c:            (node->tac[i] == sess->nr_tai.tac.v)) return true;
./src/smf/context.c:    ogs_pfcp_pool_init(&sess->pfcp);
./src/smf/context.c:    sess->index = ogs_pool_index(&smf_sess_pool, sess);
./src/smf/context.c:    ogs_assert(sess->index > 0 && sess->index <= ogs_app()->pool.sess);
./src/smf/context.c:    ogs_pool_alloc(&smf_n4_seid_pool, &sess->smf_n4_seid_node);
./src/smf/context.c:    ogs_assert(sess->smf_n4_seid_node);
./src/smf/context.c:    sess->smf_n4_teid = *(sess->smf_n4_seid_node);
./src/smf/context.c:    sess->smf_n4_seid = *(sess->smf_n4_seid_node);
./src/smf/context.c:    ogs_hash_set(self.smf_n4_seid_hash, &sess->smf_n4_seid,
./src/smf/context.c:            sizeof(sess->smf_n4_seid), sess);
./src/smf/context.c:    sess->charging.id = sess->index;
./src/smf/context.c:    ogs_pfcp_bar_new(&sess->pfcp);
./src/smf/context.c:    sess->session.name = ogs_strdup(apn);
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    sess->gtp_rat_type = rat_type;
./src/smf/context.c:    ogs_assert(sess->gtp_rat_type);
./src/smf/context.c:    sess->epc = true;
./src/smf/context.c:    ogs_fsm_init(&sess->sm, smf_gsm_state_initial, smf_gsm_state_final, &e);
./src/smf/context.c:    sess->smf_ue = smf_ue;
./src/smf/context.c:                smf_ue->imsi_bcd, sess->session.name);
./src/smf/context.c:    sess->gtp.version = 1;
./src/smf/context.c:                smf_ue->imsi_bcd, sess->session.name);
./src/smf/context.c:    sess->gtp.version = 2;
./src/smf/context.c:    OGS_SBI_FEATURES_SET(sess->smpolicycontrol_features,
./src/smf/context.c:    ogs_pfcp_pool_init(&sess->pfcp);
./src/smf/context.c:    sess->index = ogs_pool_index(&smf_sess_pool, sess);
./src/smf/context.c:    ogs_assert(sess->index > 0 && sess->index <= ogs_app()->pool.sess);
./src/smf/context.c:    ogs_pool_alloc(&smf_n4_seid_pool, &sess->smf_n4_seid_node);
./src/smf/context.c:    ogs_assert(sess->smf_n4_seid_node);
./src/smf/context.c:    sess->smf_n4_teid = *(sess->smf_n4_seid_node);
./src/smf/context.c:    sess->smf_n4_seid = *(sess->smf_n4_seid_node);
./src/smf/context.c:    ogs_hash_set(self.smf_n4_seid_hash, &sess->smf_n4_seid,
./src/smf/context.c:            sizeof(sess->smf_n4_seid), sess);
./src/smf/context.c:    sess->sm_context_ref = ogs_msprintf("%d", sess->index);
./src/smf/context.c:    ogs_assert(sess->sm_context_ref);
./src/smf/context.c:    ogs_pfcp_bar_new(&sess->pfcp);
./src/smf/context.c:    sess->psi = psi;
./src/smf/context.c:    sess->s_nssai.sst = 0;
./src/smf/context.c:    sess->s_nssai.sd.v = OGS_S_NSSAI_NO_SD_VALUE;
./src/smf/context.c:    sess->mapped_hplmn.sst = 0;
./src/smf/context.c:    sess->mapped_hplmn.sd.v = OGS_S_NSSAI_NO_SD_VALUE;
./src/smf/context.c:    sess->charging.id = sess->index;
./src/smf/context.c:    ogs_fsm_init(&sess->sm, smf_gsm_state_initial, smf_gsm_state_final, &e);
./src/smf/context.c:    sess->smf_ue = smf_ue;
./src/smf/context.c:        smf_metrics_inst_by_slice_add(&sess->serving_plmn_id, &sess->s_nssai,
./src/smf/context.c:    smf_ue = sess->smf_ue;
./src/smf/context.c:    if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4V6) {
./src/smf/context.c:        ogs_assert(sess->session.name);
./src/smf/context.c:        subnet = ogs_pfcp_find_subnet_by_dnn(AF_INET, sess->session.name);
./src/smf/context.c:        subnet6 = ogs_pfcp_find_subnet_by_dnn(AF_INET6, sess->session.name);
./src/smf/context.c:            sess->session.session_type = OGS_PDU_SESSION_TYPE_IPV4;
./src/smf/context.c:                    "only IPv4 assigned", sess->session.name);
./src/smf/context.c:            sess->session.session_type = OGS_PDU_SESSION_TYPE_IPV6;
./src/smf/context.c:                    "only IPv6 assigned", sess->session.name);
./src/smf/context.c:    sess->session.paa.session_type = sess->session.session_type;
./src/smf/context.c:    ogs_assert(sess->session.session_type);
./src/smf/context.c:    if (sess->ipv4) {
./src/smf/context.c:                sess->ipv4->addr, OGS_IPV4_LEN, NULL);
./src/smf/context.c:        ogs_pfcp_ue_ip_free(sess->ipv4);
./src/smf/context.c:    if (sess->ipv6) {
./src/smf/context.c:                sess->ipv6->addr, OGS_IPV6_DEFAULT_PREFIX_LEN >> 3, NULL);
./src/smf/context.c:        ogs_pfcp_ue_ip_free(sess->ipv6);
./src/smf/context.c:    if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4) {
./src/smf/context.c:        sess->ipv4 = ogs_pfcp_ue_ip_alloc(&cause_value, AF_INET,
./src/smf/context.c:                sess->session.name, (uint8_t *)&sess->session.ue_ip.addr);
./src/smf/context.c:        if (!sess->ipv4) {
./src/smf/context.c:        sess->session.paa.addr = sess->ipv4->addr[0];
./src/smf/context.c:                sess->ipv4->addr, OGS_IPV4_LEN, sess);
./src/smf/context.c:    } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV6) {
./src/smf/context.c:        sess->ipv6 = ogs_pfcp_ue_ip_alloc(&cause_value, AF_INET6,
./src/smf/context.c:                sess->session.name, sess->session.ue_ip.addr6);
./src/smf/context.c:        if (!sess->ipv6) {
./src/smf/context.c:        subnet6 = sess->ipv6->subnet;
./src/smf/context.c:        sess->session.paa.len = OGS_IPV6_DEFAULT_PREFIX_LEN >> 3;
./src/smf/context.c:        memcpy(sess->session.paa.addr6, sess->ipv6->addr, OGS_IPV6_LEN);
./src/smf/context.c:                sess->ipv6->addr, OGS_IPV6_DEFAULT_PREFIX_LEN >> 3, sess);
./src/smf/context.c:    } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4V6) {
./src/smf/context.c:        sess->ipv4 = ogs_pfcp_ue_ip_alloc(&cause_value, AF_INET,
./src/smf/context.c:                sess->session.name, (uint8_t *)&sess->session.ue_ip.addr);
./src/smf/context.c:        if (!sess->ipv4) {
./src/smf/context.c:        sess->ipv6 = ogs_pfcp_ue_ip_alloc(&cause_value, AF_INET6,
./src/smf/context.c:                sess->session.name, sess->session.ue_ip.addr6);
./src/smf/context.c:        if (!sess->ipv6) {
./src/smf/context.c:            if (sess->ipv4) {
./src/smf/context.c:                        sess->ipv4->addr, OGS_IPV4_LEN, NULL);
./src/smf/context.c:                ogs_pfcp_ue_ip_free(sess->ipv4);
./src/smf/context.c:                sess->ipv4 = NULL;
./src/smf/context.c:        subnet6 = sess->ipv6->subnet;
./src/smf/context.c:        sess->session.paa.both.addr = sess->ipv4->addr[0];
./src/smf/context.c:        sess->session.paa.both.len = OGS_IPV6_DEFAULT_PREFIX_LEN >> 3;
./src/smf/context.c:        memcpy(sess->session.paa.both.addr6, sess->ipv6->addr, OGS_IPV6_LEN);
./src/smf/context.c:                sess->ipv4->addr, OGS_IPV4_LEN, sess);
./src/smf/context.c:                sess->ipv6->addr, OGS_IPV6_DEFAULT_PREFIX_LEN >> 3, sess);
./src/smf/context.c:        ogs_fatal("Invalid sess->session.session_type[%d]",
./src/smf/context.c:                sess->session.session_type);
./src/smf/context.c:    if (sess->paging.n1n2message_location) {
./src/smf/context.c:                sess->paging.n1n2message_location,
./src/smf/context.c:                strlen(sess->paging.n1n2message_location),
./src/smf/context.c:        ogs_free(sess->paging.n1n2message_location);
./src/smf/context.c:    sess->paging.n1n2message_location = ogs_strdup(n1n2message_location);
./src/smf/context.c:    ogs_assert(sess->paging.n1n2message_location);
./src/smf/context.c:            sess->paging.n1n2message_location,
./src/smf/context.c:            strlen(sess->paging.n1n2message_location),
./src/smf/context.c:    smf_ue = sess->smf_ue;
./src/smf/context.c:            sess->session.name, sess->psi,
./src/smf/context.c:            sess->ipv4 ? OGS_INET_NTOP(&sess->ipv4->addr, buf1) : "",
./src/smf/context.c:            sess->ipv6 ? OGS_INET6_NTOP(&sess->ipv6->addr, buf2) : "");
./src/smf/context.c:    ogs_fsm_fini(&sess->sm, &e);
./src/smf/context.c:    OGS_TLV_CLEAR_DATA(&sess->gtp.ue_pco);
./src/smf/context.c:    OGS_TLV_CLEAR_DATA(&sess->gtp.ue_apco);
./src/smf/context.c:    OGS_TLV_CLEAR_DATA(&sess->gtp.ue_epco);
./src/smf/context.c:    OGS_TLV_CLEAR_DATA(&sess->gtp.user_location_information);
./src/smf/context.c:    OGS_TLV_CLEAR_DATA(&sess->gtp.ue_timezone);
./src/smf/context.c:    OGS_TLV_CLEAR_DATA(&sess->gtp.charging_characteristics);
./src/smf/context.c:    OGS_TLV_CLEAR_DATA(&sess->gtp.v1.qos);
./src/smf/context.c:    OGS_NAS_CLEAR_DATA(&sess->nas.ue_epco);
./src/smf/context.c:    for (i = 0; i < sess->policy.num_of_pcc_rule; i++)
./src/smf/context.c:        OGS_PCC_RULE_FREE(&sess->policy.pcc_rule[i]);
./src/smf/context.c:    sess->policy.num_of_pcc_rule = 0;
./src/smf/context.c:    ogs_hash_set(self.smf_n4_seid_hash, &sess->smf_n4_seid,
./src/smf/context.c:            sizeof(sess->smf_n4_seid), NULL);
./src/smf/context.c:    if (sess->ipv4) {
./src/smf/context.c:        ogs_hash_set(self.ipv4_hash, sess->ipv4->addr, OGS_IPV4_LEN, NULL);
./src/smf/context.c:        ogs_pfcp_ue_ip_free(sess->ipv4);
./src/smf/context.c:    if (sess->ipv6) {
./src/smf/context.c:                sess->ipv6->addr, OGS_IPV6_DEFAULT_PREFIX_LEN >> 3, NULL);
./src/smf/context.c:        ogs_pfcp_ue_ip_free(sess->ipv6);
./src/smf/context.c:    if (sess->paging.n1n2message_location) {
./src/smf/context.c:                sess->paging.n1n2message_location,
./src/smf/context.c:                strlen(sess->paging.n1n2message_location),
./src/smf/context.c:        ogs_free(sess->paging.n1n2message_location);
./src/smf/context.c:    if (sess->sm_context_ref)
./src/smf/context.c:        ogs_free(sess->sm_context_ref);
./src/smf/context.c:    if (sess->sm_context_status_uri)
./src/smf/context.c:        ogs_free(sess->sm_context_status_uri);
./src/smf/context.c:    if (sess->namf.client)
./src/smf/context.c:        ogs_sbi_client_remove(sess->namf.client);
./src/smf/context.c:    if (sess->policy_association.client)
./src/smf/context.c:        ogs_sbi_client_remove(sess->policy_association.client);
./src/smf/context.c:    if (sess->session.name)
./src/smf/context.c:        ogs_free(sess->session.name);
./src/smf/context.c:    if (sess->full_dnn)
./src/smf/context.c:        ogs_free(sess->full_dnn);
./src/smf/context.c:    if (sess->session.ipv4_framed_routes) {
./src/smf/context.c:            if (!sess->session.ipv4_framed_routes[i])
./src/smf/context.c:            ogs_free(sess->session.ipv4_framed_routes[i]);
./src/smf/context.c:        ogs_free(sess->session.ipv4_framed_routes);
./src/smf/context.c:    if (sess->session.ipv6_framed_routes) {
./src/smf/context.c:            if (!sess->session.ipv6_framed_routes[i])
./src/smf/context.c:            ogs_free(sess->session.ipv6_framed_routes[i]);
./src/smf/context.c:        ogs_free(sess->session.ipv6_framed_routes);
./src/smf/context.c:    if (sess->upf_n3_addr)
./src/smf/context.c:        ogs_freeaddrinfo(sess->upf_n3_addr);
./src/smf/context.c:    if (sess->upf_n3_addr6)
./src/smf/context.c:        ogs_freeaddrinfo(sess->upf_n3_addr6);
./src/smf/context.c:    if (sess->handover.upf_dl_addr)
./src/smf/context.c:        ogs_freeaddrinfo(sess->handover.upf_dl_addr);
./src/smf/context.c:    if (sess->handover.upf_dl_addr6)
./src/smf/context.c:        ogs_freeaddrinfo(sess->handover.upf_dl_addr6);
./src/smf/context.c:    if (sess->pcf_id)
./src/smf/context.c:        ogs_free(sess->pcf_id);
./src/smf/context.c:    if (sess->serving_nf_id)
./src/smf/context.c:        ogs_free(sess->serving_nf_id);
./src/smf/context.c:    ogs_sbi_object_free(&sess->sbi);
./src/smf/context.c:    ogs_assert(sess->pfcp.bar);
./src/smf/context.c:    ogs_pfcp_bar_delete(sess->pfcp.bar);
./src/smf/context.c:    ogs_pfcp_pool_final(&sess->pfcp);
./src/smf/context.c:    switch (sess->gtp.version) {
./src/smf/context.c:    ogs_pool_free(&smf_n4_seid_pool, sess->smf_n4_seid_node);
./src/smf/context.c:        if (ogs_strcasecmp(sess->session.name, apn) == 0 &&
./src/smf/context.c:            sess->gtp_rat_type == rat_type)
./src/smf/context.c:        if (sess->psi == psi)
./src/smf/context.c:    for (i = 0; i < sess->policy.num_of_pcc_rule; i++) {
./src/smf/context.c:        ogs_pcc_rule_t *pcc_rule = &sess->policy.pcc_rule[i];
./src/smf/context.c:    dl_pdr = ogs_pfcp_pdr_add(&sess->pfcp);
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    dl_pdr->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:    ul_pdr = ogs_pfcp_pdr_add(&sess->pfcp);
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    ul_pdr->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:    if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4) {
./src/smf/context.c:    } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV6) {
./src/smf/context.c:    } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4V6) {
./src/smf/context.c:    dl_far = ogs_pfcp_far_add(&sess->pfcp);
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    dl_far->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:    ogs_assert(sess->pfcp.bar);
./src/smf/context.c:    ul_far = ogs_pfcp_far_add(&sess->pfcp);
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    ul_far->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:    urr = ogs_pfcp_urr_add(&sess->pfcp);
./src/smf/context.c:    qer = ogs_pfcp_qer_add(&sess->pfcp);
./src/smf/context.c:    ogs_pool_alloc(&sess->qfi_pool, &qos_flow->qfi_node);
./src/smf/context.c:    ogs_list_add(&sess->bearer_list, qos_flow);
./src/smf/context.c:    smf_metrics_inst_by_5qi_add(&sess->serving_plmn_id, &sess->s_nssai,
./src/smf/context.c:            sess->session.qos.index, SMF_METR_GAUGE_SM_QOSFLOWNBR, 1);
./src/smf/context.c:    ogs_list_for_each(&sess->bearer_list, qos_flow) {
./src/smf/context.c:        pdr = ogs_pfcp_pdr_add(&sess->pfcp);
./src/smf/context.c:        ogs_assert(sess->session.name);
./src/smf/context.c:        pdr->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:        if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4) {
./src/smf/context.c:        } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV6) {
./src/smf/context.c:        } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4V6) {
./src/smf/context.c:        far = ogs_pfcp_far_add(&sess->pfcp);
./src/smf/context.c:        ogs_assert(sess->session.name);
./src/smf/context.c:        far->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:        ogs_assert(sess->pfcp_node);
./src/smf/context.c:        if (sess->pfcp_node->up_function_features.ftup) {
./src/smf/context.c:             * If sess->handover.upf_dl_teid is set in the PDR of
./src/smf/context.c:            if (ogs_list_first(&sess->bearer_list) == qos_flow) {
./src/smf/context.c:                if (sess->handover.upf_dl_addr)
./src/smf/context.c:                    ogs_freeaddrinfo(sess->handover.upf_dl_addr);
./src/smf/context.c:                if (sess->handover.upf_dl_addr6)
./src/smf/context.c:                    ogs_freeaddrinfo(sess->handover.upf_dl_addr6);
./src/smf/context.c:                        &sess->pfcp_node->gtpu_resource_list,
./src/smf/context.c:                        sess->session.name, pdr->src_if);
./src/smf/context.c:                        &sess->handover.upf_dl_addr,
./src/smf/context.c:                        &sess->handover.upf_dl_addr6);
./src/smf/context.c:                        sess->handover.upf_dl_teid =
./src/smf/context.c:                        sess->handover.upf_dl_teid = pdr->teid;
./src/smf/context.c:                    if (sess->pfcp_node->addr.ogs_sa_family == AF_INET)
./src/smf/context.c:                            &sess->handover.upf_dl_addr,
./src/smf/context.c:                            &sess->pfcp_node->addr));
./src/smf/context.c:                    else if (sess->pfcp_node->addr.ogs_sa_family == AF_INET6)
./src/smf/context.c:                            &sess->handover.upf_dl_addr6,
./src/smf/context.c:                            &sess->pfcp_node->addr));
./src/smf/context.c:                    sess->handover.upf_dl_teid = pdr->teid;
./src/smf/context.c:                    sess->handover.upf_dl_addr, sess->handover.upf_dl_addr6,
./src/smf/context.c:            pdr->f_teid.teid = sess->handover.upf_dl_teid;
./src/smf/context.c:                    &sess->handover.gnb_dl_ip,
./src/smf/context.c:        far->outer_header_creation.teid = sess->handover.gnb_dl_teid;
./src/smf/context.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/smf/context.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/smf/context.c:    cp2up_pdr = ogs_pfcp_pdr_add(&sess->pfcp);
./src/smf/context.c:    sess->cp2up_pdr = cp2up_pdr;
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    cp2up_pdr->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:    if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4) {
./src/smf/context.c:    } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV6) {
./src/smf/context.c:    } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4V6) {
./src/smf/context.c:    up2cp_pdr = ogs_pfcp_pdr_add(&sess->pfcp);
./src/smf/context.c:    sess->up2cp_pdr = up2cp_pdr;
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    up2cp_pdr->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:    if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4) {
./src/smf/context.c:    } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV6) {
./src/smf/context.c:    } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4V6) {
./src/smf/context.c:    sess->cp2up_far = cp2up_far;
./src/smf/context.c:    up2cp_far = ogs_pfcp_far_add(&sess->pfcp);
./src/smf/context.c:    sess->up2cp_far = up2cp_far;
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    up2cp_far->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:    if (sess->cp2up_pdr)
./src/smf/context.c:        ogs_pfcp_pdr_remove(sess->cp2up_pdr);
./src/smf/context.c:    if (sess->up2cp_pdr)
./src/smf/context.c:        ogs_pfcp_pdr_remove(sess->up2cp_pdr);
./src/smf/context.c:    if (sess->up2cp_far)
./src/smf/context.c:        ogs_pfcp_far_remove(sess->up2cp_far);
./src/smf/context.c:    ogs_list_for_each(&sess->bearer_list, qos_flow) {
./src/smf/context.c:    ogs_list_for_each(&sess->bearer_list, qos_flow) {
./src/smf/context.c:    dl_pdr = ogs_pfcp_pdr_add(&sess->pfcp);
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    dl_pdr->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:    ul_pdr = ogs_pfcp_pdr_add(&sess->pfcp);
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    ul_pdr->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:    if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4) {
./src/smf/context.c:    } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV6) {
./src/smf/context.c:    } else if (sess->session.session_type == OGS_PDU_SESSION_TYPE_IPV4V6) {
./src/smf/context.c:    dl_far = ogs_pfcp_far_add(&sess->pfcp);
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    dl_far->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:    ogs_assert(sess->pfcp.bar);
./src/smf/context.c:    ul_far = ogs_pfcp_far_add(&sess->pfcp);
./src/smf/context.c:    ogs_assert(sess->session.name);
./src/smf/context.c:    ul_far->apn = ogs_strdup(sess->session.name);
./src/smf/context.c:    ogs_list_add(&sess->bearer_list, bearer);
./src/smf/context.c:    ogs_list_remove(&bearer->sess->bearer_list, bearer);
./src/smf/context.c:        ogs_pool_free(&bearer->sess->qfi_pool, bearer->qfi_node);
./src/smf/context.c:    ogs_list_for_each_safe(&sess->bearer_list, next_bearer, bearer)
./src/smf/context.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/smf/context.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/smf/context.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/smf/context.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/smf/context.c:        qer = ogs_pfcp_qer_add(&sess->pfcp);
./src/smf/context.c:    return ogs_list_first(&sess->bearer_list);
./src/smf/context.c:    ogs_pool_alloc(&sess->pf_precedence_pool, &pf->precedence_node);
./src/smf/context.c:                &pf->bearer->sess->pf_precedence_pool, pf->precedence_node);
./src/smf/context.c:    ogs_pool_create(&sess->qfi_pool, OGS_MAX_QOS_FLOW_ID);
./src/smf/context.c:    ogs_pool_sequence_id_generate(&sess->qfi_pool);
./src/smf/context.c:    ogs_pool_destroy(&sess->qfi_pool);
./src/smf/context.c:    ogs_pool_create(&sess->pf_precedence_pool,
./src/smf/context.c:    ogs_pool_sequence_id_generate(&sess->pf_precedence_pool);
./src/smf/context.c:    ogs_pool_destroy(&sess->pf_precedence_pool);
./src/smf/gn-handler.c:    smf_ue = sess->smf_ue;
./src/smf/gn-handler.c:    sess->gtp.v1.nsapi = req->nsapi.u8;
./src/smf/gn-handler.c:    sess->gtp.selection_mode = req->selection_mode.u8 & 0x03;
./src/smf/gn-handler.c:    if (sess->gtp.selection_mode > 2)
./src/smf/gn-handler.c:        sess->gtp.selection_mode = 2;
./src/smf/gn-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.charging_characteristics, &req->charging_characteristics);
./src/smf/gn-handler.c:    sess->sgw_s5c_teid = req->tunnel_endpoint_identifier_control_plane.u32;
./src/smf/gn-handler.c:                                  &sess->sgw_s5c_ip);
./src/smf/gn-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/gn-handler.c:    OGS_TLV_STORE_DATA(&sess->gtp.user_location_information,
./src/smf/gn-handler.c:        ogs_nas_to_plmn_id(&sess->serving_plmn_id, &uli.cgi.nas_plmn_id);
./src/smf/gn-handler.c:        ogs_nas_to_plmn_id(&sess->serving_plmn_id, &uli.sai.nas_plmn_id);
./src/smf/gn-handler.c:        ogs_nas_to_plmn_id(&sess->serving_plmn_id, &uli.rai.nas_plmn_id);
./src/smf/gn-handler.c:        sess->gtp.v1.common_flags = *(ogs_gtp1_common_flags_t*)req->common_flags.data;
./src/smf/gn-handler.c:    sess->session.ambr.downlink = 100000000;
./src/smf/gn-handler.c:    sess->session.ambr.uplink = 100000000;
./src/smf/gn-handler.c:    OGS_TLV_STORE_DATA(&sess->gtp.v1.qos, &req->quality_of_service_profile);
./src/smf/gn-handler.c:    qos_pdec = &sess->gtp.v1.qos_pdec;
./src/smf/gn-handler.c:    sess->session.qos.index = qci;
./src/smf/gn-handler.c:    sess->session.qos.arp.priority_level = qos_pdec->qos_profile.arp; /* 3GPP TS 23.401 Annex E Table E.2 */
./src/smf/gn-handler.c:    sess->session.qos.arp.pre_emption_capability = 0; /* ignored as per 3GPP TS 23.401 Annex E */
./src/smf/gn-handler.c:    sess->session.qos.arp.pre_emption_vulnerability = 0; /* ignored as per 3GPP TS 23.401 Annex E */
./src/smf/gn-handler.c:        sess->session.ambr.downlink = qos_pdec->dec_mbr_kbps_dl * 1000;
./src/smf/gn-handler.c:        sess->session.ambr.uplink = qos_pdec->dec_mbr_kbps_ul * 1000;
./src/smf/gn-handler.c:        sess->gtp.v1.peer_supports_apn_ambr = true;
./src/smf/gn-handler.c:            sess->session.ambr.uplink = be32toh(ambr->uplink) * 1000;
./src/smf/gn-handler.c:            sess->session.ambr.downlink = be32toh(ambr->downlink) * 1000;
./src/smf/gn-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.ue_pco,
./src/smf/gn-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.ue_timezone, &req->ms_time_zone);
./src/smf/gn-handler.c:    rv = ogs_gtp1_eua_to_ip(eua, req->end_user_address.len, &sess->session.ue_ip,
./src/smf/gn-handler.c:            &sess->ue_session_type);
./src/smf/gn-handler.c:    sess->session.session_type = sess->ue_session_type;
./src/smf/gn-handler.c:        bearer->qos.gbr.downlink = sess->session.ambr.downlink;
./src/smf/gn-handler.c:        bearer->qos.gbr.uplink = sess->session.ambr.uplink;
./src/smf/gn-handler.c:    ogs_assert(sess->pfcp_node);
./src/smf/gn-handler.c:    if (!OGS_FSM_CHECK(&sess->pfcp_node->sm, smf_pfcp_state_associated))
./src/smf/gn-handler.c:        sess->session.name,
./src/smf/gn-handler.c:        sess->ipv4 ? OGS_INET_NTOP(&sess->ipv4->addr, buf1) : "",
./src/smf/gn-handler.c:        sess->ipv6 ? OGS_INET6_NTOP(&sess->ipv6->addr, buf2) : "");
./src/smf/gn-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.ue_pco,
./src/smf/gn-handler.c:        OGS_TLV_CLEAR_DATA(&sess->gtp.ue_pco);
./src/smf/gn-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/gn-handler.c:        ogs_gtp1_send_error_message(xact, sess ? sess->sgw_s5c_teid : 0,
./src/smf/gn-handler.c:    smf_ue = sess->smf_ue;
./src/smf/gn-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/gn-handler.c:            ogs_gtp1_send_error_message(xact, sess->sgw_s5c_teid,
./src/smf/gn-handler.c:        sess->gtp.v1.common_flags = *(ogs_gtp1_common_flags_t*)req->common_flags.data;
./src/smf/gn-handler.c:        sess->gtp.v1.common_flags = (ogs_gtp1_common_flags_t){0};
./src/smf/gn-handler.c:        sess->sgw_s5c_teid = req->tunnel_endpoint_identifier_control_plane.u32;
./src/smf/gn-handler.c:                                      &sess->sgw_s5c_ip);
./src/smf/gn-handler.c:                sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/gn-handler.c:    OGS_TLV_STORE_DATA(&sess->gtp.v1.qos, &req->quality_of_service_profile);
./src/smf/gn-handler.c:    qos_pdec = &sess->gtp.v1.qos_pdec;
./src/smf/gn-handler.c:        ogs_gtp1_send_error_message(xact, sess->sgw_s5c_teid,
./src/smf/gn-handler.c:    sess->session.qos.index = qci;
./src/smf/gn-handler.c:    sess->session.qos.arp.priority_level = qos_pdec->qos_profile.arp; /* 3GPP TS 23.401 Annex E Table E.2 */
./src/smf/gn-handler.c:    sess->session.qos.arp.pre_emption_capability = 0; /* ignored as per 3GPP TS 23.401 Annex E */
./src/smf/gn-handler.c:    sess->session.qos.arp.pre_emption_vulnerability = 0; /* ignored as per 3GPP TS 23.401 Annex E */
./src/smf/gn-handler.c:        sess->session.ambr.downlink = qos_pdec->dec_mbr_kbps_dl * 1000;
./src/smf/gn-handler.c:        sess->session.ambr.uplink = qos_pdec->dec_mbr_kbps_ul * 1000;
./src/smf/gn-handler.c:        sess->gtp.v1.peer_supports_apn_ambr = true;
./src/smf/gn-handler.c:            sess->session.ambr.uplink = be32toh(ambr->uplink) * 1000;
./src/smf/gn-handler.c:            sess->session.ambr.downlink = be32toh(ambr->downlink) * 1000;
./src/smf/gn-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.ue_pco,
./src/smf/gn-handler.c:        OGS_TLV_CLEAR_DATA(&sess->gtp.ue_pco);
./src/smf/gn-handler.c:    h.teid = sess->sgw_s5c_teid;
./src/smf/gn-handler.c:     ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/smf/s5c-build.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-build.c:    if (sess->ue_session_type != sess->session.session_type)
./src/smf/s5c-build.c:    switch (sess->gtp_rat_type) {
./src/smf/s5c-build.c:        ogs_error("Unknown RAT Type [%d]", sess->gtp_rat_type);
./src/smf/s5c-build.c:    smf_s5c_teid.teid = htobe32(sess->smf_n4_teid);
./src/smf/s5c-build.c:    rsp->pdn_address_allocation.data = &sess->session.paa;
./src/smf/s5c-build.c:    if (sess->ipv4 && sess->ipv6)
./src/smf/s5c-build.c:    else if (sess->ipv4)
./src/smf/s5c-build.c:    else if (sess->ipv6)
./src/smf/s5c-build.c:    switch (sess->gtp_rat_type) {
./src/smf/s5c-build.c:        ogs_error("Unknown RAT Type [%d]", sess->gtp_rat_type);
./src/smf/s5c-build.c:    if (sess->gtp.create_session_response_apn_ambr == true) {
./src/smf/s5c-build.c:        ambr.uplink = htobe32(sess->session.ambr.uplink / 1000);
./src/smf/s5c-build.c:        ambr.downlink = htobe32(sess->session.ambr.downlink / 1000);
./src/smf/s5c-build.c:    if (sess->gtp.ue_pco.presence &&
./src/smf/s5c-build.c:            sess->gtp.ue_pco.len && sess->gtp.ue_pco.data) {
./src/smf/s5c-build.c:                pco_buf, sess->gtp.ue_pco.data, sess->gtp.ue_pco.len);
./src/smf/s5c-build.c:    if (sess->gtp.ue_apco.presence &&
./src/smf/s5c-build.c:            sess->gtp.ue_apco.len && sess->gtp.ue_apco.data) {
./src/smf/s5c-build.c:                apco_buf, sess->gtp.ue_apco.data, sess->gtp.ue_apco.len);
./src/smf/s5c-build.c:    if (sess->gtp.ue_epco.presence &&
./src/smf/s5c-build.c:            sess->gtp.ue_epco.len && sess->gtp.ue_epco.data) {
./src/smf/s5c-build.c:                epco_buf, sess->gtp.ue_epco.data, sess->gtp.ue_epco.len);
./src/smf/s5c-build.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./src/smf/s5c-build.c:        if (sess->gtp.create_session_response_bearer_qos == true) {
./src/smf/s5c-build.c:            bearer_qos.qci = sess->session.qos.index;
./src/smf/s5c-build.c:            bearer_qos.priority_level = sess->session.qos.arp.priority_level;
./src/smf/s5c-build.c:                sess->session.qos.arp.pre_emption_capability;
./src/smf/s5c-build.c:                sess->session.qos.arp.pre_emption_vulnerability;
./src/smf/s5c-build.c:        rsp->bearer_contexts_created[i].charging_id.u32 = sess->charging.id;
./src/smf/s5c-build.c:        switch (sess->gtp_rat_type) {
./src/smf/s5c-build.c:            ogs_error("Unknown RAT Type [%d]", sess->gtp_rat_type);
./src/smf/s5c-build.c:    if (sess->gtp.ue_pco.presence &&
./src/smf/s5c-build.c:            sess->gtp.ue_pco.len && sess->gtp.ue_pco.data) {
./src/smf/s5c-build.c:                pco_buf, sess->gtp.ue_pco.data, sess->gtp.ue_pco.len);
./src/smf/s5c-build.c:    if (sess->gtp.ue_epco.presence &&
./src/smf/s5c-build.c:            sess->gtp.ue_epco.len && sess->gtp.ue_epco.data) {
./src/smf/s5c-build.c:                epco_buf, sess->gtp.ue_epco.data, sess->gtp.ue_epco.len);
./src/smf/s5c-build.c:    smf_ue = sess->smf_ue;
./src/smf/s5c-build.c:                sess->charging.id;
./src/smf/s5c-build.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-build.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-build.c:    if (sess->session.ambr.uplink || sess->session.ambr.downlink) {
./src/smf/s5c-build.c:        ambr.uplink = htobe32(sess->session.ambr.uplink / 1000);
./src/smf/s5c-build.c:        ambr.downlink = htobe32(sess->session.ambr.downlink / 1000);
./src/smf/s5c-build.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/gy-path.c:        switch (sess->gy.reporting_reason) {
./src/smf/gy-path.c:            val.u32 = sess->gy.reporting_reason;
./src/smf/gy-path.c:    val.u32 = sess->gy.duration - sess->gy.last_report.duration;
./src/smf/gy-path.c:    sess->gy.last_report.duration = sess->gy.duration;
./src/smf/gy-path.c:    val.u64 = sess->gy.ul_octets - sess->gy.last_report.ul_octets;
./src/smf/gy-path.c:    sess->gy.last_report.ul_octets = sess->gy.ul_octets;
./src/smf/gy-path.c:    val.u64 = sess->gy.dl_octets - sess->gy.last_report.dl_octets;
./src/smf/gy-path.c:    sess->gy.last_report.dl_octets = sess->gy.dl_octets;
./src/smf/gy-path.c:    val.u32 = sess->session.qos.index;
./src/smf/gy-path.c:    val.u32 = sess->session.qos.arp.priority_level;
./src/smf/gy-path.c:    val.u32 = sess->session.qos.arp.pre_emption_capability;
./src/smf/gy-path.c:    val.u32 = sess->session.qos.arp.pre_emption_vulnerability;
./src/smf/gy-path.c:    if (sess->session.ambr.uplink) {
./src/smf/gy-path.c:        val.u32 = sess->session.ambr.uplink;
./src/smf/gy-path.c:    if (sess->session.ambr.downlink) {
./src/smf/gy-path.c:        val.u32 = sess->session.ambr.downlink;
./src/smf/gy-path.c:        switch (sess->gy.reporting_reason) {
./src/smf/gy-path.c:            val.u32 = sess->gy.reporting_reason;
./src/smf/gy-path.c:    val.u32 = sess->charging.id;
./src/smf/gy-path.c:        switch (sess->session.session_type) {
./src/smf/gy-path.c:    if (sess->ipv4) {
./src/smf/gy-path.c:        memcpy(&sin.sin_addr.s_addr, (uint8_t*)&sess->ipv4->addr[0], OGS_IPV4_LEN);
./src/smf/gy-path.c:    if (sess->ipv6) {
./src/smf/gy-path.c:        memcpy(&sin6.sin6_addr.s6_addr, (uint8_t*)&sess->ipv6->addr[0], OGS_IPV6_LEN);
./src/smf/gy-path.c:            .u32 = sess->ipv6->subnet->prefixlen;
./src/smf/gy-path.c:    if (sess->sgw_s5c_ip.ipv4) {
./src/smf/gy-path.c:        memcpy(&sin.sin_addr.s_addr, (uint8_t*)&sess->sgw_s5c_ip.addr, OGS_IPV4_LEN);
./src/smf/gy-path.c:    if (sess->sgw_s5c_ip.ipv6) {
./src/smf/gy-path.c:        memcpy(&sin6.sin6_addr.s6_addr, (uint8_t*)&sess->sgw_s5c_ip.addr6[0], OGS_IPV6_LEN);
./src/smf/gy-path.c:    ogs_assert(sess->session.name);
./src/smf/gy-path.c:    val.os.data = (uint8_t*)sess->session.name;
./src/smf/gy-path.c:    val.os.len = strlen(sess->session.name);
./src/smf/gy-path.c:    digit = sess->gtp.selection_mode + '0';
./src/smf/gy-path.c:    if (sess->gtp.charging_characteristics.presence &&
./src/smf/gy-path.c:        sess->gtp.charging_characteristics.len > 0) {
./src/smf/gy-path.c:        oct1 = ((uint8_t*)sess->gtp.charging_characteristics.data)[0];
./src/smf/gy-path.c:        oct2 = (sess->gtp.charging_characteristics.len > 1) ?
./src/smf/gy-path.c:                        ((uint8_t*)sess->gtp.charging_characteristics.data)[1] : 0;
./src/smf/gy-path.c:    val.os.data = (uint8_t *)ogs_plmn_id_to_string(&sess->serving_plmn_id, buf);
./src/smf/gy-path.c:    if (sess->gtp.version == 1) {
./src/smf/gy-path.c:        if (sess->gtp.v1.nsapi <= 9)
./src/smf/gy-path.c:            nsapi_hex = sess->gtp.v1.nsapi + '0';
./src/smf/gy-path.c:            nsapi_hex = sess->gtp.v1.nsapi - 10 + 'A';
./src/smf/gy-path.c:    if (sess->gtp.ue_timezone.presence &&
./src/smf/gy-path.c:            sess->gtp.ue_timezone.len && sess->gtp.ue_timezone.data) {
./src/smf/gy-path.c:        val.os.data = sess->gtp.ue_timezone.data;
./src/smf/gy-path.c:        val.os.len = sess->gtp.ue_timezone.len;
./src/smf/gy-path.c:    val.os.data = (uint8_t*)&sess->gtp_rat_type;
./src/smf/gy-path.c:    if (sess->smf_ue->imeisv_len > 0) {
./src/smf/gy-path.c:        val.os.data = (uint8_t*)&sess->smf_ue->imeisv_bcd[0];
./src/smf/gy-path.c:    ogs_assert(sess->ipv4 || sess->ipv6);
./src/smf/gy-path.c:    smf_ue = sess->smf_ue;
./src/smf/gy-path.c:    if (sess->gy_sid) {
./src/smf/gy-path.c:        size_t sidlen = strlen(sess->gy_sid);
./src/smf/gy-path.c:        ret = fd_sess_fromsid_msg((os0_t)sess->gy_sid, sidlen, &session, &new);
./src/smf/gy-path.c:        ogs_debug("    Found Gy Session-Id: [%s]", sess->gy_sid);
./src/smf/gy-path.c:        ret = ogs_diam_message_session_id_set(req, (os0_t)sess->gy_sid, sidlen);
./src/smf/gy-path.c:        sess->gy_sid = (char *)sess_data->gy_sid;
./src/smf/binding.c:    smf_ue = sess->smf_ue;
./src/smf/binding.c:    for (i = 0; i < sess->policy.num_of_pcc_rule; i++) {
./src/smf/binding.c:        ogs_pcc_rule_t *pcc_rule = &sess->policy.pcc_rule[i];
./src/smf/binding.c:                if (ogs_list_count(&sess->bearer_list) >=
./src/smf/binding.c:                            ogs_list_count(&sess->bearer_list));
./src/smf/binding.c:                ogs_assert(sess->pfcp_node);
./src/smf/binding.c:                if (sess->pfcp_node->up_function_features.ftup) {
./src/smf/binding.c:                            &sess->pfcp_node->gtpu_resource_list,
./src/smf/binding.c:                            sess->session.name, ul_pdr->src_if);
./src/smf/binding.c:                        if (sess->pfcp_node->addr.ogs_sa_family == AF_INET)
./src/smf/binding.c:                                    &sess->pfcp_node->addr));
./src/smf/binding.c:                        else if (sess->pfcp_node->addr.ogs_sa_family ==
./src/smf/binding.c:                                    &sess->pfcp_node->addr));
./src/smf/binding.c:                h.teid = sess->sgw_s5c_teid;
./src/smf/binding.c:                        sess->gnode, &h, pkbuf, gtp_bearer_timeout, bearer);
./src/smf/binding.c:                xact->local_teid = sess->smf_n4_teid;
./src/smf/binding.c:    h.teid = sess->sgw_s5c_teid;
./src/smf/binding.c:            sess->gnode, &h, pkbuf, gtp_bearer_timeout, bearer);
./src/smf/binding.c:    xact->local_teid = sess->smf_n4_teid;
./src/smf/binding.c:    ogs_list_init(&sess->qos_flow_to_modify_list);
./src/smf/binding.c:    for (i = 0; i < sess->policy.num_of_pcc_rule; i++) {
./src/smf/binding.c:        ogs_pcc_rule_t *pcc_rule = &sess->policy.pcc_rule[i];
./src/smf/binding.c:                if (ogs_list_count(&sess->bearer_list) >=
./src/smf/binding.c:                            ogs_list_count(&sess->bearer_list));
./src/smf/binding.c:                ogs_assert(sess->pfcp_node);
./src/smf/binding.c:                if (sess->pfcp_node->up_function_features.ftup) {
./src/smf/binding.c:                            sess->upf_n3_addr, sess->upf_n3_addr6,
./src/smf/binding.c:                    ul_pdr->f_teid.teid = sess->upf_n3_teid;
./src/smf/binding.c:                ogs_list_add(&sess->qos_flow_to_modify_list,
./src/smf/binding.c:                ogs_list_add(&sess->qos_flow_to_modify_list,
./src/smf/binding.c:            ogs_list_add(&sess->qos_flow_to_modify_list,
./src/smf/binding.c:    if (ogs_list_count(&sess->qos_flow_to_modify_list)) {
./src/smf/gx-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/gx-handler.c:    sess->policy.num_of_pcc_rule = gx_message->session_data.num_of_pcc_rule;
./src/smf/gx-handler.c:        OGS_STORE_PCC_RULE(&sess->policy.pcc_rule[i],
./src/smf/gx-handler.c:    sess->gtp.create_session_response_apn_ambr = false;
./src/smf/gx-handler.c:            (sess->session.ambr.uplink / 1000) !=
./src/smf/gx-handler.c:            (sess->session.ambr.downlink / 1000) !=
./src/smf/gx-handler.c:        sess->session.ambr.downlink =
./src/smf/gx-handler.c:        sess->session.ambr.uplink =
./src/smf/gx-handler.c:        sess->gtp.create_session_response_apn_ambr = true;
./src/smf/gx-handler.c:    sess->gtp.create_session_response_bearer_qos = false;
./src/smf/gx-handler.c:        sess->session.qos.index !=
./src/smf/gx-handler.c:        sess->session.qos.arp.priority_level !=
./src/smf/gx-handler.c:        sess->session.qos.arp.pre_emption_capability !=
./src/smf/gx-handler.c:        sess->session.qos.arp.pre_emption_vulnerability !=
./src/smf/gx-handler.c:        sess->session.qos.index = gx_message->session_data.session.qos.index;
./src/smf/gx-handler.c:        sess->session.qos.arp.priority_level =
./src/smf/gx-handler.c:        sess->session.qos.arp.pre_emption_capability =
./src/smf/gx-handler.c:        sess->session.qos.arp.pre_emption_vulnerability =
./src/smf/gx-handler.c:        sess->gtp.create_session_response_bearer_qos = true;
./src/smf/gx-handler.c:    if (sess->session.ambr.downlink || sess->session.ambr.uplink) {
./src/smf/gx-handler.c:            qer = ogs_pfcp_qer_add(&sess->pfcp);
./src/smf/gx-handler.c:        qer->mbr.uplink = sess->session.ambr.uplink;
./src/smf/gx-handler.c:        qer->mbr.downlink = sess->session.ambr.downlink;
./src/smf/gx-handler.c:    up2cp_far = sess->up2cp_far;
./src/smf/gx-handler.c:    cp2up_pdr = sess->cp2up_pdr;
./src/smf/gx-handler.c:    up2cp_pdr = sess->up2cp_pdr;
./src/smf/gx-handler.c:        ogs_pfcp_paa_to_ue_ip_addr(&sess->session.paa,
./src/smf/gx-handler.c:        ogs_pfcp_paa_to_ue_ip_addr(&sess->session.paa,
./src/smf/gx-handler.c:    up2cp_far->outer_header_creation.teid = sess->index;
./src/smf/gx-handler.c:    ogs_assert(sess->pfcp_node);
./src/smf/gx-handler.c:    if (sess->pfcp_node->up_function_features.ftup) {
./src/smf/gx-handler.c:                &sess->pfcp_node->gtpu_resource_list,
./src/smf/gx-handler.c:                sess->session.name, ul_pdr->src_if);
./src/smf/gx-handler.c:            if (sess->pfcp_node->addr.ogs_sa_family == AF_INET)
./src/smf/gx-handler.c:                        &bearer->pgw_s5u_addr, &sess->pfcp_node->addr));
./src/smf/gx-handler.c:            else if (sess->pfcp_node->addr.ogs_sa_family == AF_INET6)
./src/smf/gx-handler.c:                        &bearer->pgw_s5u_addr6, &sess->pfcp_node->addr));
./src/smf/gx-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/gx-handler.c:    sess->policy.num_of_pcc_rule = gx_message->session_data.num_of_pcc_rule;
./src/smf/gx-handler.c:        OGS_STORE_PCC_RULE(&sess->policy.pcc_rule[i],
./src/smf/smf-sm.c:                sess->sgw_s5c_teid = gtp2_sender_f_teid.teid;
./src/smf/smf-sm.c:                    sess->sgw_s5c_teid,
./src/smf/smf-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:                if (sess->sgw_s5c_teid != gtp2_sender_f_teid.teid) {
./src/smf/smf-sm.c:                        sess->sgw_s5c_teid, gtp2_sender_f_teid.teid);
./src/smf/smf-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:                ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:                ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:             ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:                    smf_ue = sess->smf_ue;
./src/smf/smf-sm.c:                    ogs_assert(OGS_FSM_STATE(&sess->sm));
./src/smf/smf-sm.c:                    ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:            smf_ue = smf_ue_cycle(sess->smf_ue);
./src/smf/smf-sm.c:            ogs_assert(OGS_FSM_STATE(&sess->sm));
./src/smf/smf-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:            smf_ue = smf_ue_cycle(sess->smf_ue);
./src/smf/smf-sm.c:                    smf_ue->supi, sess->psi, sbi_message.res_status, state);
./src/smf/smf-sm.c:        ogs_fsm_dispatch(&sess->sm, e);
./src/smf/smf-sm.c:        ogs_fsm_dispatch(&sess->sm, e);
./src/smf/npcf-build.c:    ogs_assert(sess->sm_context_ref);
./src/smf/npcf-build.c:    ogs_assert(sess->session.name);
./src/smf/npcf-build.c:    smf_ue = sess->smf_ue;
./src/smf/npcf-build.c:    SmPolicyContextData.pdu_session_id = sess->psi;
./src/smf/npcf-build.c:    SmPolicyContextData.pdu_session_type = sess->session.session_type;
./src/smf/npcf-build.c:            ogs_home_network_domain_from_plmn_id(&sess->home_plmn_id);
./src/smf/npcf-build.c:            ogs_msprintf("%s.%s", sess->session.name, home_network_domain);
./src/smf/npcf-build.c:        SmPolicyContextData.dnn = ogs_strdup(sess->session.name);
./src/smf/npcf-build.c:    header.resource.component[1] = sess->sm_context_ref;
./src/smf/npcf-build.c:        ogs_sbi_build_plmn_id_nid(&sess->serving_plmn_id);
./src/smf/npcf-build.c:    if (sess->ipv4) {
./src/smf/npcf-build.c:                ogs_ipv4_to_string(sess->ipv4->addr[0]);
./src/smf/npcf-build.c:    if (sess->ipv6) {
./src/smf/npcf-build.c:                (uint8_t *)sess->ipv6->addr, OGS_IPV6_128_PREFIX_LEN);
./src/smf/npcf-build.c:    if (sess->session.ipv4_framed_routes) {
./src/smf/npcf-build.c:            const char *route = sess->session.ipv4_framed_routes[i];
./src/smf/npcf-build.c:    if (sess->session.ipv6_framed_routes) {
./src/smf/npcf-build.c:            const char *route = sess->session.ipv6_framed_routes[i];
./src/smf/npcf-build.c:    if (OGS_SBI_FEATURES_IS_SET(sess->smpolicycontrol_features,
./src/smf/npcf-build.c:        if (sess->session.ambr.uplink) {
./src/smf/npcf-build.c:                sess->session.ambr.uplink, OGS_SBI_BITRATE_KBPS);
./src/smf/npcf-build.c:        if (sess->session.ambr.downlink) {
./src/smf/npcf-build.c:                sess->session.ambr.downlink, OGS_SBI_BITRATE_KBPS);
./src/smf/npcf-build.c:    if (sess->session.qos.arp.pre_emption_capability ==
./src/smf/npcf-build.c:    else if (sess->session.qos.arp.pre_emption_capability ==
./src/smf/npcf-build.c:    if (sess->session.qos.arp.pre_emption_vulnerability ==
./src/smf/npcf-build.c:    else if (sess->session.qos.arp.pre_emption_vulnerability ==
./src/smf/npcf-build.c:    Arp.priority_level = sess->session.qos.arp.priority_level;
./src/smf/npcf-build.c:    SubsDefQos._5qi = sess->session.qos.index;
./src/smf/npcf-build.c:    SubsDefQos.priority_level = sess->session.qos.arp.priority_level;
./src/smf/npcf-build.c:    if (sess->smpolicycontrol_features) {
./src/smf/npcf-build.c:            ogs_uint64_to_string(sess->smpolicycontrol_features);
./src/smf/npcf-build.c:    sNssai.sst = sess->s_nssai.sst;
./src/smf/npcf-build.c:    sNssai.sd = ogs_s_nssai_sd_to_string(sess->s_nssai.sd);
./src/smf/npcf-build.c:    ogs_assert(sess->sm_context_ref);
./src/smf/npcf-build.c:    smf_ue = sess->smf_ue;
./src/smf/npcf-build.c:    ogs_assert(sess->policy_association.resource_uri);
./src/smf/npcf-build.c:            sess->policy_association.resource_uri,
./src/smf/npcf-build.c:                    &sess->nr_tai, &sess->nr_cgi);
./src/smf/npcf-build.c:                ogs_sbi_gmtime_string(sess->ue_location_timestamp);
./src/smf/npcf-build.c:        ogs_sbi_build_plmn_id_nid(&sess->serving_plmn_id);
./src/smf/gsm-build.c:    message.gsm.h.pdu_session_identity = sess->psi;
./src/smf/gsm-build.c:    message.gsm.h.procedure_transaction_identity = sess->pti;
./src/smf/gsm-build.c:    selected_pdu_session_type->type = sess->session.ssc_mode;
./src/smf/gsm-build.c:    selected_pdu_session_type->value = sess->session.session_type;
./src/smf/gsm-build.c:            &session_ambr->downlink, sess->session.ambr.downlink);
./src/smf/gsm-build.c:            &session_ambr->uplink, sess->session.ambr.uplink);
./src/smf/gsm-build.c:    pdu_address->pdn_type = sess->session.session_type;
./src/smf/gsm-build.c:        pdu_address->addr = sess->session.paa.addr;
./src/smf/gsm-build.c:                sess->session.paa.addr6+(OGS_IPV6_LEN>>1), OGS_IPV6_LEN>>1);
./src/smf/gsm-build.c:        pdu_address->both.addr = sess->session.paa.both.addr;
./src/smf/gsm-build.c:            sess->session.paa.both.addr6+(OGS_IPV6_LEN>>1), OGS_IPV6_LEN>>1);
./src/smf/gsm-build.c:    if (sess->ue_session_type == OGS_PDU_SESSION_TYPE_IPV4V6) {
./src/smf/gsm-build.c:    ogs_nas_build_s_nssai2(nas_s_nssai, &sess->s_nssai, &sess->mapped_hplmn);
./src/smf/gsm-build.c:    if (sess->nas.ue_epco.buffer && sess->nas.ue_epco.length) {
./src/smf/gsm-build.c:                sess->nas.ue_epco.buffer, sess->nas.ue_epco.length);
./src/smf/gsm-build.c:    ogs_assert(sess->session.name);
./src/smf/gsm-build.c:    dnn->length = strlen(sess->session.name);
./src/smf/gsm-build.c:    ogs_cpystrn(dnn->value, sess->session.name,
./src/smf/gsm-build.c:    message.gsm.h.pdu_session_identity = sess->psi;
./src/smf/gsm-build.c:    message.gsm.h.procedure_transaction_identity = sess->pti;
./src/smf/gsm-build.c:    message.gsm.h.pdu_session_identity = sess->psi;
./src/smf/gsm-build.c:    message.gsm.h.procedure_transaction_identity = sess->pti;
./src/smf/gsm-build.c:                &sess->qos_flow_to_modify_list, qos_flow, to_modify_node) {
./src/smf/gsm-build.c:                &sess->qos_flow_to_modify_list, qos_flow, to_modify_node) {
./src/smf/gsm-build.c:    message.gsm.h.pdu_session_identity = sess->psi;
./src/smf/gsm-build.c:    message.gsm.h.procedure_transaction_identity = sess->pti;
./src/smf/gsm-build.c:    message.gsm.h.pdu_session_identity = sess->psi;
./src/smf/gsm-build.c:    message.gsm.h.procedure_transaction_identity = sess->pti;
./src/smf/gsm-build.c:    message.gsm.h.pdu_session_identity = sess->psi;
./src/smf/gsm-build.c:    message.gsm.h.procedure_transaction_identity = sess->pti;
./src/smf/n4-handler.c:                &sess->pfcp, &rsp->created_pdr[i],
./src/smf/n4-handler.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/smf/n4-handler.c:            ogs_assert(sess->pfcp_node);
./src/smf/n4-handler.c:            if (sess->pfcp_node->up_function_features.ftup &&
./src/smf/n4-handler.c:                if (sess->upf_n3_addr)
./src/smf/n4-handler.c:                    ogs_freeaddrinfo(sess->upf_n3_addr);
./src/smf/n4-handler.c:                if (sess->upf_n3_addr6)
./src/smf/n4-handler.c:                    ogs_freeaddrinfo(sess->upf_n3_addr6);
./src/smf/n4-handler.c:                        &sess->upf_n3_addr, &sess->upf_n3_addr6));
./src/smf/n4-handler.c:                sess->upf_n3_teid = pdr->f_teid.teid;
./src/smf/n4-handler.c:    if (sess->upf_n3_addr == NULL && sess->upf_n3_addr6 == NULL) {
./src/smf/n4-handler.c:    sess->upf_n4_seid = be64toh(up_f_seid->seid);
./src/smf/n4-handler.c:                    &sess->pfcp, &rsp->created_pdr[i],
./src/smf/n4-handler.c:                ogs_assert(sess->pfcp_node);
./src/smf/n4-handler.c:                if (sess->pfcp_node->up_function_features.ftup &&
./src/smf/n4-handler.c:                        if (sess->upf_n3_addr)
./src/smf/n4-handler.c:                            ogs_freeaddrinfo(sess->upf_n3_addr);
./src/smf/n4-handler.c:                        if (sess->upf_n3_addr6)
./src/smf/n4-handler.c:                            ogs_freeaddrinfo(sess->upf_n3_addr6);
./src/smf/n4-handler.c:                                &sess->upf_n3_addr, &sess->upf_n3_addr6));
./src/smf/n4-handler.c:                        sess->upf_n3_teid = pdr->f_teid.teid;
./src/smf/n4-handler.c:                        if (sess->handover.upf_dl_addr)
./src/smf/n4-handler.c:                            ogs_freeaddrinfo(sess->handover.upf_dl_addr);
./src/smf/n4-handler.c:                        if (sess->handover.upf_dl_addr6)
./src/smf/n4-handler.c:                            ogs_freeaddrinfo(sess->handover.upf_dl_addr6);
./src/smf/n4-handler.c:                                &sess->handover.upf_dl_addr,
./src/smf/n4-handler.c:                                &sess->handover.upf_dl_addr6));
./src/smf/n4-handler.c:                        sess->handover.upf_dl_teid = pdr->f_teid.teid;
./src/smf/n4-handler.c:    if (sess->upf_n3_addr == NULL && sess->upf_n3_addr6 == NULL) {
./src/smf/n4-handler.c:            if (sess->up_cnx_state == OpenAPI_up_cnx_state_ACTIVATING) {
./src/smf/n4-handler.c:                sess->up_cnx_state = OpenAPI_up_cnx_state_ACTIVATED;
./src/smf/n4-handler.c:            sess->pti = OGS_NAS_PROCEDURE_TRANSACTION_IDENTITY_UNASSIGNED;
./src/smf/n4-handler.c:            ogs_list_for_each_entry_safe(&sess->qos_flow_to_modify_list,
./src/smf/n4-handler.c:                        &qos_flow->sess->serving_plmn_id,
./src/smf/n4-handler.c:                        &qos_flow->sess->s_nssai,
./src/smf/n4-handler.c:                        qos_flow->sess->session.qos.index,
./src/smf/n4-handler.c:            ogs_list_for_each_entry_safe(&sess->qos_flow_to_modify_list,
./src/smf/n4-handler.c:                        &qos_flow->sess->serving_plmn_id,
./src/smf/n4-handler.c:                        &qos_flow->sess->s_nssai,
./src/smf/n4-handler.c:                        qos_flow->sess->session.qos.index,
./src/smf/n4-handler.c:            sess->pti = OGS_NAS_PROCEDURE_TRANSACTION_IDENTITY_UNASSIGNED;
./src/smf/n4-handler.c:            sess->pti = OGS_NAS_PROCEDURE_TRANSACTION_IDENTITY_UNASSIGNED;
./src/smf/n4-handler.c:                    &sess->pfcp, &rsp->created_pdr[i],
./src/smf/n4-handler.c:        ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/smf/n4-handler.c:                    ogs_assert(sess->pfcp_node);
./src/smf/n4-handler.c:                    if (sess->pfcp_node->up_function_features.ftup &&
./src/smf/n4-handler.c:    sess->upf_n4_seid = be64toh(up_f_seid->seid);
./src/smf/n4-handler.c:                &sess->pfcp, &rsp->created_pdr[i],
./src/smf/n4-handler.c:                ogs_assert(sess->pfcp_node);
./src/smf/n4-handler.c:                if (sess->pfcp_node->up_function_features.ftup &&
./src/smf/n4-handler.c:            h.teid = sess->sgw_s5c_teid;
./src/smf/n4-handler.c:                    ogs_list_first(&sess->bearer_list);
./src/smf/n4-handler.c:            sess->gy.ul_octets += volume.uplink_volume;
./src/smf/n4-handler.c:            sess->gy.dl_octets += volume.downlink_volume;
./src/smf/n4-handler.c:        sess->gy.duration += use_rep->duration_measurement.u32;
./src/smf/n4-handler.c:        sess->gy.reporting_reason =
./src/smf/n4-handler.c:    smf_ue = sess->smf_ue;
./src/smf/n4-handler.c:                pdr = ogs_pfcp_pdr_find(&sess->pfcp,
./src/smf/n4-handler.c:        switch (sess->up_cnx_state) {
./src/smf/n4-handler.c:                smf_ue->imsi_bcd, sess->session.name);
./src/smf/n4-handler.c:                smf_ue->imsi_bcd, sess->session.name);
./src/smf/n4-handler.c:                smf_ue->imsi_bcd, sess->session.name);
./src/smf/n4-handler.c:            ogs_error("Invalid UpCnxState[%d]", sess->up_cnx_state);
./src/smf/n4-handler.c:                &sess->pfcp, &pfcp_req->error_indication_report);
./src/smf/n4-handler.c:                sess->gy.ul_octets += volume.uplink_volume;
./src/smf/n4-handler.c:                sess->gy.dl_octets += volume.downlink_volume;
./src/smf/n4-handler.c:            sess->gy.duration += use_rep->duration_measurement.u32;
./src/smf/n4-handler.c:            sess->gy.reporting_reason =
./src/smf/n4-handler.c:            if (!sess->gy.final_unit) {
./src/smf/n4-handler.c:                          smf_ue->imsi_bcd, sess->session.name);
./src/smf/n4-handler.c:        if (sess->epc == true) {
./src/smf/n4-handler.c:                smf_ue->imsi_bcd, sess->session.name);
./src/smf/n4-handler.c:                smf_ue->supi, sess->session.name);
./src/smf/fd-path.c:    if (sess->gtp.user_location_information.presence == 0)
./src/smf/fd-path.c:    if (sess->gtp.version == 1) {
./src/smf/fd-path.c:        val.os.data = sess->gtp.user_location_information.data;
./src/smf/fd-path.c:        val.os.len = sess->gtp.user_location_information.len;
./src/smf/fd-path.c:            &uli, &sess->gtp.user_location_information);
./src/smf/fd-path.c:    ogs_assert(sess->gtp.user_location_information.len == uli_len);
./src/smf/fd-path.c:    ogs_assert(sess->gtp.user_location_information.data);
./src/smf/fd-path.c:    ogs_assert(sess->gtp.user_location_information.len);
./src/smf/fd-path.c:    memcpy(&uli_buf, sess->gtp.user_location_information.data,
./src/smf/fd-path.c:            sess->gtp.user_location_information.len);
./src/smf/sbi-path.c:    smf_ue = sess->smf_ue;
./src/smf/sbi-path.c:                discovery_option, &sess->home_plmn_id);
./src/smf/sbi-path.c:            &sess->sbi, service_type, discovery_option,
./src/smf/sbi-path.c:    smf_ue = sess->smf_ue;
./src/smf/sbi-path.c:    ogs_info("test:ogs_sbi_discovery_option_set_target_nf_instance_id:%s.",sess->serving_nf_id);
./src/smf/sbi-path.c:            discovery_option, sess->serving_nf_id);
./src/smf/sbi-path.c:            &sess->sbi, OGS_SBI_SERVICE_TYPE_NAMF_COMM, discovery_option,
./src/smf/sbi-path.c:    client = sess->namf.client;
./src/smf/n4-build.c:    smf_ue = sess->smf_ue;
./src/smf/n4-build.c:    f_seid.seid = htobe64(sess->smf_n4_seid);
./src/smf/n4-build.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/smf/n4-build.c:    ogs_list_for_each(&sess->pfcp.far_list, far) {
./src/smf/n4-build.c:    ogs_list_for_each(&sess->pfcp.urr_list, urr) {
./src/smf/n4-build.c:    ogs_list_for_each(&sess->pfcp.qer_list, qer) {
./src/smf/n4-build.c:    if (sess->pfcp.bar) {
./src/smf/n4-build.c:        ogs_pfcp_build_create_bar(&req->create_bar, sess->pfcp.bar);
./src/smf/n4-build.c:    req->pdn_type.u8 = sess->session.session_type;
./src/smf/n4-build.c:    len = ogs_fqdn_build(apn_dnn, sess->session.name, strlen(sess->session.name));
./src/smf/n4-build.c:    if (!sess->epc) {
./src/smf/n4-build.c:        req->s_nssai.data = &sess->s_nssai;
./src/smf/n4-build.c:    ogs_list_for_each_entry(&sess->pdr_to_modify_list, pdr, to_modify_node) {
./src/smf/n4-build.c:    ogs_list_for_each(&sess->pfcp.urr_list, urr) {
./src/smf/n4-build.c:            &sess->qos_flow_to_modify_list, qos_flow, to_modify_node) {
./src/smf/telnetcmd.c:        //printf("  |--sbi                : %p \r\n", sess->sbi);
./src/smf/telnetcmd.c:        printf("  |--index              : %u \r\n", sess->index);
./src/smf/telnetcmd.c:        printf("  |--smf_n4_seid_node   : %d \r\n", *sess->smf_n4_seid_node);
./src/smf/telnetcmd.c:        //printf("  |--sm                : %p \r\n", sess->sm);
./src/smf/telnetcmd.c:        printf("     |--gx_ccr_init_in_flight   : %d \r\n", sess->sm_data.gx_ccr_init_in_flight);
./src/smf/telnetcmd.c:        printf("     |--gx_cca_init_err         : %u \r\n", sess->sm_data.gx_cca_init_err);
./src/smf/telnetcmd.c:        printf("     |--gy_ccr_init_in_flight   : %d \r\n", sess->sm_data.gy_ccr_init_in_flight);
./src/smf/telnetcmd.c:        printf("     |--gy_cca_init_err         : %u \r\n", sess->sm_data.gy_cca_init_err);
./src/smf/telnetcmd.c:        printf("     |--gx_ccr_term_in_flight   : %d \r\n", sess->sm_data.gx_ccr_term_in_flight);
./src/smf/telnetcmd.c:        printf("     |--gx_cca_term_err         : %u \r\n", sess->sm_data.gx_cca_term_err);
./src/smf/telnetcmd.c:        printf("     |--gy_ccr_term_in_flight   : %d \r\n", sess->sm_data.gy_ccr_term_in_flight);
./src/smf/telnetcmd.c:        printf("     |--gy_cca_term_err         : %u \r\n", sess->sm_data.gy_cca_term_err);
./src/smf/telnetcmd.c:        printf("     |--s6b_str_in_flight       : %d \r\n", sess->sm_data.s6b_str_in_flight);
./src/smf/telnetcmd.c:        printf("     |--s6b_sta_err             : %u \r\n", sess->sm_data.s6b_sta_err);
./src/smf/telnetcmd.c:        printf("  |--epc                : %d \r\n", sess->epc);
./src/smf/telnetcmd.c:        //printf("  |--pfcp               : %p \r\n", sess->pfcp);
./src/smf/telnetcmd.c:        printf("  |--smpolicycontrol_features   : %lu \r\n", sess->smpolicycontrol_features);
./src/smf/telnetcmd.c:        printf("  |--smf_n4_teid        : %u \r\n", sess->smf_n4_teid);
./src/smf/telnetcmd.c:        printf("  |--sgw_s5c_teid       : %u \r\n", sess->sgw_s5c_teid);
./src/smf/telnetcmd.c:        printf("  |--sgw_s5c_ip         : %s \r\n", ogs_ipv4_to_string(sess->sgw_s5c_ip.addr));
./src/smf/telnetcmd.c:        printf("  |--smf_n4_seid        : %lu \r\n", sess->smf_n4_seid);
./src/smf/telnetcmd.c:        printf("  |--upf_n4_seid        : %lu \r\n", sess->upf_n4_seid);
./src/smf/telnetcmd.c:        printf("  |--upf_n3_teid        : %u \r\n", sess->upf_n3_teid);
./src/smf/telnetcmd.c:        if (sess->upf_n3_addr != NULL){
./src/smf/telnetcmd.c:            sprintf(addrInfo,"%s:%d",OGS_ADDR(sess->upf_n3_addr, buf), OGS_PORT(sess->upf_n3_addr));
./src/smf/telnetcmd.c:        if (sess->upf_n3_addr6 != NULL){
./src/smf/telnetcmd.c:            sprintf(addrInfo,"%s:%d",OGS_ADDR(sess->upf_n3_addr6, buf), OGS_PORT(sess->upf_n3_addr6));
./src/smf/telnetcmd.c:        printf("  |--gnb_n3_teid        : %u \r\n", sess->gnb_n3_teid);
./src/smf/telnetcmd.c:        printf("  |--gnb_n3_ip          : %s \r\n", ogs_ipv4_to_string(sess->gnb_n3_ip.addr));
./src/smf/telnetcmd.c:        printf("  |--gx_sid             : %s \r\n", sess->gx_sid);
./src/smf/telnetcmd.c:        printf("  |--gy_sid             : %s \r\n", sess->gy_sid);
./src/smf/telnetcmd.c:        printf("  |--s6b_sid            : %s \r\n", sess->s6b_sid);
./src/smf/telnetcmd.c:        //printf("  |--qfi_pool           : %p \r\n", sess->qfi_pool);
./src/smf/telnetcmd.c:        printf("  |--sm_context_ref     : %s \r\n", sess->sm_context_ref);
./src/smf/telnetcmd.c:        printf("  |--psi                : %u \r\n", sess->psi);
./src/smf/telnetcmd.c:        printf("  |--pti                : %u \r\n", sess->pti);
./src/smf/telnetcmd.c:        printf("  |--sm_context_status_uri      : %s \r\n", sess->sm_context_status_uri);
./src/smf/telnetcmd.c:        //printf("  |--namf.client        : %p \r\n", sess->namf.client);
./src/smf/telnetcmd.c:        printf("  |--policy_association_id      : %s \r\n", sess->policy_association.id);
./src/smf/telnetcmd.c:        printf("  |--up_cnx_state       : %d \r\n", sess->up_cnx_state);
./src/smf/telnetcmd.c:        printf("  |--serving_plmn_id    : %s \r\n", ogs_plmn_id_to_string(&sess->serving_plmn_id,buf));
./src/smf/telnetcmd.c:        printf("  |--nr_tai             : MCC:%d,MNC:%-3dTAC:%d \r\n", ogs_plmn_id_mcc(&sess->nr_tai.plmn_id),
./src/smf/telnetcmd.c:                                                                   ogs_plmn_id_mnc(&sess->nr_tai.plmn_id),
./src/smf/telnetcmd.c:                                                                   sess->nr_tai.tac.v);
./src/smf/telnetcmd.c:        printf("  |--nr_cgi             : MCC:%d,MNC:%-3dCELL:%lu \r\n", ogs_plmn_id_mcc(&sess->nr_cgi.plmn_id),
./src/smf/telnetcmd.c:                                                                           ogs_plmn_id_mnc(&sess->nr_cgi.plmn_id),
./src/smf/telnetcmd.c:                                                                           sess->nr_cgi.cell_id);
./src/smf/telnetcmd.c:        time_t time = ogs_time_sec(sess->ue_location_timestamp);
./src/smf/telnetcmd.c:        printf("  |--ue_location_timestamp      : %lu \r\n", sess->ue_location_timestamp);
./src/smf/telnetcmd.c:        printf("  |--pcf_id             : %s \r\n", sess->pcf_id);
./src/smf/telnetcmd.c:        printf("  |--serving_nf_id      : %s \r\n", sess->serving_nf_id);
./src/smf/telnetcmd.c:        printf("  |--integrity_protection.mbr_dl      : %u \r\n", sess->integrity_protection.mbr_dl);
./src/smf/telnetcmd.c:        printf("  |--integrity_protection.mbr_ul      : %u \r\n", sess->integrity_protection.mbr_ul);
./src/smf/telnetcmd.c:        printf("  |--s_nssai            : SST:%d SD:0x%x \r\n", sess->s_nssai.sst,sess->s_nssai.sd.v);
./src/smf/telnetcmd.c:        printf("  |--mapped_hplmn       : SST:%d SD:0x%x \r\n", sess->mapped_hplmn.sst,sess->mapped_hplmn.sd.v);
./src/smf/telnetcmd.c:        //printf("  |--session.ue_ip      : %s \r\n", ogs_session_ue_ip_to_string(sess->session.ue_ip));
./src/smf/telnetcmd.c:        //printf("  |--session.ambr.mbr_dl       : %u \r\n", sess->session.ambr.mbr_dl);
./src/smf/telnetcmd.c:        //printf("  |--session.ambr.mbr_ul       : %u \r\n", sess->session.ambr.mbr_ul);
./src/smf/telnetcmd.c:        printf("  |--ue_session_type       : %u \r\n", sess->ue_session_type);
./src/smf/telnetcmd.c:        printf("  |--ue_ssc_mode      : %u \r\n", sess->ue_ssc_mode);
./src/smf/telnetcmd.c:        if (sess->ipv4 != NULL)
./src/smf/telnetcmd.c:            printf("  |--ipv4       : %s \r\n", OGS_INET_NTOP(&sess->ipv4->addr, buf1));
./src/smf/telnetcmd.c:        if (sess->ipv6 != NULL)
./src/smf/telnetcmd.c:            printf("  |--ipv6       : %s \r\n", OGS_INET6_NTOP(&sess->ipv6->addr, buf2));
./src/smf/telnetcmd.c:        printf("  |--gtp_rat_type      : %u \r\n", sess->gtp_rat_type);
./src/smf/telnetcmd.c:        printf("  |--sbi_rat_type      : %u \r\n", sess->sbi_rat_type);
./src/smf/telnetcmd.c:        printf("  |--gtp.version      : %u \r\n", sess->gtp.version);
./src/smf/telnetcmd.c:        printf("  |--gtp.create_session_response_apn_ambr      : %d \r\n", sess->gtp.create_session_response_apn_ambr);
./src/smf/telnetcmd.c:        printf("  |--gtp.create_session_response_bearer_qos      : %d \r\n", sess->gtp.create_session_response_bearer_qos);
./src/smf/telnetcmd.c:        //printf("  |--nas.ue_epco               : %p \r\n", sess->nas.ue_epco);
./src/smf/telnetcmd.c:        //printf("  |--policy.pcc_rule           : %p \r\n", sess->policy.pcc_rule);
./src/smf/telnetcmd.c:        printf("  |--policy.num_of_pcc_rule    : %d \r\n", sess->policy.num_of_pcc_rule);
./src/smf/telnetcmd.c:        printf("  |--paging.n1n2message_location : %s \r\n", sess->paging.n1n2message_location);
./src/smf/telnetcmd.c:        printf("  |--ngap_state.pdu_session_resource_release : %d \r\n", sess->ngap_state.pdu_session_resource_release);
./src/smf/telnetcmd.c:        printf("  |--charging.id               : %u \r\n", sess->charging.id);
./src/smf/telnetcmd.c:        print_pdr(sess->cp2up_pdr);
./src/smf/telnetcmd.c:        print_pdr(sess->up2cp_pdr);
./src/smf/telnetcmd.c:        print_far(sess->cp2up_far);
./src/smf/telnetcmd.c:        print_far(sess->up2cp_far);
./src/smf/telnetcmd.c:        //printf("  |--bearer_list               : %p \r\n", sess->bearer_list);
./src/smf/telnetcmd.c:        ogs_list_for_each(&sess->bearer_list, bearer){
./src/smf/telnetcmd.c:        //printf("  |--pdr_to_modify_list        : %p \r\n", sess->pdr_to_modify_list);
./src/smf/telnetcmd.c:        //printf("  |--qos_flow_to_modify_list   : %p \r\n", sess->qos_flow_to_modify_list);
./src/smf/telnetcmd.c:        //printf("  |--gnode                     : %p \r\n", sess->gnode);
./src/smf/telnetcmd.c:        //printf("  |--pfcp_node                 : %p \r\n", sess->pfcp_node);
./src/smf/telnetcmd.c:        printf("  |--n1_released               : %d \r\n", sess->n1_released);
./src/smf/telnetcmd.c:        printf("  |--n2_released               : %d \r\n", sess->n2_released);
./src/smf/gx-path.c:    ogs_assert(sess->ipv4 || sess->ipv6);
./src/smf/gx-path.c:    smf_ue = sess->smf_ue;
./src/smf/gx-path.c:    if (sess->gx_sid) {
./src/smf/gx-path.c:        size_t sidlen = strlen(sess->gx_sid);
./src/smf/gx-path.c:        ret = fd_sess_fromsid_msg((os0_t)sess->gx_sid, sidlen, &session, &new);
./src/smf/gx-path.c:        ogs_debug("    Found Gx Session-Id: [%s]", sess->gx_sid);
./src/smf/gx-path.c:        ret = ogs_diam_message_session_id_set(req, (os0_t)sess->gx_sid, sidlen);
./src/smf/gx-path.c:        sess->gx_sid = (char *)sess_data->gx_sid;
./src/smf/gx-path.c:        if (sess->ipv4) {
./src/smf/gx-path.c:            val.os.data = (uint8_t*)&sess->ipv4->addr;
./src/smf/gx-path.c:        if (sess->ipv6) {
./src/smf/gx-path.c:            memcpy(&paa.addr6, &sess->ipv6->addr,
./src/smf/gx-path.c:        switch (sess->gtp_rat_type) {
./src/smf/gx-path.c:            ogs_error("Unknown RAT Type [%d]", sess->gtp_rat_type);
./src/smf/gx-path.c:        switch (sess->gtp_rat_type) {
./src/smf/gx-path.c:            ogs_error("Unknown RAT Type [%d]", sess->gtp_rat_type);
./src/smf/gx-path.c:        if (sess->session.ambr.downlink || sess->session.ambr.uplink) {
./src/smf/gx-path.c:            if (sess->session.ambr.uplink) {
./src/smf/gx-path.c:                val.u32 = sess->session.ambr.uplink;
./src/smf/gx-path.c:            if (sess->session.ambr.downlink) {
./src/smf/gx-path.c:                val.u32 = sess->session.ambr.downlink;
./src/smf/gx-path.c:        val.u32 = sess->session.qos.index;
./src/smf/gx-path.c:        val.u32 = sess->session.qos.arp.priority_level;
./src/smf/gx-path.c:        val.u32 = sess->session.qos.arp.pre_emption_capability;
./src/smf/gx-path.c:        val.u32 = sess->session.qos.arp.pre_emption_vulnerability;
./src/smf/gx-path.c:        if (sess->gtp.ue_timezone.presence &&
./src/smf/gx-path.c:                sess->gtp.ue_timezone.len && sess->gtp.ue_timezone.data) {
./src/smf/gx-path.c:            val.os.data = sess->gtp.ue_timezone.data;
./src/smf/gx-path.c:            val.os.len = sess->gtp.ue_timezone.len;
./src/smf/gx-path.c:                &sess->serving_plmn_id, buf);
./src/smf/gx-path.c:        if (sess->sgw_s5c_ip.ipv4) {
./src/smf/gx-path.c:            sin.sin_addr.s_addr = sess->sgw_s5c_ip.addr;
./src/smf/gx-path.c:        if (sess->sgw_s5c_ip.ipv6) {
./src/smf/gx-path.c:                    sess->sgw_s5c_ip.addr6, OGS_IPV6_LEN);
./src/smf/gx-path.c:    if (sess->gtp.charging_characteristics.presence &&
./src/smf/gx-path.c:        sess->gtp.charging_characteristics.len > 0) {
./src/smf/gx-path.c:        oct1 = ((uint8_t*)sess->gtp.charging_characteristics.data)[0];
./src/smf/gx-path.c:        oct2 = (sess->gtp.charging_characteristics.len > 1) ?
./src/smf/gx-path.c:                        ((uint8_t*)sess->gtp.charging_characteristics.data)[1] : 0;
./src/smf/gx-path.c:    ogs_assert(sess->session.name);
./src/smf/gx-path.c:    val.os.data = (uint8_t*)sess->session.name;
./src/smf/gx-path.c:    val.os.len = strlen(sess->session.name);
./src/smf/gx-path.c:        charging_id = htobe32(sess->charging.id);
./src/smf/gx-path.c:        if (sess->gtp_rat_type == OGS_GTP2_RAT_TYPE_WLAN ||
./src/smf/gx-path.c:            sess->gtp_rat_type == OGS_GTP2_RAT_TYPE_VIRTUAL) {
./src/smf/gsm-sm.c:        ogs_gtp1_send_error_message(gtp_xact, sess->sgw_s5c_teid,
./src/smf/gsm-sm.c:        ogs_gtp2_send_error_message(gtp_xact, sess->sgw_s5c_teid,
./src/smf/gsm-sm.c:        ogs_gtp1_send_error_message(gtp_xact, sess->sgw_s5c_teid,
./src/smf/gsm-sm.c:        ogs_gtp2_send_error_message(gtp_xact, sess->sgw_s5c_teid,
./src/smf/gsm-sm.c:    sess->sm_data.gx_ccr_init_in_flight = true;
./src/smf/gsm-sm.c:        sess->sm_data.gy_ccr_init_in_flight = true;
./src/smf/gsm-sm.c:    if (sess->gtp_rat_type == OGS_GTP2_RAT_TYPE_WLAN) {
./src/smf/gsm-sm.c:        sess->sm_data.s6b_str_in_flight = true;
./src/smf/gsm-sm.c:    sess->sm_data.gx_ccr_term_in_flight = true;
./src/smf/gsm-sm.c:        sess->sm_data.gy_ccr_term_in_flight = true;
./src/smf/gsm-sm.c:        sess->sm_data.s6b_aar_in_flight = false;
./src/smf/gsm-sm.c:        sess->sm_data.gx_ccr_init_in_flight = false;
./src/smf/gsm-sm.c:        sess->sm_data.gy_ccr_init_in_flight = false;
./src/smf/gsm-sm.c:        sess->sm_data.s6b_aaa_err = ER_DIAMETER_SUCCESS;
./src/smf/gsm-sm.c:        sess->sm_data.gx_cca_init_err = ER_DIAMETER_SUCCESS;
./src/smf/gsm-sm.c:        sess->sm_data.gy_cca_init_err = ER_DIAMETER_SUCCESS;
./src/smf/gsm-sm.c:            switch (sess->gtp_rat_type) {
./src/smf/gsm-sm.c:                sess->sm_data.s6b_aar_in_flight = true;
./src/smf/gsm-sm.c:                ogs_error("Unknown RAT Type [%d]", sess->gtp_rat_type);
./src/smf/gsm-sm.c:        smf_ue = sess->smf_ue;
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi);
./src/smf/gsm-sm.c:            sess->sm_data.s6b_aar_in_flight = false;
./src/smf/gsm-sm.c:            sess->sm_data.s6b_aaa_err = s6b_message->result_code;
./src/smf/gsm-sm.c:                sess->sm_data.gx_ccr_init_in_flight = false;
./src/smf/gsm-sm.c:                sess->sm_data.gx_cca_init_err = diam_err;
./src/smf/gsm-sm.c:                sess->sm_data.gy_ccr_init_in_flight = false;
./src/smf/gsm-sm.c:                sess->sm_data.gy_cca_init_err = diam_err;
./src/smf/gsm-sm.c:    if (!sess->sm_data.s6b_aar_in_flight &&
./src/smf/gsm-sm.c:        !sess->sm_data.gx_ccr_init_in_flight &&
./src/smf/gsm-sm.c:        !sess->sm_data.gy_ccr_init_in_flight) {
./src/smf/gsm-sm.c:        if (sess->sm_data.s6b_aaa_err != ER_DIAMETER_SUCCESS)
./src/smf/gsm-sm.c:            diam_err = sess->sm_data.s6b_aaa_err;
./src/smf/gsm-sm.c:        if (sess->sm_data.gx_cca_init_err != ER_DIAMETER_SUCCESS)
./src/smf/gsm-sm.c:            diam_err = sess->sm_data.gx_cca_init_err;
./src/smf/gsm-sm.c:        if (sess->sm_data.gy_cca_init_err != ER_DIAMETER_SUCCESS)
./src/smf/gsm-sm.c:            diam_err = sess->sm_data.gy_cca_init_err;
./src/smf/gsm-sm.c:            if (sess->sm_data.gx_cca_init_err == ER_DIAMETER_SUCCESS) {
./src/smf/gsm-sm.c:                sess->sm_data.gx_ccr_term_in_flight = true;
./src/smf/gsm-sm.c:                (sess->sm_data.gy_cca_init_err == ER_DIAMETER_SUCCESS || need_gy_terminate)) {
./src/smf/gsm-sm.c:                sess->sm_data.gy_ccr_term_in_flight = true;
./src/smf/gsm-sm.c:        smf_ue = sess->smf_ue;
./src/smf/gsm-sm.c:                            smf_ue->supi, sess->psi, sbi_message->res_status);
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                            smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                            smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                    smf_ue->supi, sess->psi, sbi_message->h.service.name);
./src/smf/gsm-sm.c:                if (sess->gtp_rat_type == OGS_GTP2_RAT_TYPE_WLAN) {
./src/smf/gsm-sm.c:                ogs_gtp1_send_error_message(e->gtp_xact, sess->sgw_s5c_teid,
./src/smf/gsm-sm.c:                ogs_gtp2_send_error_message(e->gtp_xact, sess->sgw_s5c_teid,
./src/smf/gsm-sm.c:                sess->upf_n4_seid = be64toh(up_f_seid->seid);
./src/smf/gsm-sm.c:        smf_ue = sess->smf_ue;
./src/smf/gsm-sm.c:                            smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                                    smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                            OGS_FSM_TRAN(&sess->sm, smf_gsm_state_wait_5gc_n1_n2_release);
./src/smf/gsm-sm.c:                            sess->pti = OGS_NAS_PROCEDURE_TRANSACTION_IDENTITY_UNASSIGNED;
./src/smf/gsm-sm.c:                            OGS_FSM_TRAN(&sess->sm,
./src/smf/gsm-sm.c:                                smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                    smf_ue->supi, sess->psi, sbi_message->h.service.name);
./src/smf/gsm-sm.c:        smf_ue = sess->smf_ue;
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi);
./src/smf/gsm-sm.c:                        "Forcibly remove SESSION", smf_ue->supi, sess->psi);
./src/smf/gsm-sm.c:        smf_ue = sess->smf_ue;
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi);
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi);
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi);
./src/smf/gsm-sm.c:            ngap_state = sess->ngap_state.pdu_session_resource_release;
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi);
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi);
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi);
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi);
./src/smf/gsm-sm.c:         * we'll use `sess->epc` */
./src/smf/gsm-sm.c:        if (sess->epc) {
./src/smf/gsm-sm.c:        smf_ue = sess->smf_ue;
./src/smf/gsm-sm.c:                smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                    smf_ue->supi, sess->psi, sbi_message->h.service.name);
./src/smf/gsm-sm.c:        sess->sm_data.gx_cca_term_err = ER_DIAMETER_SUCCESS;
./src/smf/gsm-sm.c:        sess->sm_data.gy_cca_term_err = ER_DIAMETER_SUCCESS;
./src/smf/gsm-sm.c:        sess->sm_data.s6b_sta_err = ER_DIAMETER_SUCCESS;
./src/smf/gsm-sm.c:                sess->sm_data.gx_ccr_term_in_flight = false;
./src/smf/gsm-sm.c:                sess->sm_data.gx_cca_term_err = diam_err;
./src/smf/gsm-sm.c:                sess->sm_data.gy_ccr_term_in_flight = false;
./src/smf/gsm-sm.c:                sess->sm_data.gy_cca_term_err = diam_err;
./src/smf/gsm-sm.c:            sess->sm_data.s6b_str_in_flight = false;
./src/smf/gsm-sm.c:            sess->sm_data.s6b_sta_err = ER_DIAMETER_SUCCESS;
./src/smf/gsm-sm.c:    if (!sess->sm_data.gx_ccr_term_in_flight &&
./src/smf/gsm-sm.c:        !sess->sm_data.gy_ccr_term_in_flight &&
./src/smf/gsm-sm.c:        !sess->sm_data.s6b_str_in_flight) {
./src/smf/gsm-sm.c:        if (sess->sm_data.gx_cca_term_err != ER_DIAMETER_SUCCESS)
./src/smf/gsm-sm.c:            diam_err = sess->sm_data.gx_cca_term_err;
./src/smf/gsm-sm.c:        if (sess->sm_data.gy_cca_term_err != ER_DIAMETER_SUCCESS)
./src/smf/gsm-sm.c:            diam_err = sess->sm_data.gy_cca_term_err;
./src/smf/gsm-sm.c:        if (sess->sm_data.s6b_sta_err != ER_DIAMETER_SUCCESS)
./src/smf/gsm-sm.c:            diam_err = sess->sm_data.s6b_sta_err;
./src/smf/gsm-sm.c:        smf_ue = sess->smf_ue;
./src/smf/gsm-sm.c:                    smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                    smf_ue->supi, sess->psi, sbi_message->h.service.name);
./src/smf/gsm-sm.c:        smf_ue = sess->smf_ue;
./src/smf/gsm-sm.c:            ngap_state = sess->ngap_state.pdu_session_resource_release;
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi);
./src/smf/gsm-sm.c:                sess->n2_released = true;
./src/smf/gsm-sm.c:                if ((sess->n1_released) && (sess->n2_released)) {
./src/smf/gsm-sm.c:        smf_ue = sess->smf_ue;
./src/smf/gsm-sm.c:            sess->n1_released = true;
./src/smf/gsm-sm.c:            if ((sess->n1_released) && (sess->n2_released)) {
./src/smf/gsm-sm.c:        smf_ue = sess->smf_ue;
./src/smf/gsm-sm.c:                            smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                                    smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                                smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                        smf_ue->supi, sess->psi,
./src/smf/gsm-sm.c:                    smf_ue->supi, sess->psi, sbi_message->h.service.name);
./src/smf/gsm-sm.c:    smf_ue = sess->smf_ue;
./src/smf/gsm-sm.c:        ogs_error("[%s:%d] State machine exception", smf_ue->supi, sess->psi);
./src/smf/namf-handler.c:    smf_ue = sess->smf_ue;
./src/smf/namf-handler.c:                smf_ue->supi, sess->psi, recvmsg->res_status);
./src/smf/namf-handler.c:                smf_ue->supi, sess->psi, recvmsg->res_status,
./src/smf/namf-handler.c:                smf_ue->supi, sess->psi, recvmsg->res_status,
./src/smf/gy-handler.c:        ogs_assert(sess->pfcp_node);
./src/smf/gy-handler.c:        if (sess->pfcp_node->up_function_features.mnop)
./src/smf/gy-handler.c:    if (sess->pfcp_node->up_function_features.vtime) {
./src/smf/gy-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/gy-handler.c:        bearer->urr = ogs_pfcp_urr_add(&sess->pfcp);
./src/smf/gy-handler.c:    sess->gy.final_unit = gy_message->cca.final.cc_final_action_present;
./src/smf/gy-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/gy-handler.c:    sess->gy.final_unit = gy_message->cca.final.cc_final_action_present;
./src/smf/gy-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/namf-build.c:    smf_ue = sess->smf_ue;
./src/smf/namf-build.c:    N1N2MessageTransferReqData.pdu_session_id = sess->psi;
./src/smf/namf-build.c:        smInfo.pdu_session_id = sess->psi;
./src/smf/namf-build.c:    ogs_assert(sess->sm_context_status_uri);
./src/smf/namf-build.c:    message.h.uri = sess->sm_context_status_uri;
./src/smf/pfcp-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/pfcp-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/pfcp-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/pfcp-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/pfcp-sm.c:            ogs_fsm_dispatch(&sess->sm, e);
./src/smf/pfcp-sm.c:            if (node == sess->pfcp_node) {
./src/smf/pfcp-sm.c:                if (sess->epc) {
./src/smf/pfcp-sm.c:                        smf_ue->imsi_bcd, sess->session.name,
./src/smf/pfcp-sm.c:                        sess->ipv4 ?
./src/smf/pfcp-sm.c:                            OGS_INET_NTOP(&sess->ipv4->addr, buf1) : "",
./src/smf/pfcp-sm.c:                        sess->ipv6 ?
./src/smf/pfcp-sm.c:                            OGS_INET6_NTOP(&sess->ipv6->addr, buf2) : "");
./src/smf/pfcp-sm.c:                        smf_ue->supi, sess->session.name,
./src/smf/pfcp-sm.c:                        sess->ipv4 ?
./src/smf/pfcp-sm.c:                            OGS_INET_NTOP(&sess->ipv4->addr, buf1) : "",
./src/smf/pfcp-sm.c:                        sess->ipv6 ?
./src/smf/pfcp-sm.c:                            OGS_INET6_NTOP(&sess->ipv6->addr, buf2) : "");
./src/smf/pfcp-sm.c:            if (node == sess->pfcp_node) {
./src/smf/pfcp-sm.c:                if (sess->epc) {
./src/smf/pfcp-sm.c:                            smf_ue->imsi_bcd, sess->session.name);
./src/smf/pfcp-sm.c:                                smf_ue->supi, sess->psi);
./src/smf/pfcp-sm.c:                        ogs_assert(sess->sm_context_ref);
./src/smf/pfcp-sm.c:                                smf_ue->supi, sess->psi);
./src/smf/nudm-handler.c:    smf_ue = sess->smf_ue;
./src/smf/nudm-handler.c:                smf_ue->supi, sess->psi);
./src/smf/nudm-handler.c:                smf_ue->supi, sess->psi);
./src/smf/nudm-handler.c:                smf_ue->supi, sess->psi);
./src/smf/nudm-handler.c:            if (sess->session.name &&
./src/smf/nudm-handler.c:                ogs_strcasecmp(sess->session.name,
./src/smf/nudm-handler.c:            if (sess->ue_session_type) {
./src/smf/nudm-handler.c:                        if (sess->ue_session_type == allowed_session_type) {
./src/smf/nudm-handler.c:                            sess->session.session_type =
./src/smf/nudm-handler.c:                                sess->ue_session_type;
./src/smf/nudm-handler.c:            if (!sess->session.session_type)
./src/smf/nudm-handler.c:                sess->session.session_type =
./src/smf/nudm-handler.c:            if (sess->ue_ssc_mode) {
./src/smf/nudm-handler.c:                        if (sess->ue_ssc_mode == allowed_ssc_mode) {
./src/smf/nudm-handler.c:                            sess->session.ssc_mode = sess->ue_ssc_mode;
./src/smf/nudm-handler.c:                sess->session.ssc_mode = sscModeList->default_ssc_mode;
./src/smf/nudm-handler.c:            if (!sess->session.ssc_mode) {
./src/smf/nudm-handler.c:            sess->session.ambr.uplink =
./src/smf/nudm-handler.c:            sess->session.ambr.downlink =
./src/smf/nudm-handler.c:                sess->session.qos.index = _5gQoSProfile->_5qi;
./src/smf/nudm-handler.c:                sess->session.qos.arp.priority_level =
./src/smf/nudm-handler.c:                    sess->session.qos.arp.priority_level =
./src/smf/nudm-handler.c:                        sess->session.qos.arp.pre_emption_capability =
./src/smf/nudm-handler.c:                        sess->session.qos.arp.pre_emption_capability =
./src/smf/nudm-handler.c:                    ogs_assert(sess->session.qos.arp.pre_emption_capability);
./src/smf/nudm-handler.c:                        sess->session.qos.arp.pre_emption_vulnerability =
./src/smf/nudm-handler.c:                        sess->session.qos.arp.pre_emption_vulnerability =
./src/smf/nudm-handler.c:                    ogs_assert(sess->session.qos.arp.pre_emption_vulnerability);
./src/smf/nudm-handler.c:                                sess->session.ue_ip.addr = ipsub4.sub[0];
./src/smf/nudm-handler.c:                                memcpy(sess->session.ue_ip.addr6,
./src/smf/nudm-handler.c:                                sess->session.ue_ip.addr = ipsub4.sub[0];
./src/smf/nudm-handler.c:                                memcpy(sess->session.ue_ip.addr6,
./src/smf/nudm-handler.c:                    if (!sess->session.ipv4_framed_routes ||
./src/smf/nudm-handler.c:                        !sess->session.ipv4_framed_routes[i])
./src/smf/nudm-handler.c:                    ogs_free(sess->session.ipv4_framed_routes[i]);
./src/smf/nudm-handler.c:                if (!sess->session.ipv4_framed_routes)
./src/smf/nudm-handler.c:                    sess->session.ipv4_framed_routes = ogs_calloc(
./src/smf/nudm-handler.c:                            sizeof(sess->session.ipv4_framed_routes[0]));
./src/smf/nudm-handler.c:                    sess->session.ipv4_framed_routes[i++] = ogs_strdup(route->ipv4_mask);
./src/smf/nudm-handler.c:                    if (!sess->session.ipv6_framed_routes ||
./src/smf/nudm-handler.c:                        !sess->session.ipv6_framed_routes[i])
./src/smf/nudm-handler.c:                    ogs_free(sess->session.ipv6_framed_routes[i]);
./src/smf/nudm-handler.c:                if (!sess->session.ipv6_framed_routes)
./src/smf/nudm-handler.c:                    sess->session.ipv6_framed_routes = ogs_calloc(
./src/smf/nudm-handler.c:                            sizeof(sess->session.ipv6_framed_routes[0]));
./src/smf/nudm-handler.c:                    sess->session.ipv6_framed_routes[i++] = ogs_strdup(route->ipv6_prefix);
./src/smf/nudm-handler.c:            if (!sess->session.name)
./src/smf/nudm-handler.c:                sess->session.name = ogs_strdup(dnnConfigurationMap->key);
./src/smf/nudm-handler.c:            ogs_assert(sess->session.name);
./src/smf/nudm-handler.c:    if (!sess->session.name) {
./src/smf/nudm-handler.c:                smf_ue->supi, sess->psi);
./src/smf/nudm-handler.c:                smf_ue->supi, sess->psi);
./src/smf/nudm-handler.c:    header.resource.component[1] = sess->sm_context_ref;
./src/smf/nudm-handler.c:    smf_metrics_inst_by_slice_add(&sess->serving_plmn_id, &sess->s_nssai,
./src/smf/s5c-handler.c:    return sess ? sess->sgw_s5c_teid :
./src/smf/s5c-handler.c:    switch (sess->gtp_rat_type) {
./src/smf/s5c-handler.c:    smf_ue = sess->smf_ue;
./src/smf/s5c-handler.c:        sess->gtp.selection_mode = req->selection_mode.u8 & 0x03;
./src/smf/s5c-handler.c:        if (sess->gtp.selection_mode > 2)
./src/smf/s5c-handler.c:            sess->gtp.selection_mode = 2;
./src/smf/s5c-handler.c:    if (sess->gtp_rat_type == OGS_GTP2_RAT_TYPE_EUTRAN) {
./src/smf/s5c-handler.c:        memcpy(&sess->e_tai, &uli.tai, sizeof(sess->e_tai));
./src/smf/s5c-handler.c:        memcpy(&sess->e_cgi, &uli.e_cgi, sizeof(sess->e_cgi));
./src/smf/s5c-handler.c:    } else if (sess->gtp_rat_type == OGS_GTP2_RAT_TYPE_WLAN) {
./src/smf/s5c-handler.c:                smf_ue, sess->session.name, OGS_GTP2_RAT_TYPE_EUTRAN);
./src/smf/s5c-handler.c:                if (eutran_sess->gtp_rat_type != OGS_GTP2_RAT_TYPE_EUTRAN)
./src/smf/s5c-handler.c:                if (strcmp(eutran_sess->session.name, sess->session.name) == 0)
./src/smf/s5c-handler.c:    ogs_nas_to_plmn_id(&sess->serving_plmn_id, req->serving_network.data);
./src/smf/s5c-handler.c:    ogs_assert(sess->pfcp_node);
./src/smf/s5c-handler.c:    if (!OGS_FSM_CHECK(&sess->pfcp_node->sm, smf_pfcp_state_associated))
./src/smf/s5c-handler.c:    sess->ue_session_type = paa->session_type;
./src/smf/s5c-handler.c:    sess->session.session_type = sess->ue_session_type;
./src/smf/s5c-handler.c:    rv = ogs_paa_to_ip(paa, &sess->session.ue_ip);
./src/smf/s5c-handler.c:        sess->session.name,
./src/smf/s5c-handler.c:        sess->ipv4 ? OGS_INET_NTOP(&sess->ipv4->addr, buf1) : "",
./src/smf/s5c-handler.c:        sess->ipv6 ? OGS_INET6_NTOP(&sess->ipv6->addr, buf2) : "");
./src/smf/s5c-handler.c:    /* sess->sgw_s5c_teid has already been updated in SMF-SM */
./src/smf/s5c-handler.c:    ogs_assert(sess->sgw_s5c_teid == be32toh(sgw_s5c_teid->teid));
./src/smf/s5c-handler.c:    rv = ogs_gtp2_f_teid_to_ip(sgw_s5c_teid, &sess->sgw_s5c_ip);
./src/smf/s5c-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-handler.c:        switch (sess->gtp_rat_type) {
./src/smf/s5c-handler.c:            ogs_error("Unknown RAT Type [%d]", sess->gtp_rat_type);
./src/smf/s5c-handler.c:            sess->session.qos.index = bearer_qos.qci;
./src/smf/s5c-handler.c:            sess->session.qos.arp.priority_level = bearer_qos.priority_level;
./src/smf/s5c-handler.c:            sess->session.qos.arp.pre_emption_capability =
./src/smf/s5c-handler.c:            sess->session.qos.arp.pre_emption_vulnerability =
./src/smf/s5c-handler.c:        sess->session.ambr.downlink = be32toh(ambr->downlink) * 1000;
./src/smf/s5c-handler.c:        sess->session.ambr.uplink = be32toh(ambr->uplink) * 1000;
./src/smf/s5c-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.ue_epco,
./src/smf/s5c-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.ue_pco,
./src/smf/s5c-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.ue_apco,
./src/smf/s5c-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.user_location_information,
./src/smf/s5c-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.ue_timezone, &req->ue_time_zone);
./src/smf/s5c-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.charging_characteristics, &req->charging_characteristics);
./src/smf/s5c-handler.c:    if (sess->gtp_rat_type == OGS_GTP2_RAT_TYPE_WLAN) {
./src/smf/s5c-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.ue_pco,
./src/smf/s5c-handler.c:        OGS_TLV_CLEAR_DATA(&sess->gtp.ue_pco);
./src/smf/s5c-handler.c:        OGS_TLV_STORE_DATA(&sess->gtp.ue_epco,
./src/smf/s5c-handler.c:        OGS_TLV_CLEAR_DATA(&sess->gtp.ue_epco);
./src/smf/s5c-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-handler.c:    smf_ue = sess->smf_ue;
./src/smf/s5c-handler.c:        sess->sgw_s5c_teid = be32toh(sgw_s5c_teid->teid);
./src/smf/s5c-handler.c:        rv = ogs_gtp2_f_teid_to_ip(sgw_s5c_teid, &sess->sgw_s5c_ip);
./src/smf/s5c-handler.c:                sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-handler.c:    ogs_list_init(&sess->qos_flow_to_modify_list);
./src/smf/s5c-handler.c:                ogs_assert(sess->pfcp_node);
./src/smf/s5c-handler.c:                if (sess->pfcp_node->up_function_features.empu) {
./src/smf/s5c-handler.c:            ogs_list_add(&sess->qos_flow_to_modify_list,
./src/smf/s5c-handler.c:    if (ogs_list_count(&sess->qos_flow_to_modify_list)) {
./src/smf/s5c-handler.c:                        sess->pfcp_node, pfcp_sess_timeout, sess);
./src/smf/s5c-handler.c:        pfcp_xact->local_seid = sess->smf_n4_seid;
./src/smf/s5c-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-handler.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/s5c-handler.c:        h.teid = sess->sgw_s5c_teid;
./src/smf/gtp-path.c:        if (sess->ipv6 && check_if_router_solicit(pkbuf) == true) {
./src/smf/gtp-path.c:    h.teid = sess->sgw_s5c_teid;
./src/smf/gtp-path.c:    h.teid = sess->sgw_s5c_teid;
./src/smf/gtp-path.c:    h.teid = sess->sgw_s5c_teid;
./src/smf/gtp-path.c:            sess->gnode, &h, pkbuf, bearer_timeout, bearer);
./src/smf/gtp-path.c:    h.teid = sess->sgw_s5c_teid;
./src/smf/gtp-path.c:    h.teid = sess->sgw_s5c_teid;
./src/smf/gtp-path.c:    h.teid = sess->sgw_s5c_teid;
./src/smf/gtp-path.c:    h.teid = sess->sgw_s5c_teid;
./src/smf/gtp-path.c:    h.teid = sess->sgw_s5c_teid;
./src/smf/gtp-path.c:            sess->gnode, &h, pkbuf, bearer_timeout, bearer);
./src/smf/gtp-path.c:    xact->local_teid = sess->smf_n4_teid;
./src/smf/gtp-path.c:    ue_ip = sess->ipv6;
./src/smf/gtp-path.c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/smf/gtp-path.c:    smf_ue = sess->smf_ue;
./src/smf/gsm-handler.c:    sess->integrity_protection.mbr_dl =
./src/smf/gsm-handler.c:    sess->integrity_protection.mbr_ul =
./src/smf/gsm-handler.c:        sess->ue_session_type = pdu_session_type->value;
./src/smf/gsm-handler.c:        sess->ue_ssc_mode = ssc_mode->value;
./src/smf/gsm-handler.c:        OGS_NAS_STORE_DATA(&sess->nas.ue_epco,
./src/smf/gsm-handler.c:    smf_ue = sess->smf_ue;
./src/smf/gsm-handler.c:    ogs_list_init(&sess->qos_flow_to_modify_list);
./src/smf/gsm-handler.c:                    smf_ue->supi, sess->psi);
./src/smf/gsm-handler.c:                qos_flow_find_or_add(&sess->qos_flow_to_modify_list,
./src/smf/gsm-handler.c:                        qos_flow_find_or_add(&sess->qos_flow_to_modify_list,
./src/smf/gsm-handler.c:                    qos_flow_find_or_add(&sess->qos_flow_to_modify_list,
./src/smf/gsm-handler.c:                    qos_flow_find_or_add(&sess->qos_flow_to_modify_list,
./src/smf/gsm-handler.c:                    qos_flow_find_or_add(&sess->qos_flow_to_modify_list,
./src/smf/gsm-handler.c:                    smf_ue->supi, sess->psi);
./src/smf/gsm-handler.c:            qos_flow_find_or_add(&sess->qos_flow_to_modify_list,
./src/smf/gsm-handler.c:    if (ogs_list_count(&sess->qos_flow_to_modify_list) != 1) {
./src/smf/gsm-handler.c:                smf_ue->supi, sess->psi,
./src/smf/gsm-handler.c:                ogs_list_count(&sess->qos_flow_to_modify_list));
./src/smf/ngap-build.c:    if (sess->session.ambr.downlink || sess->session.ambr.uplink) {
./src/smf/ngap-build.c:            pDUSessionAggregateMaximumBitRateUL, sess->session.ambr.uplink);
./src/smf/ngap-build.c:            pDUSessionAggregateMaximumBitRateDL, sess->session.ambr.downlink);
./src/smf/ngap-build.c:                sess->upf_n3_addr, sess->upf_n3_addr6, &upf_n3_ip));
./src/smf/ngap-build.c:    ogs_asn_uint32_to_OCTET_STRING(sess->upf_n3_teid, &gTPTunnel->gTP_TEID);
./src/smf/ngap-build.c:    if (sess->handover.data_forwarding_not_possible == true) {
./src/smf/ngap-build.c:    switch (sess->session.session_type) {
./src/smf/ngap-build.c:        ogs_fatal("Unknown PDU Session Type [%d]", sess->session.session_type);
./src/smf/ngap-build.c:    ogs_list_for_each(&sess->bearer_list, qos_flow) {
./src/smf/ngap-build.c:            &sess->qos_flow_to_modify_list, qos_flow, to_modify_node) {
./src/smf/ngap-build.c:            &sess->qos_flow_to_modify_list, qos_flow, to_modify_node) {
./src/smf/ngap-build.c:    sess->ngap_state.pdu_session_resource_release = state;
./src/smf/ngap-build.c:                sess->upf_n3_addr, sess->upf_n3_addr6, &upf_n3_ip));
./src/smf/ngap-build.c:    ogs_asn_uint32_to_OCTET_STRING(sess->upf_n3_teid, &gTPTunnel->gTP_TEID);
./src/smf/ngap-build.c:    if (sess->handover.indirect_data_forwarding == true) {
./src/smf/ngap-build.c:                sess->handover.upf_dl_addr, sess->handover.upf_dl_addr6,
./src/smf/ngap-build.c:                sess->handover.upf_dl_teid, &gTPTunnel->gTP_TEID);
./src/smf/ngap-build.c:        ogs_list_for_each(&sess->pfcp.pdr_list, pdr) {
./src/smf/gn-build.c:    memcpy(qos_pdec, &sess->gtp.v1.qos_pdec, sizeof(*qos_pdec));
./src/smf/gn-build.c:    qos_pdec->qos_profile.arp = sess->session.qos.arp.priority_level;
./src/smf/gn-build.c:    if (sess->gtp.v1.qos_pdec.qos_profile.data.max_sdu_size >= 0x01 &&
./src/smf/gn-build.c:        sess->gtp.v1.qos_pdec.qos_profile.data.max_sdu_size <= 0x99) {
./src/smf/gn-build.c:        qos_pdec->qos_profile.data.max_sdu_size = sess->gtp.v1.qos_pdec.qos_profile.data.max_sdu_size;
./src/smf/gn-build.c:    switch (sess->session.qos.index) { /* QCI */
./src/smf/gn-build.c:    qos_pdec->dec_mbr_kbps_dl = sess->session.ambr.downlink / 1000;
./src/smf/gn-build.c:    qos_pdec->dec_mbr_kbps_ul = sess->session.ambr.uplink / 1000;
./src/smf/gn-build.c:    if (!sess->gtp.v1.common_flags.upgrade_qos_supported) {
./src/smf/gn-build.c:        if (sess->gtp.v1.qos_pdec.dec_mbr_kbps_dl > 0)
./src/smf/gn-build.c:                                            sess->gtp.v1.qos_pdec.dec_mbr_kbps_dl);
./src/smf/gn-build.c:        if (sess->gtp.v1.qos_pdec.dec_mbr_kbps_ul > 0)
./src/smf/gn-build.c:                                            sess->gtp.v1.qos_pdec.dec_mbr_kbps_ul);
./src/smf/gn-build.c:        if (sess->gtp.v1.qos_pdec.dec_gbr_kbps_dl > 0)
./src/smf/gn-build.c:                                            sess->gtp.v1.qos_pdec.dec_gbr_kbps_dl);
./src/smf/gn-build.c:        if (sess->gtp.v1.qos_pdec.dec_gbr_kbps_ul > 0)
./src/smf/gn-build.c:                                            sess->gtp.v1.qos_pdec.dec_gbr_kbps_ul);
./src/smf/gn-build.c:            sess->sgw_s5c_teid, sess->smf_n4_teid);
./src/smf/gn-build.c:    if (sess->ue_session_type == sess->session.session_type)
./src/smf/gn-build.c:    rsp->tunnel_endpoint_identifier_control_plane.u32 = sess->smf_n4_teid;
./src/smf/gn-build.c:    rsp->nsapi.u8 = sess->gtp.v1.nsapi;
./src/smf/gn-build.c:    rsp->charging_id.u32 = sess->charging.id;
./src/smf/gn-build.c:    rv = ogs_paa_to_ip(&sess->session.paa, &ip_eua);
./src/smf/gn-build.c:    rv = ogs_gtp1_ip_to_eua(sess->session.session_type, &ip_eua, &eua,
./src/smf/gn-build.c:    if (sess->gtp.ue_pco.presence &&
./src/smf/gn-build.c:            sess->gtp.ue_pco.len && sess->gtp.ue_pco.data) {
./src/smf/gn-build.c:                pco_buf, sess->gtp.ue_pco.data, sess->gtp.ue_pco.len);
./src/smf/gn-build.c:        if (sess->sgw_s5c_ip.ipv4) {
./src/smf/gn-build.c:    if (sess->gtp.create_session_response_bearer_qos == true) {
./src/smf/gn-build.c:        memcpy(&rsp->quality_of_service_profile, &sess->gtp.v1.qos,
./src/smf/gn-build.c:    if (sess->gtp.v1.peer_supports_apn_ambr == true &&
./src/smf/gn-build.c:        sess->gtp.create_session_response_apn_ambr == true) {
./src/smf/gn-build.c:        ambr.uplink = htobe32((sess->session.ambr.uplink + 999)/ 1000);
./src/smf/gn-build.c:        ambr.downlink = htobe32((sess->session.ambr.downlink + 999) / 1000);
./src/smf/gn-build.c:    if (sess->gtp.ue_pco.presence &&
./src/smf/gn-build.c:            sess->gtp.ue_pco.len && sess->gtp.ue_pco.data) {
./src/smf/gn-build.c:                pco_buf, sess->gtp.ue_pco.data, sess->gtp.ue_pco.len);
./src/smf/gn-build.c:    rsp->tunnel_endpoint_identifier_control_plane.u32 = sess->smf_n4_teid;
./src/smf/gn-build.c:    rsp->charging_id.u32 = sess->charging.id;
./src/smf/gn-build.c:    if (!sess->gtp.v1.common_flags.no_qos_negotiation &&
./src/smf/gn-build.c:        sess->gtp.ue_pco.presence &&
./src/smf/gn-build.c:        sess->gtp.ue_pco.len && sess->gtp.ue_pco.data) {
./src/smf/gn-build.c:                pco_buf, sess->gtp.ue_pco.data, sess->gtp.ue_pco.len);
./src/smf/gn-build.c:        if (sess->sgw_s5c_ip.ipv4) {
./src/smf/gn-build.c:    if (!sess->gtp.v1.common_flags.no_qos_negotiation &&
./src/smf/gn-build.c:        sess->gtp.create_session_response_bearer_qos == true) {
./src/smf/gn-build.c:        memcpy(&rsp->quality_of_service_profile, &sess->gtp.v1.qos,
./src/smf/gn-build.c:   if (sess->gtp.v1.peer_supports_apn_ambr == true &&
./src/smf/gn-build.c:       sess->gtp.create_session_response_apn_ambr == true) {
./src/smf/gn-build.c:       ambr.uplink = htobe32((sess->session.ambr.uplink + 999)/ 1000);
./src/smf/gn-build.c:       ambr.downlink = htobe32((sess->session.ambr.downlink + 999) / 1000);
./src/smf/nudm-build.c:    smf_ue = sess->smf_ue;
./src/smf/nudm-build.c:    memcpy(&message.param.s_nssai, &sess->s_nssai,
./src/smf/nudm-build.c:    if (sess->session.name)
./src/smf/nudm-build.c:        message.param.dnn = sess->session.name;
./src/smf/nudm-build.c:    ogs_assert(sess->psi);
./src/smf/nudm-build.c:    smf_ue = sess->smf_ue;
./src/smf/nudm-build.c:    message.h.resource.component[3] = ogs_msprintf("%d", sess->psi);
./src/smf/nudm-build.c:    SmfRegistration.pdu_session_id = sess->psi;
./src/smf/nudm-build.c:    single_nssai.sst = sess->s_nssai.sst;
./src/smf/nudm-build.c:    single_nssai.sd = ogs_s_nssai_sd_to_string(sess->s_nssai.sd);
./src/smf/nudm-build.c:    SmfRegistration.dnn = sess->session.name;
./src/smf/nudm-build.c:    SmfRegistration.plmn_id = ogs_sbi_build_plmn_id(&sess->serving_plmn_id);
./src/smf/nudm-build.c:    ogs_assert(sess->psi);
./src/smf/nudm-build.c:    smf_ue = sess->smf_ue;
./src/smf/nudm-build.c:    message.h.resource.component[3] = ogs_msprintf("%d", sess->psi);
./src/smf/nsmf-handler.c:    smf_ue = sess->smf_ue;
./src/smf/nsmf-handler.c:                smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:        ogs_error("[%s:%d] No n1SmMsg", smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:                smf_ue->supi, sess->psi, n1SmMsg->content_id);
./src/smf/nsmf-handler.c:    sess->pti = gsm_header->procedure_transaction_identity;
./src/smf/nsmf-handler.c:    if (sess->pti == OGS_NAS_PROCEDURE_TRANSACTION_IDENTITY_UNASSIGNED) {
./src/smf/nsmf-handler.c:        ogs_error("[%s:%d] No PTI", smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:        ogs_error("[%s:%d] No sNssai", smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:                smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:        ogs_error("[%s:%d] No UeLocation", smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:        ogs_error("[%s:%d] No NrLocation", smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:                smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:                smf_ue->supi, sess->psi,
./src/smf/nsmf-handler.c:    ogs_sbi_parse_plmn_id_nid(&sess->serving_plmn_id, servingNetwork);
./src/smf/nsmf-handler.c:    memcpy(&sess->home_plmn_id, &sess->serving_plmn_id, OGS_PLMN_ID_LEN);
./src/smf/nsmf-handler.c:    sess->sbi_rat_type = SmContextCreateData->rat_type;
./src/smf/nsmf-handler.c:    ogs_sbi_parse_nr_location(&sess->nr_tai, &sess->nr_cgi, NrLocation);
./src/smf/nsmf-handler.c:        ogs_sbi_time_from_string(&sess->ue_location_timestamp,
./src/smf/nsmf-handler.c:    sess->s_nssai.sst = sNssai->sst;
./src/smf/nsmf-handler.c:    sess->s_nssai.sd = ogs_s_nssai_sd_from_string(sNssai->sd);
./src/smf/nsmf-handler.c:        sess->mapped_hplmn.sst = SmContextCreateData->hplmn_snssai->sst;
./src/smf/nsmf-handler.c:        sess->mapped_hplmn.sd = ogs_s_nssai_sd_from_string(
./src/smf/nsmf-handler.c:    smf_metrics_inst_by_slice_add(&sess->serving_plmn_id, &sess->s_nssai,
./src/smf/nsmf-handler.c:    smf_metrics_inst_by_slice_add(&sess->serving_plmn_id, &sess->s_nssai,
./src/smf/nsmf-handler.c:    if (sess->sm_context_status_uri)
./src/smf/nsmf-handler.c:        ogs_free(sess->sm_context_status_uri);
./src/smf/nsmf-handler.c:    sess->sm_context_status_uri =
./src/smf/nsmf-handler.c:    ogs_assert(sess->sm_context_status_uri);
./src/smf/nsmf-handler.c:    OGS_SBI_SETUP_CLIENT(&sess->namf, client);
./src/smf/nsmf-handler.c:            if (sess->session.name)
./src/smf/nsmf-handler.c:                ogs_free(sess->session.name);
./src/smf/nsmf-handler.c:            sess->session.name = ogs_strdup(dnn_network_identifer);
./src/smf/nsmf-handler.c:            ogs_assert(sess->session.name);
./src/smf/nsmf-handler.c:            if (sess->full_dnn)
./src/smf/nsmf-handler.c:                ogs_free(sess->full_dnn);
./src/smf/nsmf-handler.c:            sess->full_dnn = ogs_strdup(SmContextCreateData->dnn);
./src/smf/nsmf-handler.c:            ogs_assert(sess->full_dnn);
./src/smf/nsmf-handler.c:            mcc = ogs_plmn_id_mcc_from_fqdn(sess->full_dnn);
./src/smf/nsmf-handler.c:            mnc = ogs_plmn_id_mnc_from_fqdn(sess->full_dnn);
./src/smf/nsmf-handler.c:                    ogs_plmn_id_build(&sess->home_plmn_id, mcc, mnc, mnc_len);
./src/smf/nsmf-handler.c:            if (sess->session.name)
./src/smf/nsmf-handler.c:                ogs_free(sess->session.name);
./src/smf/nsmf-handler.c:            sess->session.name = ogs_strdup(SmContextCreateData->dnn);
./src/smf/nsmf-handler.c:            ogs_assert(sess->session.name);
./src/smf/nsmf-handler.c:            if (sess->full_dnn)
./src/smf/nsmf-handler.c:                ogs_free(sess->full_dnn);
./src/smf/nsmf-handler.c:            sess->full_dnn = NULL;
./src/smf/nsmf-handler.c:        if (sess->pcf_id) ogs_free(sess->pcf_id);
./src/smf/nsmf-handler.c:        sess->pcf_id = ogs_strdup(SmContextCreateData->pcf_id);
./src/smf/nsmf-handler.c:        ogs_assert(sess->pcf_id);
./src/smf/nsmf-handler.c:        if (sess->serving_nf_id) ogs_free(sess->serving_nf_id);
./src/smf/nsmf-handler.c:        sess->serving_nf_id = ogs_strdup(SmContextCreateData->serving_nf_id);
./src/smf/nsmf-handler.c:        ogs_assert(sess->serving_nf_id);
./src/smf/nsmf-handler.c:    smf_ue = sess->smf_ue;
./src/smf/nsmf-handler.c:                smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:            ogs_sbi_parse_nr_location(&sess->nr_tai, &sess->nr_cgi, NrLocation);
./src/smf/nsmf-handler.c:                ogs_sbi_time_from_string(&sess->ue_location_timestamp,
./src/smf/nsmf-handler.c:                ogs_plmn_id_hexdump(&sess->nr_tai.plmn_id), sess->nr_tai.tac.v);
./src/smf/nsmf-handler.c:                ogs_plmn_id_hexdump(&sess->nr_cgi.plmn_id),
./src/smf/nsmf-handler.c:                (long long)sess->nr_cgi.cell_id);
./src/smf/nsmf-handler.c:            ogs_error("[%s:%d] No n1SmMsg", smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:                    smf_ue->supi, sess->psi, n1SmMsg->content_id);
./src/smf/nsmf-handler.c:        sess->pti = gsm_header->procedure_transaction_identity;
./src/smf/nsmf-handler.c:            ogs_error("[%s:%d] No n2SmInfoType", smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:                    smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:            ogs_error("[%s:%d] No N2 SM Content", smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:        sess->up_cnx_state = SmContextUpdateData->up_cnx_state;
./src/smf/nsmf-handler.c:            if (sess->ngap_state.pdu_session_resource_release ==
./src/smf/nsmf-handler.c:                 *    sess->ngap_state.pdu_session_resource_release is set
./src/smf/nsmf-handler.c:            if (!OGS_FSM_CHECK(&sess->sm, smf_gsm_state_operational)) {
./src/smf/nsmf-handler.c:                        smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:                smf_ue->supi, sess->psi, SmContextUpdateData->up_cnx_state);
./src/smf/nsmf-handler.c:            if (sess->handover.prepared == true) {
./src/smf/nsmf-handler.c:                if (memcmp(&sess->gnb_n3_ip, &sess->handover.gnb_n3_ip,
./src/smf/nsmf-handler.c:                            sizeof(sess->gnb_n3_ip)) != 0 ||
./src/smf/nsmf-handler.c:                    sess->gnb_n3_teid != sess->handover.gnb_n3_teid)
./src/smf/nsmf-handler.c:                memcpy(&sess->gnb_n3_ip,
./src/smf/nsmf-handler.c:                        &sess->handover.gnb_n3_ip, sizeof(sess->gnb_n3_ip));
./src/smf/nsmf-handler.c:                sess->gnb_n3_teid = sess->handover.gnb_n3_teid;
./src/smf/nsmf-handler.c:            sess->handover.prepared = false;
./src/smf/nsmf-handler.c:            ogs_list_for_each(&sess->bearer_list, qos_flow) {
./src/smf/nsmf-handler.c:                            &sess->gnb_n3_ip,
./src/smf/nsmf-handler.c:                    dl_far->outer_header_creation.teid = sess->gnb_n3_teid;
./src/smf/nsmf-handler.c:                        "[%s:%d] No FAR Update", smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:            sess->handover.prepared = false;
./src/smf/nsmf-handler.c:            ogs_list_for_each(&sess->bearer_list, qos_flow) {
./src/smf/nsmf-handler.c:                smf_ue->supi, sess->psi, SmContextUpdateData->ho_state);
./src/smf/nsmf-handler.c:        if (sess->ngap_state.pdu_session_resource_release ==
./src/smf/nsmf-handler.c:                    smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:            sess->serving_nf_id, SmContextUpdateData->serving_nf_id);
./src/smf/nsmf-handler.c:        if (sess->serving_nf_id)
./src/smf/nsmf-handler.c:            ogs_free(sess->serving_nf_id);
./src/smf/nsmf-handler.c:        sess->serving_nf_id = ogs_strdup(SmContextUpdateData->serving_nf_id);
./src/smf/nsmf-handler.c:        ogs_assert(sess->serving_nf_id);
./src/smf/nsmf-handler.c:        ogs_error("[%s:%d] No UpdateData", smf_ue->supi, sess->psi);
./src/smf/nsmf-handler.c:    smf_ue = sess->smf_ue;
./src/smf/nsmf-handler.c:                        &sess->nr_tai, &sess->nr_cgi, NrLocation);
./src/smf/nsmf-handler.c:                    ogs_sbi_time_from_string(&sess->ue_location_timestamp,
./src/smf/nsmf-handler.c:                    ogs_plmn_id_hexdump(&sess->nr_tai.plmn_id),
./src/smf/nsmf-handler.c:                    sess->nr_tai.tac.v);
./src/smf/nsmf-handler.c:                    ogs_plmn_id_hexdump(&sess->nr_cgi.plmn_id),
./src/smf/nsmf-handler.c:                    (long long)sess->nr_cgi.cell_id);
./src/smf/nsmf-handler.c:                smf_ue->supi, sess->psi);
./src/smf/s6b-path.c:    smf_ue = sess->smf_ue;
./src/smf/s6b-path.c:    if (sess->s6b_sid) {
./src/smf/s6b-path.c:        size_t sidlen = strlen(sess->s6b_sid);
./src/smf/s6b-path.c:        ret = fd_sess_fromsid_msg((os0_t)sess->s6b_sid, sidlen, &session, &new);
./src/smf/s6b-path.c:        ogs_debug("    Found S6b Session-Id: [%s]", sess->s6b_sid);
./src/smf/s6b-path.c:                req, (os0_t)sess->s6b_sid, sidlen);
./src/smf/s6b-path.c:        sess->s6b_sid = (char *)sess_data->s6b_sid;
./src/smf/s6b-path.c:    switch (sess->gtp_rat_type) {
./src/smf/s6b-path.c:        ogs_error("Unknown RAT Type [%d]", sess->gtp_rat_type);
./src/smf/s6b-path.c:                    ogs_plmn_id_mnc(&sess->serving_plmn_id),
./src/smf/s6b-path.c:                    ogs_plmn_id_mcc(&sess->serving_plmn_id));
./src/smf/s6b-path.c:                    ogs_plmn_id_mnc(&sess->serving_plmn_id),
./src/smf/s6b-path.c:                    ogs_plmn_id_mcc(&sess->serving_plmn_id));
./src/smf/s6b-path.c:    ogs_assert(sess->session.name);
./src/smf/s6b-path.c:    val.os.data = (uint8_t*)sess->session.name;
./src/smf/s6b-path.c:    val.os.len = strlen(sess->session.name);
./src/smf/s6b-path.c:    smf_ue = sess->smf_ue;
./src/smf/s6b-path.c:    ogs_assert(sess->s6b_sid);
./src/smf/s6b-path.c:    sidlen = strlen(sess->s6b_sid);
./src/smf/s6b-path.c:    ret = fd_sess_fromsid_msg((os0_t)sess->s6b_sid, sidlen, &session, &new);
./src/smf/s6b-path.c:    ogs_debug("    Found S6b Session-Id: [%s]", sess->s6b_sid);
./src/smf/s6b-path.c:    ret = ogs_diam_message_session_id_set(req, (os0_t)sess->s6b_sid, sidlen);
./src/smf/s6b-path.c:                    ogs_plmn_id_mnc(&sess->serving_plmn_id),
./src/smf/s6b-path.c:                    ogs_plmn_id_mcc(&sess->serving_plmn_id));
./src/smf/npcf-handler.c:        for (i = 0; i < sess->policy.num_of_pcc_rule; i++)
./src/smf/npcf-handler.c:            OGS_PCC_RULE_FREE(&sess->policy.pcc_rule[i]);
./src/smf/npcf-handler.c:        sess->policy.num_of_pcc_rule = 0;
./src/smf/npcf-handler.c:                &sess->policy.pcc_rule[sess->policy.num_of_pcc_rule];
./src/smf/npcf-handler.c:                sess->policy.num_of_pcc_rule++;
./src/smf/npcf-handler.c:            sess->policy.num_of_pcc_rule++;
./src/smf/npcf-handler.c:    smf_ue = sess->smf_ue;
./src/smf/npcf-handler.c:        ogs_error("[%s:%d] No http.location", smf_ue->supi, sess->psi);
./src/smf/npcf-handler.c:        ogs_error("[%s:%d] No SmPolicyDecision", smf_ue->supi, sess->psi);
./src/smf/npcf-handler.c:                smf_ue->supi, sess->psi, recvmsg->http.location);
./src/smf/npcf-handler.c:                smf_ue->supi, sess->psi, recvmsg->http.location);
./src/smf/npcf-handler.c:                smf_ue->supi, sess->psi, header.uri);
./src/smf/npcf-handler.c:        ogs_debug("[%s:%d] ogs_sbi_client_add()", smf_ue->supi, sess->psi);
./src/smf/npcf-handler.c:                    smf_ue->supi, sess->psi);
./src/smf/npcf-handler.c:    OGS_SBI_SETUP_CLIENT(&sess->policy_association, client);
./src/smf/npcf-handler.c:        sess->smpolicycontrol_features &= supported_features;
./src/smf/npcf-handler.c:        sess->smpolicycontrol_features = 0;
./src/smf/npcf-handler.c:                    sess->session.ambr.uplink =
./src/smf/npcf-handler.c:                    sess->session.ambr.downlink =
./src/smf/npcf-handler.c:                sess->session.qos.index = AuthDefQos->_5qi;
./src/smf/npcf-handler.c:                sess->session.qos.arp.priority_level =
./src/smf/npcf-handler.c:                    sess->session.qos.arp.priority_level =
./src/smf/npcf-handler.c:                        sess->session.qos.arp.pre_emption_capability =
./src/smf/npcf-handler.c:                        sess->session.qos.arp.pre_emption_capability =
./src/smf/npcf-handler.c:                    ogs_assert(sess->session.qos.arp.pre_emption_capability);
./src/smf/npcf-handler.c:                        sess->session.qos.arp.pre_emption_vulnerability =
./src/smf/npcf-handler.c:                        sess->session.qos.arp.pre_emption_vulnerability =
./src/smf/npcf-handler.c:                    ogs_assert(sess->session.qos.arp.pre_emption_vulnerability);
./src/smf/npcf-handler.c:    ogs_assert(sess->pfcp_node);
./src/smf/npcf-handler.c:    if (!OGS_FSM_CHECK(&sess->pfcp_node->sm, smf_pfcp_state_associated)) {
./src/smf/npcf-handler.c:        ogs_error("[%s:%d] No associated UPF", smf_ue->supi, sess->psi);
./src/smf/npcf-handler.c:    memcpy(&qos_flow->qos, &sess->session.qos, sizeof(ogs_qos_t));
./src/smf/npcf-handler.c:    qer->mbr.uplink = sess->session.ambr.uplink;
./src/smf/npcf-handler.c:    qer->mbr.downlink = sess->session.ambr.downlink;
./src/smf/npcf-handler.c:    cp2up_pdr = sess->cp2up_pdr;
./src/smf/npcf-handler.c:    up2cp_pdr = sess->up2cp_pdr;
./src/smf/npcf-handler.c:    up2cp_far = sess->up2cp_far;
./src/smf/npcf-handler.c:        ogs_pfcp_paa_to_ue_ip_addr(&sess->session.paa,
./src/smf/npcf-handler.c:        ogs_pfcp_paa_to_ue_ip_addr(&sess->session.paa,
./src/smf/npcf-handler.c:    if (sess->session.ipv4_framed_routes &&
./src/smf/npcf-handler.c:        sess->pfcp_node->up_function_features.frrt) {
./src/smf/npcf-handler.c:            const char *route = sess->session.ipv4_framed_routes[i];
./src/smf/npcf-handler.c:    if (sess->session.ipv6_framed_routes &&
./src/smf/npcf-handler.c:        sess->pfcp_node->up_function_features.frrt) {
./src/smf/npcf-handler.c:            const char *route = sess->session.ipv6_framed_routes[i];
./src/smf/npcf-handler.c:        smf_ue->supi, sess->session.name,
./src/smf/npcf-handler.c:        sess->ipv4 ? OGS_INET_NTOP(&sess->ipv4->addr, buf1) : "",
./src/smf/npcf-handler.c:        sess->ipv6 ? OGS_INET6_NTOP(&sess->ipv6->addr, buf2) : "");
./src/smf/npcf-handler.c:    up2cp_far->outer_header_creation.teid = sess->index;
./src/smf/npcf-handler.c:    ogs_assert(sess->pfcp_node);
./src/smf/npcf-handler.c:    if (sess->pfcp_node->up_function_features.ftup) {
./src/smf/npcf-handler.c:                &sess->pfcp_node->gtpu_resource_list,
./src/smf/npcf-handler.c:                sess->session.name, ul_pdr->src_if);
./src/smf/npcf-handler.c:                &sess->upf_n3_addr, &sess->upf_n3_addr6);
./src/smf/npcf-handler.c:                sess->upf_n3_teid = OGS_PFCP_GTPU_INDEX_TO_TEID(
./src/smf/npcf-handler.c:                sess->upf_n3_teid = ul_pdr->teid;
./src/smf/npcf-handler.c:            if (sess->pfcp_node->addr.ogs_sa_family == AF_INET)
./src/smf/npcf-handler.c:                        &sess->upf_n3_addr, &sess->pfcp_node->addr));
./src/smf/npcf-handler.c:            else if (sess->pfcp_node->addr.ogs_sa_family == AF_INET6)
./src/smf/npcf-handler.c:                        &sess->upf_n3_addr6, &sess->pfcp_node->addr));
./src/smf/npcf-handler.c:            sess->upf_n3_teid = ul_pdr->teid;
./src/smf/npcf-handler.c:                sess->upf_n3_addr, sess->upf_n3_addr6,
./src/smf/npcf-handler.c:        ul_pdr->f_teid.teid = sess->upf_n3_teid;
./src/smf/npcf-handler.c:                sess->upf_n3_addr, sess->upf_n3_addr6,
./src/smf/npcf-handler.c:                sess->upf_n3_addr, sess->upf_n3_addr6,
./src/smf/npcf-handler.c:        up2cp_pdr->f_teid.teid = sess->upf_n3_teid;
./src/smf/npcf-handler.c:    smf_ue = sess->smf_ue;
./src/smf/npcf-handler.c:                smf_ue->supi, sess->psi);
./src/smf/npcf-handler.c:                smf_ue->supi, sess->psi);
./src/smf/npcf-handler.c:    smf_ue = sess->smf_ue;
./src/smf/npcf-handler.c:                smf_ue->supi, sess->psi);
./lib/sbi/mhd-server.c:    sbi_sess->server = server;
./lib/sbi/mhd-server.c:    sbi_sess->request = request;
./lib/sbi/mhd-server.c:    sbi_sess->connection = connection;
./lib/sbi/mhd-server.c:    sbi_sess->timer = ogs_timer_add(
./lib/sbi/mhd-server.c:    if (!sbi_sess->timer) {
./lib/sbi/mhd-server.c:    ogs_timer_start(sbi_sess->timer,
./lib/sbi/mhd-server.c:    server = sbi_sess->server;
./lib/sbi/mhd-server.c:    ogs_assert(sbi_sess->timer);
./lib/sbi/mhd-server.c:    ogs_timer_delete(sbi_sess->timer);
./lib/sbi/mhd-server.c:    connection = sbi_sess->connection;
./lib/sbi/mhd-server.c:    connection = sbi_sess->connection;
./lib/sbi/mhd-server.c:    request = sbi_sess->request;
./lib/sbi/mhd-server.c:    ogs_assert(sbi_sess->server);
./lib/sbi/mhd-server.c:    return sbi_sess->server;
./lib/sbi/nghttp2-server.c:    ogs_assert(sbi_sess->session);
./lib/sbi/nghttp2-server.c:    sock = sbi_sess->sock;
./lib/sbi/nghttp2-server.c:        rv = nghttp2_submit_response(sbi_sess->session,
./lib/sbi/nghttp2-server.c:        rv = nghttp2_submit_response(sbi_sess->session,
./lib/sbi/nghttp2-server.c:                sbi_sess->session, NGHTTP2_FLAG_NONE, stream->stream_id, rv);
./lib/sbi/nghttp2-server.c:    ogs_assert(sbi_sess->server);
./lib/sbi/nghttp2-server.c:    return sbi_sess->server;
./lib/sbi/nghttp2-server.c:    sbi_sess->last_stream_id = stream_id;
./lib/sbi/nghttp2-server.c:    ogs_list_add(&sbi_sess->stream_list, stream);
./lib/sbi/nghttp2-server.c:    ogs_list_remove(&sbi_sess->stream_list, stream);
./lib/sbi/nghttp2-server.c:    ogs_list_for_each_safe(&sbi_sess->stream_list, next_stream, stream)
./lib/sbi/nghttp2-server.c:    sbi_sess->server = server;
./lib/sbi/nghttp2-server.c:    sbi_sess->sock = sock;
./lib/sbi/nghttp2-server.c:    sbi_sess->addr = ogs_calloc(1, sizeof(ogs_sockaddr_t));
./lib/sbi/nghttp2-server.c:    if (!sbi_sess->addr) {
./lib/sbi/nghttp2-server.c:    memcpy(sbi_sess->addr, &sock->remote_addr, sizeof(ogs_sockaddr_t));
./lib/sbi/nghttp2-server.c:        sbi_sess->ssl = SSL_new(server->ssl_ctx);
./lib/sbi/nghttp2-server.c:        if (!sbi_sess->ssl) {
./lib/sbi/nghttp2-server.c:            ogs_free(sbi_sess->addr);
./lib/sbi/nghttp2-server.c:            SSL_free(sbi_sess->ssl);
./lib/sbi/nghttp2-server.c:            ogs_free(sbi_sess->addr);
./lib/sbi/nghttp2-server.c:                    sbi_sess->ssl, (unsigned char *)context, strlen(context))) {
./lib/sbi/nghttp2-server.c:            ogs_free(sbi_sess->addr);
./lib/sbi/nghttp2-server.c:            SSL_free(sbi_sess->ssl);
./lib/sbi/nghttp2-server.c:    server = sbi_sess->server;
./lib/sbi/nghttp2-server.c:    if (sbi_sess->ssl)
./lib/sbi/nghttp2-server.c:        SSL_free(sbi_sess->ssl);
./lib/sbi/nghttp2-server.c:    nghttp2_session_del(sbi_sess->session);
./lib/sbi/nghttp2-server.c:    if (sbi_sess->poll.read)
./lib/sbi/nghttp2-server.c:        ogs_pollset_remove(sbi_sess->poll.read);
./lib/sbi/nghttp2-server.c:    if (sbi_sess->poll.write)
./lib/sbi/nghttp2-server.c:        ogs_pollset_remove(sbi_sess->poll.write);
./lib/sbi/nghttp2-server.c:    ogs_list_for_each_safe(&sbi_sess->write_queue, next_pkbuf, pkbuf) {
./lib/sbi/nghttp2-server.c:        ogs_list_remove(&sbi_sess->write_queue, pkbuf);
./lib/sbi/nghttp2-server.c:    ogs_assert(sbi_sess->addr);
./lib/sbi/nghttp2-server.c:    ogs_free(sbi_sess->addr);
./lib/sbi/nghttp2-server.c:    ogs_assert(sbi_sess->sock);
./lib/sbi/nghttp2-server.c:    ogs_sock_destroy(sbi_sess->sock);
./lib/sbi/nghttp2-server.c:    if (sbi_sess->ssl) {
./lib/sbi/nghttp2-server.c:        SSL_set_fd(sbi_sess->ssl, new->fd);
./lib/sbi/nghttp2-server.c:        SSL_set_accept_state(sbi_sess->ssl);
./lib/sbi/nghttp2-server.c:        err = SSL_accept(sbi_sess->ssl);
./lib/sbi/nghttp2-server.c:    sbi_sess->poll.read = ogs_pollset_add(ogs_app()->pollset,
./lib/sbi/nghttp2-server.c:    ogs_assert(sbi_sess->poll.read);
./lib/sbi/nghttp2-server.c:    addr = sbi_sess->addr;
./lib/sbi/nghttp2-server.c:    if (sbi_sess->ssl)
./lib/sbi/nghttp2-server.c:        n = SSL_read(sbi_sess->ssl, pkbuf->data, OGS_MAX_SDU_LEN);
./lib/sbi/nghttp2-server.c:        ogs_assert(sbi_sess->session);
./lib/sbi/nghttp2-server.c:                sbi_sess->session, pkbuf->data, pkbuf->len);
./lib/sbi/nghttp2-server.c:            if (nghttp2_session_want_write(sbi_sess->session))
./lib/sbi/nghttp2-server.c:    rv = nghttp2_session_server_new(&sbi_sess->session, callbacks, sbi_sess);
./lib/sbi/nghttp2-server.c:    server = sbi_sess->server;
./lib/sbi/nghttp2-server.c:            sbi_sess->settings.max_concurrent_streams =
./lib/sbi/nghttp2-server.c:            sbi_sess->settings.enable_push =
./lib/sbi/nghttp2-server.c:                sbi_sess->settings.max_concurrent_streams);
./lib/sbi/nghttp2-server.c:                sbi_sess->settings.enable_push ? "TRUE" : "false");
./lib/sbi/nghttp2-server.c:             session, NGHTTP2_FLAG_NONE, sbi_sess->last_stream_id,
./lib/sbi/nghttp2-server.c:    addr = sbi_sess->addr;
./lib/sbi/nghttp2-server.c:    addr = sbi_sess->addr;
./lib/sbi/nghttp2-server.c:    addr = sbi_sess->addr;
./lib/sbi/nghttp2-server.c:    addr = sbi_sess->addr;
./lib/sbi/nghttp2-server.c:        (hd->stream_id < sbi_sess->last_stream_id)) {
./lib/sbi/nghttp2-server.c:                hd->stream_id, sbi_sess->last_stream_id);
./lib/sbi/nghttp2-server.c:    ogs_assert(sbi_sess->session);
./lib/sbi/nghttp2-server.c:            sbi_sess->session, NGHTTP2_FLAG_NONE, iv, OGS_ARRAY_SIZE(iv));
./lib/sbi/nghttp2-server.c:    sock = sbi_sess->sock;
./lib/sbi/nghttp2-server.c:    ogs_assert(sbi_sess->session);
./lib/sbi/nghttp2-server.c:        data_len = nghttp2_session_mem_send(sbi_sess->session, &data);
./lib/sbi/nghttp2-server.c:    rv = nghttp2_session_send(sbi_sess->session);
./lib/sbi/nghttp2-server.c:    if (ogs_list_empty(&sbi_sess->write_queue) == true) {
./lib/sbi/nghttp2-server.c:        ogs_assert(sbi_sess->poll.write);
./lib/sbi/nghttp2-server.c:        ogs_pollset_remove(sbi_sess->poll.write);
./lib/sbi/nghttp2-server.c:        sbi_sess->poll.write = NULL;
./lib/sbi/nghttp2-server.c:    pkbuf = ogs_list_first(&sbi_sess->write_queue);
./lib/sbi/nghttp2-server.c:    ogs_list_remove(&sbi_sess->write_queue, pkbuf);
./lib/sbi/nghttp2-server.c:    if (sbi_sess->ssl)
./lib/sbi/nghttp2-server.c:        SSL_write(sbi_sess->ssl, pkbuf->data, pkbuf->len);
./lib/sbi/nghttp2-server.c:    sock = sbi_sess->sock;
./lib/sbi/nghttp2-server.c:    ogs_list_add(&sbi_sess->write_queue, pkbuf);
./lib/sbi/nghttp2-server.c:    if (!sbi_sess->poll.write) {
./lib/sbi/nghttp2-server.c:        sbi_sess->poll.write = ogs_pollset_add(ogs_app()->pollset,
./lib/sbi/nghttp2-server.c:        ogs_assert(sbi_sess->poll.write);
./lib/pfcp/context.c:    if (sess->bar) ogs_pfcp_bar_delete(sess->bar);
./lib/pfcp/context.c:    ogs_pool_alloc(&sess->pdr_id_pool, &pdr->id_node);
./lib/pfcp/context.c:    ogs_list_add(&sess->pdr_list, pdr);
./lib/pfcp/context.c:    ogs_list_for_each(&sess->pdr_list, pdr)
./lib/pfcp/context.c:    ogs_list_for_each(&sess->pdr_list, pdr) {
./lib/pfcp/context.c:    ogs_list_for_each(&sess->pdr_list, pdr)
./lib/pfcp/context.c:    ogs_list_remove(&sess->pdr_list, pdr);
./lib/pfcp/context.c:    ogs_list_insert_sorted(&sess->pdr_list, pdr, precedence_compare);
./lib/pfcp/context.c:    ogs_list_remove(&pdr->sess->pdr_list, pdr);
./lib/pfcp/context.c:        ogs_pool_free(&pdr->sess->pdr_id_pool, pdr->id_node);
./lib/pfcp/context.c:    ogs_list_for_each_safe(&sess->pdr_list, next_pdr, pdr)
./lib/pfcp/context.c:    ogs_pool_alloc(&sess->far_id_pool, &far->id_node);
./lib/pfcp/context.c:    ogs_list_add(&sess->far_list, far);
./lib/pfcp/context.c:    ogs_list_for_each(&sess->far_list, far)
./lib/pfcp/context.c:    ogs_list_for_each(&sess->far_list, far) {
./lib/pfcp/context.c:    ogs_list_remove(&sess->far_list, far);
./lib/pfcp/context.c:        ogs_pool_free(&far->sess->far_id_pool, far->id_node);
./lib/pfcp/context.c:    ogs_list_for_each_safe(&sess->far_list, next_far, far)
./lib/pfcp/context.c:    ogs_pool_alloc(&sess->urr_id_pool, &urr->id_node);
./lib/pfcp/context.c:    ogs_list_add(&sess->urr_list, urr);
./lib/pfcp/context.c:    ogs_list_for_each(&sess->urr_list, urr)
./lib/pfcp/context.c:    ogs_list_remove(&sess->urr_list, urr);
./lib/pfcp/context.c:        ogs_pool_free(&urr->sess->urr_id_pool, urr->id_node);
./lib/pfcp/context.c:    ogs_list_for_each_safe(&sess->urr_list, next_urr, urr)
./lib/pfcp/context.c:    ogs_pool_alloc(&sess->qer_id_pool, &qer->id_node);
./lib/pfcp/context.c:    ogs_list_add(&sess->qer_list, qer);
./lib/pfcp/context.c:    ogs_list_for_each(&sess->qer_list, qer)
./lib/pfcp/context.c:    ogs_list_remove(&sess->qer_list, qer);
./lib/pfcp/context.c:        ogs_pool_free(&qer->sess->qer_id_pool, qer->id_node);
./lib/pfcp/context.c:    ogs_list_for_each_safe(&sess->qer_list, next_qer, qer)
./lib/pfcp/context.c:    ogs_assert(sess->bar == NULL); /* Only One BAR is supported */
./lib/pfcp/context.c:    ogs_pool_alloc(&sess->bar_id_pool, &bar->id_node);
./lib/pfcp/context.c:    sess->bar = bar;
./lib/pfcp/context.c:        ogs_pool_free(&bar->sess->bar_id_pool, bar->id_node);
./lib/pfcp/context.c:    sess->bar = NULL;
./lib/pfcp/context.c:    ogs_list_for_each(&sess->pdr_list, pdr) {
./lib/pfcp/context.c:    sess->obj.type = OGS_PFCP_OBJ_SESS_TYPE;
./lib/pfcp/context.c:    ogs_pool_create(&sess->pdr_id_pool, OGS_MAX_NUM_OF_PDR);
./lib/pfcp/context.c:    ogs_pool_create(&sess->far_id_pool, OGS_MAX_NUM_OF_FAR);
./lib/pfcp/context.c:    ogs_pool_create(&sess->urr_id_pool, OGS_MAX_NUM_OF_URR);
./lib/pfcp/context.c:    ogs_pool_create(&sess->qer_id_pool, OGS_MAX_NUM_OF_QER);
./lib/pfcp/context.c:    ogs_pool_create(&sess->bar_id_pool, OGS_MAX_NUM_OF_BAR);
./lib/pfcp/context.c:    ogs_pool_sequence_id_generate(&sess->pdr_id_pool);
./lib/pfcp/context.c:    ogs_pool_sequence_id_generate(&sess->far_id_pool);
./lib/pfcp/context.c:    ogs_pool_sequence_id_generate(&sess->urr_id_pool);
./lib/pfcp/context.c:    ogs_pool_sequence_id_generate(&sess->qer_id_pool);
./lib/pfcp/context.c:    ogs_pool_sequence_id_generate(&sess->bar_id_pool);
./lib/pfcp/context.c:    ogs_pool_destroy(&sess->pdr_id_pool);
./lib/pfcp/context.c:    ogs_pool_destroy(&sess->far_id_pool);
./lib/pfcp/context.c:    ogs_pool_destroy(&sess->urr_id_pool);
./lib/pfcp/context.c:    ogs_pool_destroy(&sess->qer_id_pool);
./lib/pfcp/context.c:    ogs_pool_destroy(&sess->bar_id_pool);
./lib/pfcp/build.c:        ogs_assert(sess->bar);
./lib/pfcp/build.c:        message->bar_id.u8 = sess->bar->id;
./lib/pfcp/build.c:    ogs_assert(sess->bar);
./lib/pfcp/build.c:    message->bar_id.u8 = sess->bar->id;
./lib/pfcp/handler.c:    if (sess->bar)
./lib/pfcp/handler.c:        ogs_pfcp_bar_delete(sess->bar);
./lib/pfcp/handler.c:    ogs_assert(sess->bar);
./lib/pfcp/handler.c:    sess->bar->id = message->bar_id.u8;
./lib/pfcp/handler.c:    return sess->bar;
./lib/pfcp/handler.c:    if (sess->bar && sess->bar->id == message->bar_id.u8) {
./lib/pfcp/handler.c:        ogs_pfcp_bar_delete(sess->bar);
./lib/pfcp/handler.c:    ogs_error("[%p] Unknown BAR-ID[%d]", sess->bar, message->bar_id.u8);
./tests/handover/epc-x2-test.c:    memset(&sess->pdn_connectivity_param,
./tests/handover/epc-x2-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/handover/epc-x2-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/handover/epc-x2-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/handover/epc-x2-test.c:    sess->pdn_connectivity_param.request_type =
./tests/handover/epc-x2-test.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/handover/epc-x2-test.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/handover/epc-x2-test.c:    memset(&sess->pdn_connectivity_param,
./tests/handover/epc-x2-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/handover/epc-x2-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/handover/epc-x2-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/handover/epc-x2-test.c:    sess->pdn_connectivity_param.request_type =
./tests/handover/epc-x2-test.c:    bearer = ogs_list_first(&sess->bearer_list);
./tests/handover/epc-s1-test.c:    memset(&sess->pdn_connectivity_param,
./tests/handover/epc-s1-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/handover/epc-s1-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/handover/epc-s1-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/handover/epc-s1-test.c:    sess->pdn_connectivity_param.request_type =
./tests/handover/epc-s1-test.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/handover/epc-s1-test.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/handover/epc-s1-test.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/handover/epc-s1-test.c:    memset(&sess->pdn_connectivity_param,
./tests/handover/epc-s1-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/handover/epc-s1-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/handover/epc-s1-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/handover/epc-s1-test.c:    sess->pdn_connectivity_param.request_type =
./tests/handover/epc-s1-test.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/handover/epc-s1-test.c:    memset(&sess->pdn_connectivity_param,
./tests/handover/epc-s1-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/handover/epc-s1-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/handover/epc-s1-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/handover/epc-s1-test.c:    sess->pdn_connectivity_param.request_type =
./tests/handover/5gc-xn-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-xn-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/handover/5gc-xn-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/handover/5gc-xn-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/handover/5gc-xn-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/handover/5gc-xn-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-xn-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/handover/5gc-xn-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/handover/5gc-xn-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/handover/5gc-xn-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/handover/5gc-xn-test.c:    sess->gnb_n3_addr = test_self()->gnb2_addr;
./tests/handover/5gc-xn-test.c:    sess->gnb_n3_addr = test_self()->gnb1_addr;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/handover/5gc-n2-test.c:        sess->gnb_n3_addr = test_self()->gnb2_addr;
./tests/handover/5gc-n2-test.c:        sess->gnb_n3_addr = test_self()->gnb1_addr;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/handover/5gc-n2-test.c:        sess->gnb_n3_addr = test_self()->gnb2_addr;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/handover/5gc-n2-test.c:        sess->gnb_n3_addr = test_self()->gnb2_addr;
./tests/handover/5gc-n2-test.c:        sess->gnb_n3_addr = test_self()->gnb1_addr;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.request_type =
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/handover/5gc-n2-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/handover/5gc-n2-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/handover/5gc-n2-test.c:        sess->gnb_n3_addr = test_self()->gnb2_addr;
./tests/handover/5gc-n2-test.c:        sess->gnb_n3_addr = test_self()->gnb1_addr;
./tests/registration/reset-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/reset-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/reset-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/reset-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/reset-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/reset-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/reset-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/reset-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/reset-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/reset-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-multi-test2.c:		//printf("sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test2.c:		sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-multi-test2.c:   // printf("sess sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-multi-test2.c:   // printf("sess6 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-multi-test2.c:   // printf("sess61 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test2.c:    //printf("sess60 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test2.c:    //printf("sess6030 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test2.c:    //printf("sess600 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test2.c:    //printf("sess62 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-multi-test2.c:          sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test2.c:          sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-multi-test2.c:          sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/multi-ue-multi-test2.c:          sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-multi-test2.c:          sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/multi-ue-multi-test2.c:            sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-multi-test2.c:            sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test2.c:            sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-multi-test2.c:            sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-multi-test2.c:            sess->gnb_n3_addr = test_self()->gnb2_addr;
./tests/registration/multi-ue-multi-test2.c:            sess->gnb_n3_addr = test_self()->gnb1_addr;
./tests/registration/auth-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/auth-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/auth-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/auth-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/auth-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/auth-test.c:        1 << sess->psi;
./tests/registration/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/simple-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/simple-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/idle-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/idle-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/idle-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/idle-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/idle-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/idle-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/idle-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/idle-test.c:            1 << sess->psi;
./tests/registration/idle-test.c:            1 << sess->psi;
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/idle-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/idle-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/idle-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/gmm-status-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/gmm-status-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/gmm-status-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/gmm-status-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/gmm-status-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/paging-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/paging-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/paging-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/paging-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/paging-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/paging-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/paging-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/paging-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/paging-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:        sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/single-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/single-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/single-ue-multi-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/single-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/single-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:        1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:        1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:        1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:            1 << sess->psi;
./tests/registration/single-ue-multi-test.c:            1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:        1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/single-ue-multi-test.c:        1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/identity-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/identity-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/identity-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/identity-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/identity-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-test.c:		sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-multi-test.c:        sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-multi-test.c:		//printf("sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test.c:		sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-multi-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-multi-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-multi-test.c:   // printf("sess sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-multi-test.c:   // printf("sess6 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/multi-ue-multi-test.c:   // printf("sess61 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test.c:    //printf("sess60 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test.c:    //printf("sess6030 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test.c:    //printf("sess600 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test.c:    //printf("sess62 sess->dnn:%s\n",sess->dnn);
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/multi-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/ue-context-test.c:        1 << sess->psi;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/ue-context-test.c:        1 << sess->psi;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/ue-context-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/ue-context-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/ue-context-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/ue-context-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/dereg-test.c:        sess->ul_nas_transport_param.request_type =
./tests/registration/dereg-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/registration/dereg-test.c:        sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/dereg-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/dereg-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/registration/dereg-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/dereg-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/dereg-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/dereg-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/dereg-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/dereg-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/registration/dereg-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/registration/dereg-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/dereg-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/dereg-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/dereg-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/dereg-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/dereg-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/registration/crash-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/registration/crash-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/guti-test.c:        1 << sess->psi;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/guti-test.c:        1 << sess->psi;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/guti-test.c:        1 << sess->psi;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.request_type =
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/registration/guti-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/registration/guti-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/registration/guti-test.c:        1 << sess->psi;
./tests/regmutil/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/multi-ue-multi-test2.c:		//printf("sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test2.c:		sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/multi-ue-multi-test2.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/multi-ue-multi-test2.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/multi-ue-multi-test2.c:   // printf("sess sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/multi-ue-multi-test2.c:   // printf("sess6 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/multi-ue-multi-test2.c:   // printf("sess61 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test2.c:    //printf("sess60 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test2.c:    //printf("sess6030 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test2.c:    //printf("sess600 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test2.c:    //printf("sess62 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/multi-ue-multi-test2.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/multi-ue-multi-test2.c:          sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test2.c:          sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/multi-ue-multi-test2.c:          sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test2.c:          sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/multi-ue-multi-test2.c:          sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/multi-ue-multi-test2.c:            sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/multi-ue-multi-test2.c:            sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/multi-ue-multi-test2.c:            sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test2.c:            sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/multi-ue-multi-test2.c:            sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/multi-ue-multi-test2.c:            sess->gnb_n3_addr = test_self()->gnb2_addr;
./tests/regmutil/multi-ue-multi-test2.c:            sess->gnb_n3_addr = test_self()->gnb1_addr;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/single-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/single-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:        1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:        1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:        1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:            1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:            1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:        1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/single-ue-multi-test.c:        1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/single-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/multi-ue-multi-test.c:        sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/multi-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/multi-ue-multi-test.c:		//printf("sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test.c:		sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/multi-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/multi-ue-multi-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/multi-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/multi-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/multi-ue-multi-test.c:        sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/multi-ue-multi-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/multi-ue-multi-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/multi-ue-multi-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/multi-ue-multi-test.c:   // printf("sess sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/multi-ue-multi-test.c:   // printf("sess6 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/regmutil/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/regmutil/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/regmutil/multi-ue-multi-test.c:   // printf("sess61 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test.c:    //printf("sess60 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test.c:    //printf("sess6030 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test.c:    //printf("sess600 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test.c:    //printf("sess62 sess->dnn:%s\n",sess->dnn);
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.request_type =
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/regmutil/multi-ue-multi-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/volte/simple-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/simple-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/simple-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/simple-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/simple-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/simple-test.c:    sess->pti = 5;
./tests/volte/simple-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/simple-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/simple-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/bearer-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/bearer-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/bearer-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/bearer-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/bearer-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/bearer-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/bearer-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/bearer-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/bearer-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/bearer-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/cx-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/cx-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/cx-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/cx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/cx-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/cx-test.c:    sess->pti = 5;
./tests/volte/cx-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/cx-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/cx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/rx-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/rx-test.c:    sess->pti = 5;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->pti = 6;
./tests/volte/rx-test.c:    sess->pti = 7;
./tests/volte/rx-test.c:    sess->pti = 8;
./tests/volte/rx-test.c:    sess->pti = 9;
./tests/volte/rx-test.c:    sess->pti = 10;
./tests/volte/rx-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/rx-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/rx-test.c:    sess->pti = 5;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->pti = 6;
./tests/volte/rx-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/rx-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/rx-test.c:    sess->pti = 37;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->pti = 38;
./tests/volte/rx-test.c:    sess->pti = 39;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/rx-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/rx-test.c:    sess->pti = 7;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->pti = 8;
./tests/volte/rx-test.c:    sess->pti = 9;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/rx-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/rx-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/rx-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/rx-test.c:    sess->pti = 7;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/rx-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/rx-test.c:    sess->pti = 5;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/rx-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/rx-test.c:    sess->pti = 5;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/rx-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/rx-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/rx-test.c:    sess->pti = 5;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/rx-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/diameter-rx-path.c:    test_ue = sess->test_ue;
./tests/volte/diameter-rx-path.c:    ogs_assert(sess->ue_ip.ipv4);
./tests/volte/diameter-rx-path.c:    ipstr = ogs_ipv4_to_string(sess->ue_ip.addr);
./tests/volte/diameter-rx-path.c:    test_ue = sess->test_ue;
./tests/volte/diameter-rx-path.c:    ogs_assert(sess->ue_ip.ipv4);
./tests/volte/diameter-rx-path.c:    ipstr = ogs_ipv4_to_string(sess->ue_ip.addr);
./tests/volte/diameter-rx-path.c:    test_ue = sess->test_ue;
./tests/volte/diameter-rx-path.c:    ogs_assert(sess->ue_ip.ipv4);
./tests/volte/diameter-rx-path.c:    ipstr = ogs_ipv4_to_string(sess->ue_ip.addr);
./tests/volte/session-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/session-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/session-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/session-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/session-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/session-test.c:    sess->pti = 5;
./tests/volte/session-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/session-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/session-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/session-test.c:    sess->pti = 6;
./tests/volte/session-test.c:    sess->pti = 9;
./tests/volte/session-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/session-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/session-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/video-test.c:    memset(&sess->pdn_connectivity_param,
./tests/volte/video-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/volte/video-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/volte/video-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/video-test.c:    sess->esm_information_param.pco = 1;
./tests/volte/video-test.c:    sess->pti = 5;
./tests/volte/video-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/volte/video-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/volte/video-test.c:    sess->pdn_connectivity_param.request_type =
./tests/volte/video-test.c:    sess->pti = 10;
./tests/volte/video-test.c:    sess->pti = 20;
./tests/volte/video-test.c:    sess->pti = 30;
./tests/volte/video-test.c:    sess->pti = 40;
./tests/volte/video-test.c:    sess->pti = 50;
./tests/volte/video-test.c:    sess->pti = 55;
./tests/attach/reset-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/reset-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/reset-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/reset-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/reset-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/reset-test.c:        memset(&sess->pdn_connectivity_param,
./tests/attach/reset-test.c:                0, sizeof(sess->pdn_connectivity_param));
./tests/attach/reset-test.c:        sess->pdn_connectivity_param.eit = 1;
./tests/attach/reset-test.c:        sess->pdn_connectivity_param.pco = 1;
./tests/attach/reset-test.c:        sess->pdn_connectivity_param.request_type =
./tests/attach/reset-test.c:        memset(&sess->pdn_connectivity_param,
./tests/attach/reset-test.c:                0, sizeof(sess->pdn_connectivity_param));
./tests/attach/reset-test.c:        sess->pdn_connectivity_param.eit = 1;
./tests/attach/reset-test.c:        sess->pdn_connectivity_param.pco = 1;
./tests/attach/reset-test.c:        sess->pdn_connectivity_param.request_type =
./tests/attach/auth-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/auth-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/auth-test.c:    sess->pti = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/auth-test.c:    sess->pti = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/auth-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/auth-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/auth-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/simple-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/simple-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/simple-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/simple-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/simple-test.c:    sess->esm_information_param.epco = 1;
./tests/attach/idle-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/idle-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/idle-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/idle-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/idle-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/idle-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/idle-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/idle-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/idle-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/idle-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/idle-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/idle-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/idle-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/idle-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/idle-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/issues-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    sess->esm_information_param.pco = 1;
./tests/attach/issues-test.c:    sess->pti = 2;
./tests/attach/issues-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/issues-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    sess->pti = 3;
./tests/attach/issues-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/issues-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    sess->esm_information_param.pco = 0;
./tests/attach/issues-test.c:    sess->pti = 21;
./tests/attach/issues-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/issues-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    sess->pti = 8;
./tests/attach/issues-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/issues-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    sess->pti = 22;
./tests/attach/issues-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/issues-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.epco = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    sess->pti = 9;
./tests/attach/issues-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/issues-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.epco = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    sess->pti = 10;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    sess->pti = 8;
./tests/attach/issues-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/issues-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    sess->pti = 21;
./tests/attach/issues-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/issues-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    ogs_list_for_each(&sess->bearer_list, bearer)
./tests/attach/issues-test.c:    sess->pti = 1;
./tests/attach/issues-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/issues-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/issues-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/issues-test.c:    ogs_list_for_each(&sess->bearer_list, bearer)
./tests/attach/emm-status-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/emm-status-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/emm-status-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/emm-status-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/emm-status-test.c:    sess->esm_information_param.epco = 1;
./tests/attach/ue-context-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/ue-context-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/ue-context-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/ue-context-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.eit_no_required = 1;
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/ue-context-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/ue-context-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.eit_no_required = 1;
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/ue-context-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/ue-context-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.eit_no_required = 1;
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/ue-context-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/ue-context-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.eit_no_required = 1;
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/ue-context-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/crash-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/crash-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/crash-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/crash-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/crash-test.c:    sess->esm_information_param.epco = 1;
./tests/attach/guti-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/guti-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/guti-test.c:    sess->esm_information_param.pco = 1;
./tests/attach/guti-test.c:    sess->pti = 1;
./tests/attach/guti-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/guti-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.epco = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/guti-test.c:    sess->esm_information_param.pco = 1;
./tests/attach/guti-test.c:    sess->pti = 1;
./tests/attach/guti-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/guti-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/guti-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/guti-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/guti-test.c:    sess->pti = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/guti-test.c:    sess->pti = 1;
./tests/attach/guti-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/guti-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/guti-test.c:    sess->esm_information_param.pco = 1;
./tests/attach/guti-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/guti-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/guti-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/guti-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.eit_no_required = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/guti-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/guti-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.eit_no_required = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/guti-test.c:    sess->pti = 1;
./tests/attach/guti-test.c:    memset(&sess->pdn_connectivity_param,
./tests/attach/guti-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/attach/guti-test.c:    sess->pdn_connectivity_param.request_type =
./tests/attach/guti-test.c:    sess->esm_information_param.pco = 1;
./tests/non3gpp/epdg-test.c:    memset(&sess->pdn_connectivity_param,
./tests/non3gpp/epdg-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/non3gpp/epdg-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/non3gpp/epdg-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/non3gpp/epdg-test.c:    sess->pdn_connectivity_param.request_type =
./tests/non3gpp/epdg-test.c:    sess->pti = 5;
./tests/non3gpp/epdg-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/non3gpp/epdg-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/non3gpp/epdg-test.c:    sess->pdn_connectivity_param.request_type =
./tests/non3gpp/epdg-test.c:    sess->pdn_connectivity_param.apn = 1;
./tests/non3gpp/epdg-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/non3gpp/epdg-test.c:    sess->pdn_connectivity_param.request_type =
./tests/non3gpp/diameter-swx-path.c:    test_ue = sess->test_ue;
./tests/non3gpp/diameter-swx-path.c:    test_ue = sess->test_ue;
./tests/non3gpp/diameter-swx-path.c:    test_ue = sess->test_ue;
./tests/non3gpp/s2b-build.c:    test_ue = sess->test_ue;
./tests/non3gpp/s2b-build.c:    ogs_assert(0 == ogs_list_count(&sess->bearer_list));
./tests/non3gpp/s2b-build.c:    test_s2b_c_teid.teid = htobe32(sess->epdg_s2b_c_teid);
./tests/non3gpp/s2b-build.c:    ogs_assert(sess->gnode->sock);
./tests/non3gpp/s2b-build.c:            &sess->gnode->sock->local_addr, NULL, &test_s2b_c_teid, &len);
./tests/non3gpp/s2b-build.c:            apn, sess->apn, strlen(sess->apn));
./tests/non3gpp/s2b-build.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/non3gpp/s2b-build.c:        ogs_assert(sess->gnode->sock);
./tests/non3gpp/s2b-build.c:                &sess->gnode->sock->local_addr, NULL,
./tests/non3gpp/s2b-build.c:    bearer = ogs_list_first(&sess->bearer_list);
./tests/non3gpp/s2b-build.c:    ogs_assert(sess->gnode->sock);
./tests/non3gpp/s2b-build.c:            &sess->gnode->sock->local_addr, NULL, &epdg_s2b_u_teid, &len);
./tests/non3gpp/gtp-path.c:    ogs_assert(sess->gnode);
./tests/non3gpp/gtp-path.c:    rv = ogs_gtp_xact_receive(sess->gnode, &gtp_message.h, &xact);
./tests/non3gpp/gtp-path.c:    h.teid = sess->smf_s2b_c_teid;
./tests/non3gpp/gtp-path.c:    xact = ogs_gtp_xact_local_create(sess->gnode, &h, pkbuf, NULL, sess);
./tests/non3gpp/gtp-path.c:    h.teid = sess->smf_s2b_c_teid;
./tests/non3gpp/gtp-path.c:    xact = ogs_gtp_xact_local_create(sess->gnode, &h, pkbuf, NULL, sess);
./tests/non3gpp/gtp-path.c:    h.teid = sess->smf_s2b_c_teid;
./tests/non3gpp/gtp-path.c:    h.teid = sess->smf_s2b_c_teid;
./tests/non3gpp/s2b-handler.c:    sess->smf_s2b_c_teid = be32toh(smf_s2b_c_teid->teid);
./tests/non3gpp/s2b-handler.c:        sess->ue_ip.ipv4 = 1;
./tests/non3gpp/s2b-handler.c:        sess->ue_ip.addr = paa.addr;
./tests/non3gpp/s2b-handler.c:        sess->ue_ip.ipv6 = 1;
./tests/non3gpp/s2b-handler.c:        memset(sess->ue_ip.addr6, 0, 8);
./tests/non3gpp/s2b-handler.c:        memcpy(sess->ue_ip.addr6+8, paa.addr6, 8);
./tests/non3gpp/s2b-handler.c:        sess->ue_ip.ipv4 = 1;
./tests/non3gpp/s2b-handler.c:        sess->ue_ip.addr = paa.both.addr;
./tests/non3gpp/s2b-handler.c:        sess->ue_ip.ipv6 = 1;
./tests/non3gpp/s2b-handler.c:        memset(sess->ue_ip.addr6, 0, 8);
./tests/non3gpp/s2b-handler.c:        memcpy(sess->ue_ip.addr6+8, paa.both.addr6, 8);
./tests/non3gpp/s2b-handler.c:            linked_bearer->ebi + ogs_list_count(&sess->bearer_list));
./tests/af/context.c:    sess->app_session.af.id = ogs_msprintf("%d",
./tests/af/context.c:    ogs_assert(sess->app_session.af.id);
./tests/af/context.c:        sess->ipv4addr = ogs_ipv4_to_string(ue_address->addr);
./tests/af/context.c:        ogs_assert(sess->ipv4addr);
./tests/af/context.c:        sess->ipv6addr = ogs_ipv6addr_to_string(ue_address->addr6);
./tests/af/context.c:        ogs_assert(sess->ipv6addr);
./tests/af/context.c:        sess->ipv6prefix = ogs_ipv6prefix_to_string(
./tests/af/context.c:        ogs_assert(sess->ipv6prefix);
./tests/af/context.c:    OGS_SBI_FEATURES_SET(sess->policyauthorization_features,
./tests/af/context.c:    OGS_SBI_FEATURES_SET(sess->policyauthorization_features,
./tests/af/context.c:    ogs_sbi_object_free(&sess->sbi);
./tests/af/context.c:    if (sess->app_session.af.id)
./tests/af/context.c:        ogs_free(sess->app_session.af.id);
./tests/af/context.c:    if (sess->app_session.pcf.client)
./tests/af/context.c:        ogs_sbi_client_remove(sess->app_session.pcf.client);
./tests/af/context.c:    if (sess->ipv4addr)
./tests/af/context.c:        ogs_free(sess->ipv4addr);
./tests/af/context.c:    if (sess->ipv6addr)
./tests/af/context.c:        ogs_free(sess->ipv6addr);
./tests/af/context.c:    if (sess->ipv6prefix)
./tests/af/context.c:        ogs_free(sess->ipv6prefix);
./tests/af/context.c:    if (sess->supi)
./tests/af/context.c:        ogs_free(sess->supi);
./tests/af/context.c:    if (sess->gpsi)
./tests/af/context.c:        ogs_free(sess->gpsi);
./tests/af/context.c:    if (sess->dnn)
./tests/af/context.c:        ogs_free(sess->dnn);
./tests/af/context.c:    if (sess->pcf.fqdn)
./tests/af/context.c:        ogs_free(sess->pcf.fqdn);
./tests/af/context.c:    for (i = 0; i < sess->pcf.num_of_ip; i++) {
./tests/af/context.c:        if (sess->pcf.ip[i].addr)
./tests/af/context.c:            ogs_freeaddrinfo(sess->pcf.ip[i].addr);
./tests/af/context.c:        if (sess->pcf.ip[i].addr6)
./tests/af/context.c:            ogs_freeaddrinfo(sess->pcf.ip[i].addr6);
./tests/af/context.c:    sess->pcf.num_of_ip = 0;
./tests/af/context.c:    if (sess->pcf.client)
./tests/af/context.c:        ogs_sbi_client_remove(sess->pcf.client);
./tests/af/context.c:        if (sess->pcf.num_of_ip) {
./tests/af/context.c:            addr = sess->pcf.ip[0].addr;
./tests/af/context.c:            addr6 = sess->pcf.ip[0].addr6;
./tests/af/context.c:        if (sess->pcf.fqdn || addr || addr6) {
./tests/af/context.c:                    scheme, sess->pcf.fqdn, 0, addr, addr6);
./tests/af/context.c:                        scheme, sess->pcf.fqdn, 0, addr, addr6);
./tests/af/context.c:        OGS_SBI_SETUP_CLIENT(&sess->pcf, client);
./tests/af/npcf-build.c:    ogs_assert(sess->app_session.af.id);
./tests/af/npcf-build.c:    header.resource.component[1] = (char *)sess->app_session.af.id;
./tests/af/npcf-build.c:        ogs_uint64_to_string(sess->policyauthorization_features);
./tests/af/npcf-build.c:    AscReqData.ue_ipv4 = sess->ipv4addr;
./tests/af/npcf-build.c:    AscReqData.ue_ipv6 = sess->ipv6addr;
./tests/af/npcf-build.c:    AscReqData.dnn = sess->dnn;
./tests/af/npcf-build.c:    if (sess->s_nssai.sst) {
./tests/af/npcf-build.c:        sNssai.sst = sess->s_nssai.sst;
./tests/af/npcf-build.c:        sNssai.sd = ogs_s_nssai_sd_to_string(sess->s_nssai.sd);
./tests/af/npcf-build.c:    AscReqData.supi = sess->supi;
./tests/af/npcf-build.c:    AscReqData.gpsi = sess->gpsi;
./tests/af/npcf-build.c:    ogs_assert(sess->app_session.pcf.resource_uri);
./tests/af/npcf-build.c:    message.h.uri = sess->app_session.pcf.resource_uri;
./tests/af/npcf-build.c:    ogs_assert(sess->app_session.pcf.resource_uri);
./tests/af/npcf-build.c:            sess->app_session.pcf.resource_uri, OGS_SBI_RESOURCE_NAME_DELETE);
./tests/af/npcf-build.c:    ogs_assert(sess->app_session.af.id);
./tests/af/npcf-build.c:    header.resource.component[1] = (char *)sess->app_session.af.id;
./tests/af/npcf-build.c:        ogs_uint64_to_string(sess->policyauthorization_features);
./tests/af/npcf-build.c:    AscReqData.ue_ipv4 = sess->ipv4addr;
./tests/af/npcf-build.c:    AscReqData.ue_ipv6 = sess->ipv6addr;
./tests/af/npcf-build.c:    AscReqData.dnn = sess->dnn;
./tests/af/npcf-build.c:    if (sess->s_nssai.sst) {
./tests/af/npcf-build.c:        sNssai.sst = sess->s_nssai.sst;
./tests/af/npcf-build.c:        sNssai.sd = ogs_s_nssai_sd_to_string(sess->s_nssai.sd);
./tests/af/npcf-build.c:    AscReqData.supi = sess->supi;
./tests/af/npcf-build.c:    AscReqData.gpsi = sess->gpsi;
./tests/af/sbi-path.c:            &sess->sbi, service_type, discovery_option,
./tests/af/sbi-path.c:    client = sess->pcf.client;
./tests/af/nbsf-build.c:    message.param.ipv4addr = sess->ipv4addr;
./tests/af/nbsf-build.c:    message.param.ipv6prefix = sess->ipv6prefix;
./tests/af/nbsf-handler.c:        if (sess->pcf.fqdn)
./tests/af/nbsf-handler.c:            ogs_free(sess->pcf.fqdn);
./tests/af/nbsf-handler.c:        sess->pcf.fqdn = ogs_strdup(PcfBinding->pcf_fqdn);
./tests/af/nbsf-handler.c:        ogs_assert(sess->pcf.fqdn);
./tests/af/nbsf-handler.c:    for (i = 0; i < sess->pcf.num_of_ip; i++) {
./tests/af/nbsf-handler.c:        if (sess->pcf.ip[i].addr)
./tests/af/nbsf-handler.c:            ogs_freeaddrinfo(sess->pcf.ip[i].addr);
./tests/af/nbsf-handler.c:        if (sess->pcf.ip[i].addr6)
./tests/af/nbsf-handler.c:            ogs_freeaddrinfo(sess->pcf.ip[i].addr6);
./tests/af/nbsf-handler.c:    sess->pcf.num_of_ip = 0;
./tests/af/nbsf-handler.c:        if (sess->pcf.num_of_ip < OGS_SBI_MAX_NUM_OF_IP_ADDRESS) {
./tests/af/nbsf-handler.c:                sess->pcf.ip[sess->pcf.num_of_ip].is_port = IpEndPoint->is_port;
./tests/af/nbsf-handler.c:                sess->pcf.ip[sess->pcf.num_of_ip].port = port;
./tests/af/nbsf-handler.c:                sess->pcf.ip[sess->pcf.num_of_ip].addr = addr;
./tests/af/nbsf-handler.c:                sess->pcf.ip[sess->pcf.num_of_ip].addr6 = addr6;
./tests/af/nbsf-handler.c:                sess->pcf.num_of_ip++;
./tests/af/nbsf-handler.c:        if (sess->supi)
./tests/af/nbsf-handler.c:            ogs_free(sess->supi);
./tests/af/nbsf-handler.c:        sess->supi = ogs_strdup(PcfBinding->supi);
./tests/af/nbsf-handler.c:        ogs_assert(sess->supi);
./tests/af/nbsf-handler.c:        if (sess->gpsi)
./tests/af/nbsf-handler.c:            ogs_free(sess->gpsi);
./tests/af/nbsf-handler.c:        sess->gpsi = ogs_strdup(PcfBinding->gpsi);
./tests/af/nbsf-handler.c:        ogs_assert(sess->gpsi);
./tests/af/npcf-handler.c:                sess->ipv4addr ? sess->ipv4addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv6addr ? sess->ipv6addr : "Unknown");
./tests/af/npcf-handler.c:                sess->ipv4addr ? sess->ipv4addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv6addr ? sess->ipv6addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv4addr ? sess->ipv4addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv6addr ? sess->ipv6addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv4addr ? sess->ipv4addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv6addr ? sess->ipv6addr : "Unknown");
./tests/af/npcf-handler.c:                sess->ipv4addr ? sess->ipv4addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv6addr ? sess->ipv6addr : "Unknown");
./tests/af/npcf-handler.c:                sess->ipv4addr ? sess->ipv4addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv6addr ? sess->ipv6addr : "Unknown");
./tests/af/npcf-handler.c:                sess->ipv4addr ? sess->ipv4addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv6addr ? sess->ipv6addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv4addr ? sess->ipv4addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv6addr ? sess->ipv6addr : "Unknown");
./tests/af/npcf-handler.c:    OGS_SBI_SETUP_CLIENT(&sess->app_session.pcf, client);
./tests/af/npcf-handler.c:    sess->policyauthorization_features &= supported_features;
./tests/af/npcf-handler.c:                sess->ipv4addr ? sess->ipv4addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv6addr ? sess->ipv6addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv4addr ? sess->ipv4addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv6addr ? sess->ipv6addr : "Unknown");
./tests/af/npcf-handler.c:                sess->ipv4addr ? sess->ipv4addr : "Unknown",
./tests/af/npcf-handler.c:                sess->ipv6addr ? sess->ipv6addr : "Unknown");
./tests/common/ngap-handler.c:                            &sess->upf_n3_ip);
./tests/common/ngap-handler.c:                            &gTPTunnel->gTP_TEID, &sess->upf_n3_teid);
./tests/common/ngap-handler.c:                            &sess->upf_n3_ip);
./tests/common/ngap-handler.c:                            &gTPTunnel->gTP_TEID, &sess->upf_n3_teid);
./tests/common/ngap-handler.c:                    sess->handover.data_forwarding_not_possible = true;
./tests/common/ngap-handler.c:                                &sess->handover.upf_dl_ip);
./tests/common/ngap-handler.c:                                &sess->handover.upf_dl_teid);
./tests/common/esm-build.c:    test_ue = sess->test_ue;
./tests/common/esm-build.c:    if (!sess->pti) {
./tests/common/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti;
./tests/common/esm-build.c:    request_type->value = sess->pdn_connectivity_param.request_type;
./tests/common/esm-build.c:    if (sess->pdn_connectivity_param.apn) {
./tests/common/esm-build.c:        ogs_cpystrn(access_point_name->apn, sess->apn,
./tests/common/esm-build.c:                ogs_min(strlen(sess->apn), OGS_MAX_APN_LEN) + 1);
./tests/common/esm-build.c:        access_point_name->length = strlen(sess->apn);
./tests/common/esm-build.c:    if (sess->pdn_connectivity_param.eit ||
./tests/common/esm-build.c:        sess->pdn_connectivity_param.eit_no_required) {
./tests/common/esm-build.c:            sess->pdn_connectivity_param.eit;
./tests/common/esm-build.c:    if (sess->pdn_connectivity_param.pco) {
./tests/common/esm-build.c:    } else if (sess->pdn_connectivity_param.epco) {
./tests/common/esm-build.c:    test_ue = sess->test_ue;
./tests/common/esm-build.c:    bearer = ogs_list_first(&sess->bearer_list);
./tests/common/esm-build.c:    if (!sess->pti) {
./tests/common/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti;
./tests/common/esm-build.c:    test_ue = sess->test_ue;
./tests/common/esm-build.c:    if (!sess->pti) {
./tests/common/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti;
./tests/common/esm-build.c:    ogs_assert(sess->apn);
./tests/common/esm-build.c:    ogs_cpystrn(access_point_name->apn, sess->apn,
./tests/common/esm-build.c:            ogs_min(strlen(sess->apn), OGS_MAX_APN_LEN) + 1);
./tests/common/esm-build.c:    access_point_name->length = strlen(sess->apn);
./tests/common/esm-build.c:    if (sess->esm_information_param.pco) {
./tests/common/esm-build.c:    } else if (sess->esm_information_param.epco) {
./tests/common/esm-build.c:    test_ue = sess->test_ue;
./tests/common/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti = 0;
./tests/common/esm-build.c:    test_ue = sess->test_ue;
./tests/common/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti = 0;
./tests/common/esm-build.c:    test_ue = sess->test_ue;
./tests/common/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti = 0;
./tests/common/esm-build.c:    test_ue = sess->test_ue;
./tests/common/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti = 0;
./tests/common/esm-build.c:    test_ue = sess->test_ue;
./tests/common/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti = 0;
./tests/common/esm-build.c:    test_ue = sess->test_ue;
./tests/common/esm-build.c:    if (!sess->pti) {
./tests/common/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti;
./tests/common/esm-build.c:    test_ue = sess->test_ue;
./tests/common/esm-build.c:    if (!sess->pti) {
./tests/common/esm-build.c:    message.esm.h.procedure_transaction_identity = sess->pti;
./tests/common/context.c:    sess->index = ogs_pool_index(&test_sess_pool, sess);
./tests/common/context.c:    sess->apn = ogs_strdup(apn);
./tests/common/context.c:    ogs_assert(sess->apn);
./tests/common/context.c:    sess->gtp_rat_type = rat_type;
./tests/common/context.c:    ogs_assert(sess->gtp_rat_type);
./tests/common/context.c:    sess->pti = 1; /* Default PTI : 1 */
./tests/common/context.c:    sess->epdg_s2b_c_teid = sess->index;
./tests/common/context.c:    sess->test_ue = test_ue;
./tests/common/context.c:    sess->index = ogs_pool_index(&test_sess_pool, sess);
./tests/common/context.c:    sess->dnn = ogs_strdup(dnn);
./tests/common/context.c:    ogs_assert(sess->dnn);
./tests/common/context.c:    sess->psi = psi;
./tests/common/context.c:    sess->pti = 1; /* Default PTI : 1 */
./tests/common/context.c:    sess->gnb_n3_addr = test_self()->gnb1_addr;
./tests/common/context.c:    sess->gnb_n3_addr6 = test_self()->gnb1_addr6;
./tests/common/context.c:    sess->gnb_n3_teid = sess->index;
./tests/common/context.c:    sess->pdu_session_type = OGS_PDU_SESSION_TYPE_IPV4V6;
./tests/common/context.c:    sess->test_ue = test_ue;
./tests/common/context.c:    test_ue = sess->test_ue;
./tests/common/context.c:    if (sess->dnn)
./tests/common/context.c:        ogs_free(sess->dnn);
./tests/common/context.c:        if (ogs_strcasecmp(sess->apn, apn) == 0 &&
./tests/common/context.c:            sess->gtp_rat_type == rat_type)
./tests/common/context.c:        if (sess->pti == pti) return sess;
./tests/common/context.c:        if (sess->psi == psi) return sess;
./tests/common/context.c:    ogs_list_add(&sess->bearer_list, bearer);
./tests/common/context.c:    ogs_list_add(&sess->bearer_list, bearer);
./tests/common/context.c:    ogs_list_add(&sess->bearer_list, qos_flow);
./tests/common/context.c:    ogs_list_add(&sess->bearer_list, qos_flow);
./tests/common/context.c:    ogs_list_remove(&bearer->sess->bearer_list, bearer);
./tests/common/context.c:    ogs_list_remove(&bearer->sess->bearer_list, bearer);
./tests/common/context.c:    ogs_list_for_each_safe(&sess->bearer_list, next_bearer, bearer)
./tests/common/context.c:    ogs_list_for_each(&sess->bearer_list, bearer)
./tests/common/context.c:        if (sess->gtp_rat_type != OGS_GTP2_RAT_TYPE_EUTRAN)
./tests/common/context.c:    ogs_list_for_each(&sess->bearer_list, qos_flow)
./tests/common/gsm-build.c:    message.gsm.h.pdu_session_identity = test_sess->psi;
./tests/common/gsm-build.c:    message.gsm.h.procedure_transaction_identity = test_sess->pti;
./tests/common/gsm-build.c:    pdu_session_type->value = test_sess->pdu_session_type;
./tests/common/gsm-build.c:    if (test_sess->pdu_session_establishment_param.ssc_mode) {
./tests/common/gsm-build.c:    if (test_sess->pdu_session_establishment_param.epco) {
./tests/common/gsm-build.c:    message.gsm.h.pdu_session_identity = test_sess->psi;
./tests/common/gsm-build.c:    message.gsm.h.procedure_transaction_identity = test_sess->pti;
./tests/common/gsm-build.c:    message.gsm.h.pdu_session_identity = test_sess->psi;
./tests/common/gsm-build.c:    message.gsm.h.procedure_transaction_identity = test_sess->pti;
./tests/common/gsm-build.c:    message.gsm.h.pdu_session_identity = test_sess->psi;
./tests/common/gsm-build.c:    message.gsm.h.procedure_transaction_identity = test_sess->pti;
./tests/common/gsm-build.c:    message.gsm.h.pdu_session_identity = test_sess->psi;
./tests/common/gsm-build.c:    message.gsm.h.procedure_transaction_identity = test_sess->pti;
./tests/common/gmm-build.c:    test_ue = test_sess->test_ue;
./tests/common/gmm-build.c:    *pdu_session_id = test_sess->psi;
./tests/common/gmm-build.c:    if (test_sess->ul_nas_transport_param.request_type) {
./tests/common/gmm-build.c:        request_type->value = test_sess->ul_nas_transport_param.request_type;
./tests/common/gmm-build.c:    if (test_sess->ul_nas_transport_param.s_nssai) {
./tests/common/gmm-build.c:    if (test_sess->ul_nas_transport_param.dnn) {
./tests/common/gmm-build.c:        ul_nas_transport->dnn.length = strlen(test_sess->dnn);
./tests/common/gmm-build.c:        ogs_cpystrn(ul_nas_transport->dnn.value, test_sess->dnn,
./tests/common/gtpu.c:            ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/common/gtpu.c:            if (sess->gnb_n3_teid == teid) goto found;
./tests/common/gtpu.c:                sess->ue_ip.addr6[i] |=
./tests/common/gtpu.c:        if (sess->upf_n3_ip.ipv4) {
./tests/common/gtpu.c:            gnode.addr.sin.sin_addr.s_addr = sess->upf_n3_ip.addr;
./tests/common/gtpu.c:        } else if (sess->upf_n3_ip.ipv6) {
./tests/common/gtpu.c:                    sess->upf_n3_ip.addr6, OGS_IPV6_LEN);
./tests/common/gtpu.c:        ip_h->ip_src.s_addr = sess->ue_ip.addr;
./tests/common/gtpu.c:        memcpy(p, sess->ue_ip.addr6, sizeof sess->ue_ip.addr6);
./tests/common/gtpu.c:        p += sizeof sess->ue_ip.addr6;
./tests/common/gtpu.c:                sess->ue_ip.addr6, sizeof sess->ue_ip.addr6);
./tests/common/gtpu.c:        header_desc.teid = sess->upf_n3_teid;
./tests/common/gtpu.c:    memcpy(src_addr + 8, sess->ue_ip.addr6 + 8, 8);
./tests/common/gtpu.c:        header_desc.teid = sess->upf_n3_teid;
./tests/common/gtpu.c:        header_desc.teid = sess->upf_n3_teid;
./tests/common/gtpu.c:        header_desc.teid = sess->upf_n3_teid;
./tests/common/gtpu.c:        teid = sess->gnb_n3_teid;
./tests/common/gtpu.c:        header_desc.teid = sess->handover.upf_dl_teid;
./tests/common/emm-build.c:            ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/common/emm-build.c:            ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/common/s1ap-build.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/common/s1ap-build.c:    test_ue = sess->test_ue;
./tests/common/s1ap-build.c:    test_ue = sess->test_ue;
./tests/common/s1ap-build.c:    test_ue = sess->test_ue;
./tests/common/s1ap-build.c:    test_ue = sess->test_ue;
./tests/common/s1ap-build.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/common/s1ap-build.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/common/s1ap-build.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/common/s1ap-build.c:        ogs_list_for_each(&sess->bearer_list, bearer) {
./tests/common/gsm-handler.c:            sess->ue_ip.ipv4 = 1;
./tests/common/gsm-handler.c:            sess->ue_ip.addr = pdu_address->addr;
./tests/common/gsm-handler.c:            sess->ue_ip.ipv6 = 1;
./tests/common/gsm-handler.c:            memset(sess->ue_ip.addr6, 0, 8);
./tests/common/gsm-handler.c:            memcpy(sess->ue_ip.addr6+8, pdu_address->addr6, 8);
./tests/common/gsm-handler.c:            sess->ue_ip.ipv4 = 1;
./tests/common/gsm-handler.c:            sess->ue_ip.addr = pdu_address->both.addr;
./tests/common/gsm-handler.c:            sess->ue_ip.ipv6 = 1;
./tests/common/gsm-handler.c:            memset(sess->ue_ip.addr6, 0, 8);
./tests/common/gsm-handler.c:            memcpy(sess->ue_ip.addr6+8, pdu_address->both.addr6, 8);
./tests/common/nas-path.c:    test_ue = sess->test_ue;
./tests/common/nas-path.c:    sess->pti = message.gsm.h.procedure_transaction_identity;
./tests/common/ngap-build.c:            PDUSessionItem->pDUSessionID = sess->psi;
./tests/common/ngap-build.c:            PDUSessionItem->pDUSessionID = sess->psi;
./tests/common/ngap-build.c:        PDUSessionItem->pDUSessionID = sess->psi;
./tests/common/ngap-build.c:    test_ue = sess->test_ue;
./tests/common/ngap-build.c:    PDUSessionItem->pDUSessionID = sess->psi;
./tests/common/ngap-build.c:    test_ue = sess->test_ue;
./tests/common/ngap-build.c:    PDUSessionFailedItem->pDUSessionID = sess->psi;
./tests/common/ngap-build.c:    test_ue = sess->test_ue;
./tests/common/ngap-build.c:    PDUSessionItem->pDUSessionID = sess->psi;
./tests/common/ngap-build.c:    ogs_list_init(&sess->qos_flow_to_modify_list);
./tests/common/ngap-build.c:    ogs_list_add(&sess->qos_flow_to_modify_list, &qos_flow->to_modify_node);
./tests/common/ngap-build.c:    test_ue = sess->test_ue;
./tests/common/ngap-build.c:    PDUSessionItem->pDUSessionID = sess->psi;
./tests/common/ngap-build.c:    test_ue = sess->test_ue;
./tests/common/ngap-build.c:    PDUSessionItem->pDUSessionID = sess->psi;
./tests/common/ngap-build.c:        PDUSessionItem->pDUSessionID = sess->psi;
./tests/common/ngap-build.c:        PDUSessionItem->pDUSessionID = sess->psi;
./tests/common/ngap-build.c:        PDUSessionItem->pDUSessionID = sess->psi;
./tests/common/ngap-build.c:        *dRB_ID = sess->psi;
./tests/common/ngap-build.c:    ogs_assert(sess->gnb_n3_addr || sess->gnb_n3_addr6);
./tests/common/ngap-build.c:            sess->gnb_n3_addr, sess->gnb_n3_addr6, &f_teid, &len);
./tests/common/ngap-build.c:    ogs_asn_uint32_to_OCTET_STRING(sess->gnb_n3_teid, &gTPTunnel->gTP_TEID);
./tests/common/ngap-build.c:    ogs_list_for_each(&sess->bearer_list, qos_flow) {
./tests/common/ngap-build.c:                &sess->qos_flow_to_modify_list, qos_flow, to_modify_node) {
./tests/common/ngap-build.c:    ogs_assert(sess->gnb_n3_addr || sess->gnb_n3_addr6);
./tests/common/ngap-build.c:            sess->gnb_n3_addr, sess->gnb_n3_addr6, &f_teid, &len);
./tests/common/ngap-build.c:    ogs_asn_uint32_to_OCTET_STRING(sess->gnb_n3_teid, &gTPTunnel->gTP_TEID);
./tests/common/ngap-build.c:    ogs_list_for_each(&sess->bearer_list, qos_flow) {
./tests/common/ngap-build.c:    ogs_assert(sess->gnb_n3_addr || sess->gnb_n3_addr6);
./tests/common/ngap-build.c:            sess->gnb_n3_addr, sess->gnb_n3_addr6, &f_teid, &len);
./tests/common/ngap-build.c:    ogs_asn_uint32_to_OCTET_STRING(sess->gnb_n3_teid, &gTPTunnel->gTP_TEID);
./tests/common/ngap-build.c:    if (sess->handover.data_forwarding_not_possible) {
./tests/common/ngap-build.c:        ogs_asn_uint32_to_OCTET_STRING(sess->gnb_n3_teid+10,
./tests/common/ngap-build.c:    ogs_list_for_each(&sess->bearer_list, qos_flow) {
./tests/common/esm-handler.c:    ogs_assert(sess->pti == message->esm.h.procedure_transaction_identity);
./tests/common/esm-handler.c:        sess->ue_ip.ipv4 = 1;
./tests/common/esm-handler.c:        sess->ue_ip.addr = pdn_address->addr;
./tests/common/esm-handler.c:        sess->ue_ip.ipv6 = 1;
./tests/common/esm-handler.c:        memset(sess->ue_ip.addr6, 0, 8);
./tests/common/esm-handler.c:        memcpy(sess->ue_ip.addr6+8, pdn_address->addr6, 8);
./tests/common/esm-handler.c:        sess->ue_ip.ipv4 = 1;
./tests/common/esm-handler.c:        sess->ue_ip.addr = pdn_address->both.addr;
./tests/common/esm-handler.c:        sess->ue_ip.ipv6 = 1;
./tests/common/esm-handler.c:        memset(sess->ue_ip.addr6, 0, 8);
./tests/common/esm-handler.c:        memcpy(sess->ue_ip.addr6+8, pdn_address->both.addr6, 8);
./tests/common/esm-handler.c:    ogs_assert(sess->pti == message->esm.h.procedure_transaction_identity);
./tests/common/esm-handler.c:    ogs_assert(sess->pti == message->esm.h.procedure_transaction_identity);
./tests/common/esm-handler.c:    ogs_assert(sess->pti == message->esm.h.procedure_transaction_identity);
./tests/csfb/mo-active-test.c:    memset(&sess->pdn_connectivity_param,
./tests/csfb/mo-active-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/csfb/mo-active-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/csfb/mo-active-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/csfb/mo-active-test.c:    sess->pdn_connectivity_param.request_type =
./tests/csfb/mt-idle-test.c:    memset(&sess->pdn_connectivity_param,
./tests/csfb/mt-idle-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/csfb/mt-idle-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/csfb/mt-idle-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/csfb/mt-idle-test.c:    sess->pdn_connectivity_param.request_type =
./tests/csfb/mt-active-test.c:    memset(&sess->pdn_connectivity_param,
./tests/csfb/mt-active-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/csfb/mt-active-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/csfb/mt-active-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/csfb/mt-active-test.c:    sess->pdn_connectivity_param.request_type =
./tests/csfb/mo-idle-test.c:    memset(&sess->pdn_connectivity_param,
./tests/csfb/mo-idle-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.request_type =
./tests/csfb/mo-idle-test.c:    memset(&sess->pdn_connectivity_param,
./tests/csfb/mo-idle-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.request_type =
./tests/csfb/mo-idle-test.c:    memset(&sess->pdn_connectivity_param,
./tests/csfb/mo-idle-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.request_type =
./tests/csfb/mo-idle-test.c:    memset(&sess->pdn_connectivity_param,
./tests/csfb/mo-idle-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.request_type =
./tests/csfb/mo-idle-test.c:    memset(&sess->pdn_connectivity_param,
./tests/csfb/mo-idle-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/csfb/mo-idle-test.c:    sess->pdn_connectivity_param.request_type =
./tests/csfb/mt-sms-test.c:    memset(&sess->pdn_connectivity_param,
./tests/csfb/mt-sms-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/csfb/mt-sms-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/csfb/mt-sms-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/csfb/mt-sms-test.c:    sess->pdn_connectivity_param.request_type =
./tests/csfb/mo-sms-test.c:    memset(&sess->pdn_connectivity_param,
./tests/csfb/mo-sms-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/csfb/mo-sms-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/csfb/mo-sms-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/csfb/mo-sms-test.c:    sess->pdn_connectivity_param.request_type =
./tests/csfb/crash-test.c:    memset(&sess->pdn_connectivity_param,
./tests/csfb/crash-test.c:            0, sizeof(sess->pdn_connectivity_param));
./tests/csfb/crash-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/csfb/crash-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/csfb/crash-test.c:    sess->pdn_connectivity_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/simple-test.c:    af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/simple-test.c:    af_sess->supi = ogs_strdup(test_ue->supi);
./tests/vonr/simple-test.c:    ogs_assert(af_sess->supi);
./tests/vonr/simple-test.c:    af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/simple-test.c:    ogs_assert(af_sess->dnn);
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/simple-test.c:    af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/simple-test.c:    af_sess->supi = ogs_strdup(test_ue->supi);
./tests/vonr/simple-test.c:    ogs_assert(af_sess->supi);
./tests/vonr/simple-test.c:    af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/simple-test.c:    ogs_assert(af_sess->dnn);
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/simple-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/simple-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/diameter-rx-path.c:    test_ue = sess->test_ue;
./tests/vonr/diameter-rx-path.c:    ogs_assert(sess->ue_ip.ipv4);
./tests/vonr/diameter-rx-path.c:    ipstr = ogs_ipv4_to_string(sess->ue_ip.addr);
./tests/vonr/diameter-rx-path.c:    test_ue = sess->test_ue;
./tests/vonr/diameter-rx-path.c:    ogs_assert(sess->ue_ip.ipv4);
./tests/vonr/diameter-rx-path.c:    ipstr = ogs_ipv4_to_string(sess->ue_ip.addr);
./tests/vonr/diameter-rx-path.c:    test_ue = sess->test_ue;
./tests/vonr/diameter-rx-path.c:    ogs_assert(sess->ue_ip.ipv4);
./tests/vonr/diameter-rx-path.c:    ipstr = ogs_ipv4_to_string(sess->ue_ip.addr);
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/session-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/vonr/session-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/session-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/session-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/video-test.c:    af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/video-test.c:    af_sess->supi = ogs_strdup(test_ue->supi);
./tests/vonr/video-test.c:    ogs_assert(af_sess->supi);
./tests/vonr/video-test.c:    af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/video-test.c:    ogs_assert(af_sess->dnn);
./tests/vonr/video-test.c:    ogs_list_init(&sess->qos_flow_to_modify_list);
./tests/vonr/video-test.c:    ogs_list_add(&sess->qos_flow_to_modify_list, &qos_flow->to_modify_node);
./tests/vonr/video-test.c:    ogs_list_add(&sess->qos_flow_to_modify_list, &qos_flow->to_modify_node);
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/video-test.c:    sess->pti = 8;
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/video-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/video-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/af-test.c:    af_sess->supi = ogs_strdup(test_ue->supi);
./tests/vonr/af-test.c:    ogs_assert(af_sess->supi);
./tests/vonr/af-test.c:    af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/af-test.c:    ogs_assert(af_sess->dnn);
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->pti = 8;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->pti = 9;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->pti = 10;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/af-test.c:    af_sess->supi = ogs_strdup(test_ue->supi);
./tests/vonr/af-test.c:    ogs_assert(af_sess->supi);
./tests/vonr/af-test.c:    af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/af-test.c:    ogs_assert(af_sess->dnn);
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->pti = 9;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/af-test.c:    af_sess->supi = ogs_strdup(test_ue->supi);
./tests/vonr/af-test.c:    ogs_assert(af_sess->supi);
./tests/vonr/af-test.c:    af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/af-test.c:    ogs_assert(af_sess->dnn);
./tests/vonr/af-test.c:    sess->pti = 38;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->pti = 39;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->pti = 6;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->pti = 7;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->pti = 8;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->pti = 9;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/af-test.c:    af_sess->supi = ogs_strdup(test_ue->supi);
./tests/vonr/af-test.c:    ogs_assert(af_sess->supi);
./tests/vonr/af-test.c:    af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/af-test.c:    ogs_assert(af_sess->dnn);
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->pti = 9;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/af-test.c:    af_sess->supi = ogs_strdup(test_ue->supi);
./tests/vonr/af-test.c:    ogs_assert(af_sess->supi);
./tests/vonr/af-test.c:    af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/af-test.c:    ogs_assert(af_sess->dnn);
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    af_sess1 = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/af-test.c:    af_sess1->dnn = ogs_strdup(sess->dnn);
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    af_sess2 = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/af-test.c:    af_sess2->dnn = ogs_strdup(sess->dnn);
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/af-test.c:    af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/af-test.c:    af_sess->supi = ogs_strdup(test_ue->supi);
./tests/vonr/af-test.c:    ogs_assert(af_sess->supi);
./tests/vonr/af-test.c:    af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/af-test.c:    ogs_assert(af_sess->dnn);
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/af-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/af-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:            sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:            sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:            sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:            sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:            af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/vonr-multi-ue-test.c:            af_sess->supi = ogs_strdup(test_ue->supi);
./tests/vonr/vonr-multi-ue-test.c:            ogs_assert(af_sess->supi);
./tests/vonr/vonr-multi-ue-test.c:            af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/vonr-multi-ue-test.c:            ogs_assert(af_sess->dnn);
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:            sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:            sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:            sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:            sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:            sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:        af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/vonr-multi-ue-test.c:        af_sess->supi = ogs_strdup(test_ue->supi);
./tests/vonr/vonr-multi-ue-test.c:        ogs_assert(af_sess->supi);
./tests/vonr/vonr-multi-ue-test.c:        af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/vonr-multi-ue-test.c:        ogs_assert(af_sess->dnn);
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:        af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/vonr-multi-ue-test.c:        af_sess->supi = ogs_strdup(test_ue[i]->supi);
./tests/vonr/vonr-multi-ue-test.c:        ogs_assert(af_sess->supi);
./tests/vonr/vonr-multi-ue-test.c:        af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/vonr-multi-ue-test.c:        ogs_assert(af_sess->dnn);
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:        sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:    af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/vonr-multi-ue-test.c:    af_sess->supi = ogs_strdup(test_ue[i]->supi);
./tests/vonr/vonr-multi-ue-test.c:    ogs_assert(af_sess->supi);
./tests/vonr/vonr-multi-ue-test.c:    af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/vonr-multi-ue-test.c:    ogs_assert(af_sess->dnn);
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pti = 8;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pti = 9;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pti = 10;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    test_ue[i]->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:    af_sess = af_sess_add_by_ue_address(&sess->ue_ip);
./tests/vonr/vonr-multi-ue-test.c:    af_sess->supi = ogs_strdup(test_ue[i]->supi);
./tests/vonr/vonr-multi-ue-test.c:    ogs_assert(af_sess->supi);
./tests/vonr/vonr-multi-ue-test.c:    af_sess->dnn = ogs_strdup(sess->dnn);
./tests/vonr/vonr-multi-ue-test.c:    ogs_assert(af_sess->dnn);
./tests/vonr/vonr-multi-ue-test.c:    ogs_list_init(&sess->qos_flow_to_modify_list);
./tests/vonr/vonr-multi-ue-test.c:    ogs_list_add(&sess->qos_flow_to_modify_list, &qos_flow->to_modify_node);
./tests/vonr/vonr-multi-ue-test.c:    ogs_list_add(&sess->qos_flow_to_modify_list, &qos_flow->to_modify_node);
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pti = 8;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/vonr-multi-ue-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/qos-flow-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/qos-flow-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/qos-flow-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/qos-flow-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/qos-flow-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/vonr/qos-flow-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/vonr/qos-flow-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.request_type =
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/vonr/qos-flow-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/vonr/qos-flow-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/vonr/qos-flow-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/vonr/qos-flow-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/slice/same-dnn-test.c:    sess->pti = 20;
./tests/slice/same-dnn-test.c:    sess->pdu_session_type = OGS_PDU_SESSION_TYPE_IPV4;
./tests/slice/same-dnn-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/same-dnn-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/same-dnn-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/same-dnn-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/same-dnn-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/same-dnn-test.c:    sess->pti = 20;
./tests/slice/same-dnn-test.c:    sess->pdu_session_type = OGS_PDU_SESSION_TYPE_IPV4;
./tests/slice/same-dnn-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/same-dnn-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/same-dnn-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/same-dnn-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/same-dnn-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/paging-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/slice/paging-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/paging-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/slice/paging-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/slice/paging-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type = 0;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 0;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 0;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 0;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 0;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/paging-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/slice/paging-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/paging-test.c:    sess->ul_nas_transport_param.s_nssai = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/paging-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/slice/paging-test.c:    test_ue->service_request_param.psimask.pdu_session_status = 1 << sess->psi;
./tests/slice/paging-test.c:    test_ue->service_request_param.psimask.uplink_data_status = 1 << sess->psi;
./tests/slice/different-dnn-test.c:    sess->pti = 20;
./tests/slice/different-dnn-test.c:    sess->pdu_session_type = OGS_PDU_SESSION_TYPE_IPV4;
./tests/slice/different-dnn-test.c:    sess->ul_nas_transport_param.request_type =
./tests/slice/different-dnn-test.c:    sess->ul_nas_transport_param.dnn = 1;
./tests/slice/different-dnn-test.c:    sess->pdu_session_establishment_param.ssc_mode = 1;
./tests/slice/different-dnn-test.c:    sess->pdu_session_establishment_param.epco = 1;
./tests/310014/epc-test.c:    sess->pdn_connectivity_param.eit = 1;
./tests/310014/epc-test.c:    sess->pdn_connectivity_param.pco = 1;
./tests/310014/epc-test.c:    sess->pdn_connectivity_param.request_type =
./tests/310014/epc-test.c:    ogs_list_for_each(&sess->bearer_list, bearer) {
./test.si4project/Backup/telnetcmd(7602).c:               sess->upf_n4_seid,
./test.si4project/Backup/telnetcmd(7602).c:               sess->smf_n4_f_seid.seid,
./test.si4project/Backup/telnetcmd(7602).c:               sess->smf_n4_f_seid.ip.ipv4 ? ogs_ipv4_to_string(sess->smf_n4_f_seid.ip.addr):"",
./test.si4project/Backup/telnetcmd(7602).c:               sess->ipv4 ? OGS_INET_NTOP(&sess->ipv4->addr, buf1) : "",
./test.si4project/Backup/telnetcmd(7602).c:               sess->ipv6 ? OGS_INET6_NTOP(&sess->ipv6->addr, buf2) : "",
./test.si4project/Backup/telnetcmd(7602).c:               sess->apn_dnn);
./test.si4project/Backup/telnetcmd(7602).c:    printf("  |--upf_n4_seid        : %lu \r\n", sess->upf_n4_seid);
./test.si4project/Backup/telnetcmd(7602).c:    printf("  |--smf_n4_seid        : %lu \r\n", sess->smf_n4_f_seid.seid);
./test.si4project/Backup/telnetcmd(7602).c:    printf("  |--smf_n4_ip          : %s \r\n", ogs_ipv4_to_string(sess->smf_n4_f_seid.ip.addr));
./test.si4project/Backup/telnetcmd(7602).c:    printf("      |--pdr_cnt           : %d \r\n", ogs_list_count(&sess->pfcp.pdr_list));
./test.si4project/Backup/telnetcmd(7602).c:    ogs_list_for_each(&sess->pfcp.pdr_list, pdr){
./test.si4project/Backup/telnetcmd(7602).c:    printf("     |--far_cnt           : %d \r\n", ogs_list_count(&sess->pfcp.far_list));
./test.si4project/Backup/telnetcmd(7602).c:    ogs_list_for_each(&sess->pfcp.far_list, far){
./test.si4project/Backup/telnetcmd(7602).c:    printf("     |--urr_cnt           : %d \r\n", ogs_list_count(&sess->pfcp.urr_list));
./test.si4project/Backup/telnetcmd(7602).c:    ogs_list_for_each(&sess->pfcp.urr_list, urr){
./test.si4project/Backup/telnetcmd(7602).c:    printf("     |--qer_cnt           : %d \r\n", ogs_list_count(&sess->pfcp.qer_list));
./test.si4project/Backup/telnetcmd(7602).c:    ogs_list_for_each(&sess->pfcp.qer_list, qer){
./subprojects/freeDiameter/libfdproto/sessions.c:	sess->eyec = SI_EYEC;
./subprojects/freeDiameter/libfdproto/sessions.c:	sess->sid  = sid;
./subprojects/freeDiameter/libfdproto/sessions.c:	sess->sidlen = sidlen;
./subprojects/freeDiameter/libfdproto/sessions.c:	sess->hash = hash;
./subprojects/freeDiameter/libfdproto/sessions.c:	fd_list_init(&sess->chain_h, sess);
./subprojects/freeDiameter/libfdproto/sessions.c:	CHECK_SYS_DO( clock_gettime(CLOCK_REALTIME, &sess->timeout), return NULL );
./subprojects/freeDiameter/libfdproto/sessions.c:	sess->timeout.tv_sec += SESS_DEFAULT_LIFETIME;
./subprojects/freeDiameter/libfdproto/sessions.c:	fd_list_init(&sess->expire, sess);
./subprojects/freeDiameter/libfdproto/sessions.c:	CHECK_POSIX_DO( pthread_mutex_init(&sess->stlock, NULL), return NULL );
./subprojects/freeDiameter/libfdproto/sessions.c:	fd_list_init(&sess->states, sess);
./subprojects/freeDiameter/libfdproto/sessions.c:			CHECK_POSIX(  pthread_mutex_lock(&sess->stlock)  );
./subprojects/freeDiameter/libfdproto/sessions.c:			for (li_st = sess->states.next; li_st != &sess->states; li_st = li_st->next) { /* for each state in this session */
./subprojects/freeDiameter/libfdproto/sessions.c:					st->sid = sess->sid;
./subprojects/freeDiameter/libfdproto/sessions.c:			CHECK_POSIX(  pthread_mutex_unlock(&sess->stlock)  );
./subprojects/freeDiameter/libfdproto/sessions.c:		fd_list_insert_before(li, &sess->chain_h); /* hash table */
./subprojects/freeDiameter/libfdproto/sessions.c:		sess->msg_cnt++;
./subprojects/freeDiameter/libfdproto/sessions.c:			sess->is_destroyed = 0;
./subprojects/freeDiameter/libfdproto/sessions.c:			CHECK_SYS_DO( clock_gettime(CLOCK_REALTIME, &sess->timeout), { ASSERT(0); } );
./subprojects/freeDiameter/libfdproto/sessions.c:			sess->timeout.tv_sec += SESS_DEFAULT_LIFETIME;
./subprojects/freeDiameter/libfdproto/sessions.c:		if (TS_IS_INFERIOR( &s->timeout, &sess->timeout ) )
./subprojects/freeDiameter/libfdproto/sessions.c:	fd_list_insert_after( li, &sess->expire );
./subprojects/freeDiameter/libfdproto/sessions.c:	CHECK_POSIX( pthread_mutex_lock( H_LOCK(sess->hash) ) );
./subprojects/freeDiameter/libfdproto/sessions.c:	pthread_cleanup_push( fd_cleanup_mutex, H_LOCK(sess->hash) );
./subprojects/freeDiameter/libfdproto/sessions.c:	if (!FD_IS_LIST_EMPTY(&sess->expire)) {
./subprojects/freeDiameter/libfdproto/sessions.c:		fd_list_unlink( &sess->expire ); /* no need to signal the condition here */
./subprojects/freeDiameter/libfdproto/sessions.c:	CHECK_POSIX_DO( pthread_mutex_lock( &sess->stlock ), { ASSERT(0); /* otherwise cleanup handler is not pop'd */ } );
./subprojects/freeDiameter/libfdproto/sessions.c:	while (!FD_IS_LIST_EMPTY(&sess->states)) {
./subprojects/freeDiameter/libfdproto/sessions.c:		struct state * st = (struct state *)(sess->states.next->o);
./subprojects/freeDiameter/libfdproto/sessions.c:	CHECK_POSIX_DO( pthread_mutex_unlock( &sess->stlock ), { ASSERT(0); /* otherwise cleanup handler is not pop'd */ } );
./subprojects/freeDiameter/libfdproto/sessions.c:	destroy_now = (sess->msg_cnt == 0);
./subprojects/freeDiameter/libfdproto/sessions.c:		fd_list_unlink( &sess->chain_h );
./subprojects/freeDiameter/libfdproto/sessions.c:		sid = sess->sid;
./subprojects/freeDiameter/libfdproto/sessions.c:		sess->is_destroyed = 1;
./subprojects/freeDiameter/libfdproto/sessions.c:		CHECK_MALLOC_DO( sid = os0dup(sess->sid, sess->sidlen), ret = ENOMEM );
./subprojects/freeDiameter/libfdproto/sessions.c:	CHECK_POSIX( pthread_mutex_unlock( H_LOCK(sess->hash) ) );
./subprojects/freeDiameter/libfdproto/sessions.c:	hash = sess->hash;
./subprojects/freeDiameter/libfdproto/sessions.c:	CHECK_POSIX_DO( pthread_mutex_lock( &sess->stlock ), { ASSERT(0); /* otherwise, cleanup not poped on FreeBSD */ } );
./subprojects/freeDiameter/libfdproto/sessions.c:	pthread_cleanup_push( fd_cleanup_mutex, &sess->stlock );
./subprojects/freeDiameter/libfdproto/sessions.c:	if (FD_IS_LIST_EMPTY(&sess->states)) {
./subprojects/freeDiameter/libfdproto/sessions.c:		fd_list_unlink( &sess->expire );
./subprojects/freeDiameter/libfdproto/sessions.c:		destroy_now = (sess->msg_cnt == 0);
./subprojects/freeDiameter/libfdproto/sessions.c:			fd_list_unlink(&sess->chain_h);
./subprojects/freeDiameter/libfdproto/sessions.c:			sess->is_destroyed = 1;
./subprojects/freeDiameter/libfdproto/sessions.c:	CHECK_POSIX_DO( pthread_mutex_unlock( &sess->stlock ), { ASSERT(0); /* otherwise, cleanup not poped on FreeBSD */ } );
